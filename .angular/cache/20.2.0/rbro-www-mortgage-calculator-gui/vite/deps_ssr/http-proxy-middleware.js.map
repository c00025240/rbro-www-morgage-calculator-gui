{
  "version": 3,
  "sources": ["../../../../../../node_modules/eventemitter3/index.js", "../../../../../../node_modules/requires-port/index.js", "../../../../../../node_modules/http-proxy/lib/http-proxy/common.js", "../../../../../../node_modules/http-proxy/lib/http-proxy/passes/web-outgoing.js", "../../../../../../node_modules/follow-redirects/debug.js", "../../../../../../node_modules/follow-redirects/index.js", "../../../../../../node_modules/http-proxy/lib/http-proxy/passes/web-incoming.js", "../../../../../../node_modules/http-proxy/lib/http-proxy/passes/ws-incoming.js", "../../../../../../node_modules/http-proxy/lib/http-proxy/index.js", "../../../../../../node_modules/http-proxy/lib/http-proxy.js", "../../../../../../node_modules/http-proxy/index.js", "../../../../../../node_modules/is-plain-obj/index.js", "../../../../../../node_modules/http-proxy-middleware/dist/errors.js", "../../../../../../node_modules/http-proxy-middleware/dist/logger.js", "../../../../../../node_modules/http-proxy-middleware/dist/config-factory.js", "../../../../../../node_modules/is-extglob/index.js", "../../../../../../node_modules/is-glob/index.js", "../../../../../../node_modules/braces/lib/utils.js", "../../../../../../node_modules/braces/lib/stringify.js", "../../../../../../node_modules/is-number/index.js", "../../../../../../node_modules/to-regex-range/index.js", "../../../../../../node_modules/fill-range/index.js", "../../../../../../node_modules/braces/lib/compile.js", "../../../../../../node_modules/braces/lib/expand.js", "../../../../../../node_modules/braces/lib/constants.js", "../../../../../../node_modules/braces/lib/parse.js", "../../../../../../node_modules/braces/index.js", "../../../../../../node_modules/picomatch/lib/constants.js", "../../../../../../node_modules/picomatch/lib/utils.js", "../../../../../../node_modules/picomatch/lib/scan.js", "../../../../../../node_modules/picomatch/lib/parse.js", "../../../../../../node_modules/picomatch/lib/picomatch.js", "../../../../../../node_modules/picomatch/index.js", "../../../../../../node_modules/micromatch/index.js", "../../../../../../node_modules/http-proxy-middleware/dist/context-matcher.js", "../../../../../../node_modules/http-proxy-middleware/dist/_handlers.js", "../../../../../../node_modules/http-proxy-middleware/dist/path-rewriter.js", "../../../../../../node_modules/http-proxy-middleware/dist/router.js", "../../../../../../node_modules/http-proxy-middleware/dist/http-proxy-middleware.js", "../../../../../../node_modules/http-proxy-middleware/dist/handlers/response-interceptor.js", "../../../../../../node_modules/http-proxy-middleware/dist/handlers/fix-request-body.js", "../../../../../../node_modules/http-proxy-middleware/dist/handlers/public.js", "../../../../../../node_modules/http-proxy-middleware/dist/handlers/index.js", "../../../../../../node_modules/http-proxy-middleware/dist/index.js"],
  "sourcesContent": ["'use strict';\r\n\r\nvar has = Object.prototype.hasOwnProperty\r\n  , prefix = '~';\r\n\r\n/**\r\n * Constructor to create a storage for our `EE` objects.\r\n * An `Events` instance is a plain object whose properties are event names.\r\n *\r\n * @constructor\r\n * @private\r\n */\r\nfunction Events() {}\r\n\r\n//\r\n// We try to not inherit from `Object.prototype`. In some engines creating an\r\n// instance in this way is faster than calling `Object.create(null)` directly.\r\n// If `Object.create(null)` is not supported we prefix the event names with a\r\n// character to make sure that the built-in object properties are not\r\n// overridden or used as an attack vector.\r\n//\r\nif (Object.create) {\r\n  Events.prototype = Object.create(null);\r\n\r\n  //\r\n  // This hack is needed because the `__proto__` property is still inherited in\r\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\r\n  //\r\n  if (!new Events().__proto__) prefix = false;\r\n}\r\n\r\n/**\r\n * Representation of a single event listener.\r\n *\r\n * @param {Function} fn The listener function.\r\n * @param {*} context The context to invoke the listener with.\r\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\r\n * @constructor\r\n * @private\r\n */\r\nfunction EE(fn, context, once) {\r\n  this.fn = fn;\r\n  this.context = context;\r\n  this.once = once || false;\r\n}\r\n\r\n/**\r\n * Add a listener for a given event.\r\n *\r\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\r\n * @param {(String|Symbol)} event The event name.\r\n * @param {Function} fn The listener function.\r\n * @param {*} context The context to invoke the listener with.\r\n * @param {Boolean} once Specify if the listener is a one-time listener.\r\n * @returns {EventEmitter}\r\n * @private\r\n */\r\nfunction addListener(emitter, event, fn, context, once) {\r\n  if (typeof fn !== 'function') {\r\n    throw new TypeError('The listener must be a function');\r\n  }\r\n\r\n  var listener = new EE(fn, context || emitter, once)\r\n    , evt = prefix ? prefix + event : event;\r\n\r\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\r\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\r\n  else emitter._events[evt] = [emitter._events[evt], listener];\r\n\r\n  return emitter;\r\n}\r\n\r\n/**\r\n * Clear event by name.\r\n *\r\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\r\n * @param {(String|Symbol)} evt The Event name.\r\n * @private\r\n */\r\nfunction clearEvent(emitter, evt) {\r\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\r\n  else delete emitter._events[evt];\r\n}\r\n\r\n/**\r\n * Minimal `EventEmitter` interface that is molded against the Node.js\r\n * `EventEmitter` interface.\r\n *\r\n * @constructor\r\n * @public\r\n */\r\nfunction EventEmitter() {\r\n  this._events = new Events();\r\n  this._eventsCount = 0;\r\n}\r\n\r\n/**\r\n * Return an array listing the events for which the emitter has registered\r\n * listeners.\r\n *\r\n * @returns {Array}\r\n * @public\r\n */\r\nEventEmitter.prototype.eventNames = function eventNames() {\r\n  var names = []\r\n    , events\r\n    , name;\r\n\r\n  if (this._eventsCount === 0) return names;\r\n\r\n  for (name in (events = this._events)) {\r\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\r\n  }\r\n\r\n  if (Object.getOwnPropertySymbols) {\r\n    return names.concat(Object.getOwnPropertySymbols(events));\r\n  }\r\n\r\n  return names;\r\n};\r\n\r\n/**\r\n * Return the listeners registered for a given event.\r\n *\r\n * @param {(String|Symbol)} event The event name.\r\n * @returns {Array} The registered listeners.\r\n * @public\r\n */\r\nEventEmitter.prototype.listeners = function listeners(event) {\r\n  var evt = prefix ? prefix + event : event\r\n    , handlers = this._events[evt];\r\n\r\n  if (!handlers) return [];\r\n  if (handlers.fn) return [handlers.fn];\r\n\r\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\r\n    ee[i] = handlers[i].fn;\r\n  }\r\n\r\n  return ee;\r\n};\r\n\r\n/**\r\n * Return the number of listeners listening to a given event.\r\n *\r\n * @param {(String|Symbol)} event The event name.\r\n * @returns {Number} The number of listeners.\r\n * @public\r\n */\r\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\r\n  var evt = prefix ? prefix + event : event\r\n    , listeners = this._events[evt];\r\n\r\n  if (!listeners) return 0;\r\n  if (listeners.fn) return 1;\r\n  return listeners.length;\r\n};\r\n\r\n/**\r\n * Calls each of the listeners registered for a given event.\r\n *\r\n * @param {(String|Symbol)} event The event name.\r\n * @returns {Boolean} `true` if the event had listeners, else `false`.\r\n * @public\r\n */\r\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\r\n  var evt = prefix ? prefix + event : event;\r\n\r\n  if (!this._events[evt]) return false;\r\n\r\n  var listeners = this._events[evt]\r\n    , len = arguments.length\r\n    , args\r\n    , i;\r\n\r\n  if (listeners.fn) {\r\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\r\n\r\n    switch (len) {\r\n      case 1: return listeners.fn.call(listeners.context), true;\r\n      case 2: return listeners.fn.call(listeners.context, a1), true;\r\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\r\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\r\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\r\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\r\n    }\r\n\r\n    for (i = 1, args = new Array(len -1); i < len; i++) {\r\n      args[i - 1] = arguments[i];\r\n    }\r\n\r\n    listeners.fn.apply(listeners.context, args);\r\n  } else {\r\n    var length = listeners.length\r\n      , j;\r\n\r\n    for (i = 0; i < length; i++) {\r\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\r\n\r\n      switch (len) {\r\n        case 1: listeners[i].fn.call(listeners[i].context); break;\r\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\r\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\r\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\r\n        default:\r\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\r\n            args[j - 1] = arguments[j];\r\n          }\r\n\r\n          listeners[i].fn.apply(listeners[i].context, args);\r\n      }\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\n/**\r\n * Add a listener for a given event.\r\n *\r\n * @param {(String|Symbol)} event The event name.\r\n * @param {Function} fn The listener function.\r\n * @param {*} [context=this] The context to invoke the listener with.\r\n * @returns {EventEmitter} `this`.\r\n * @public\r\n */\r\nEventEmitter.prototype.on = function on(event, fn, context) {\r\n  return addListener(this, event, fn, context, false);\r\n};\r\n\r\n/**\r\n * Add a one-time listener for a given event.\r\n *\r\n * @param {(String|Symbol)} event The event name.\r\n * @param {Function} fn The listener function.\r\n * @param {*} [context=this] The context to invoke the listener with.\r\n * @returns {EventEmitter} `this`.\r\n * @public\r\n */\r\nEventEmitter.prototype.once = function once(event, fn, context) {\r\n  return addListener(this, event, fn, context, true);\r\n};\r\n\r\n/**\r\n * Remove the listeners of a given event.\r\n *\r\n * @param {(String|Symbol)} event The event name.\r\n * @param {Function} fn Only remove the listeners that match this function.\r\n * @param {*} context Only remove the listeners that have this context.\r\n * @param {Boolean} once Only remove one-time listeners.\r\n * @returns {EventEmitter} `this`.\r\n * @public\r\n */\r\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\r\n  var evt = prefix ? prefix + event : event;\r\n\r\n  if (!this._events[evt]) return this;\r\n  if (!fn) {\r\n    clearEvent(this, evt);\r\n    return this;\r\n  }\r\n\r\n  var listeners = this._events[evt];\r\n\r\n  if (listeners.fn) {\r\n    if (\r\n      listeners.fn === fn &&\r\n      (!once || listeners.once) &&\r\n      (!context || listeners.context === context)\r\n    ) {\r\n      clearEvent(this, evt);\r\n    }\r\n  } else {\r\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\r\n      if (\r\n        listeners[i].fn !== fn ||\r\n        (once && !listeners[i].once) ||\r\n        (context && listeners[i].context !== context)\r\n      ) {\r\n        events.push(listeners[i]);\r\n      }\r\n    }\r\n\r\n    //\r\n    // Reset the array, or remove it completely if we have no more listeners.\r\n    //\r\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\r\n    else clearEvent(this, evt);\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove all listeners, or those of the specified event.\r\n *\r\n * @param {(String|Symbol)} [event] The event name.\r\n * @returns {EventEmitter} `this`.\r\n * @public\r\n */\r\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\r\n  var evt;\r\n\r\n  if (event) {\r\n    evt = prefix ? prefix + event : event;\r\n    if (this._events[evt]) clearEvent(this, evt);\r\n  } else {\r\n    this._events = new Events();\r\n    this._eventsCount = 0;\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n//\r\n// Alias methods names because people roll like that.\r\n//\r\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\r\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\r\n\r\n//\r\n// Expose the prefix.\r\n//\r\nEventEmitter.prefixed = prefix;\r\n\r\n//\r\n// Allow `EventEmitter` to be imported as module namespace.\r\n//\r\nEventEmitter.EventEmitter = EventEmitter;\r\n\r\n//\r\n// Expose the module.\r\n//\r\nif ('undefined' !== typeof module) {\r\n  module.exports = EventEmitter;\r\n}\r\n", "'use strict';\r\n\r\n/**\r\n * Check if we're required to add a port number.\r\n *\r\n * @see https://url.spec.whatwg.org/#default-port\r\n * @param {Number|String} port Port number we need to check\r\n * @param {String} protocol Protocol we need to check against.\r\n * @returns {Boolean} Is it a default port for the given protocol\r\n * @api private\r\n */\r\nmodule.exports = function required(port, protocol) {\r\n  protocol = protocol.split(':')[0];\r\n  port = +port;\r\n\r\n  if (!port) return false;\r\n\r\n  switch (protocol) {\r\n    case 'http':\r\n    case 'ws':\r\n    return port !== 80;\r\n\r\n    case 'https':\r\n    case 'wss':\r\n    return port !== 443;\r\n\r\n    case 'ftp':\r\n    return port !== 21;\r\n\r\n    case 'gopher':\r\n    return port !== 70;\r\n\r\n    case 'file':\r\n    return false;\r\n  }\r\n\r\n  return port !== 0;\r\n};\r\n", "var common   = exports,\r\n    url      = require('url'),\r\n    extend   = require('util')._extend,\r\n    required = require('requires-port');\r\n\r\nvar upgradeHeader = /(^|,)\\s*upgrade\\s*($|,)/i,\r\n    isSSL = /^https|wss/;\r\n\r\n/**\r\n * Simple Regex for testing if protocol is https\r\n */\r\ncommon.isSSL = isSSL;\r\n/**\r\n * Copies the right headers from `options` and `req` to\r\n * `outgoing` which is then used to fire the proxied\r\n * request.\r\n *\r\n * Examples:\r\n *\r\n *    common.setupOutgoing(outgoing, options, req)\r\n *    // => { host: ..., hostname: ...}\r\n *\r\n * @param {Object} Outgoing Base object to be filled with required properties\r\n * @param {Object} Options Config object passed to the proxy\r\n * @param {ClientRequest} Req Request Object\r\n * @param {String} Forward String to select forward or target\r\n * \r\n * @return {Object} Outgoing Object with all required properties set\r\n *\r\n * @api private\r\n */\r\n\r\ncommon.setupOutgoing = function(outgoing, options, req, forward) {\r\n  outgoing.port = options[forward || 'target'].port ||\r\n                  (isSSL.test(options[forward || 'target'].protocol) ? 443 : 80);\r\n\r\n  ['host', 'hostname', 'socketPath', 'pfx', 'key',\r\n    'passphrase', 'cert', 'ca', 'ciphers', 'secureProtocol'].forEach(\r\n    function(e) { outgoing[e] = options[forward || 'target'][e]; }\r\n  );\r\n\r\n  outgoing.method = options.method || req.method;\r\n  outgoing.headers = extend({}, req.headers);\r\n\r\n  if (options.headers){\r\n    extend(outgoing.headers, options.headers);\r\n  }\r\n\r\n  if (options.auth) {\r\n    outgoing.auth = options.auth;\r\n  }\r\n  \r\n  if (options.ca) {\r\n      outgoing.ca = options.ca;\r\n  }\r\n\r\n  if (isSSL.test(options[forward || 'target'].protocol)) {\r\n    outgoing.rejectUnauthorized = (typeof options.secure === \"undefined\") ? true : options.secure;\r\n  }\r\n\r\n\r\n  outgoing.agent = options.agent || false;\r\n  outgoing.localAddress = options.localAddress;\r\n\r\n  //\r\n  // Remark: If we are false and not upgrading, set the connection: close. This is the right thing to do\r\n  // as node core doesn't handle this COMPLETELY properly yet.\r\n  //\r\n  if (!outgoing.agent) {\r\n    outgoing.headers = outgoing.headers || {};\r\n    if (typeof outgoing.headers.connection !== 'string'\r\n        || !upgradeHeader.test(outgoing.headers.connection)\r\n       ) { outgoing.headers.connection = 'close'; }\r\n  }\r\n\r\n\r\n  // the final path is target path + relative path requested by user:\r\n  var target = options[forward || 'target'];\r\n  var targetPath = target && options.prependPath !== false\r\n    ? (target.path || '')\r\n    : '';\r\n\r\n  //\r\n  // Remark: Can we somehow not use url.parse as a perf optimization?\r\n  //\r\n  var outgoingPath = !options.toProxy\r\n    ? (url.parse(req.url).path || '')\r\n    : req.url;\r\n\r\n  //\r\n  // Remark: ignorePath will just straight up ignore whatever the request's\r\n  // path is. This can be labeled as FOOT-GUN material if you do not know what\r\n  // you are doing and are using conflicting options.\r\n  //\r\n  outgoingPath = !options.ignorePath ? outgoingPath : '';\r\n\r\n  outgoing.path = common.urlJoin(targetPath, outgoingPath);\r\n\r\n  if (options.changeOrigin) {\r\n    outgoing.headers.host =\r\n      required(outgoing.port, options[forward || 'target'].protocol) && !hasPort(outgoing.host)\r\n        ? outgoing.host + ':' + outgoing.port\r\n        : outgoing.host;\r\n  }\r\n  return outgoing;\r\n};\r\n\r\n/**\r\n * Set the proper configuration for sockets,\r\n * set no delay and set keep alive, also set\r\n * the timeout to 0.\r\n *\r\n * Examples:\r\n *\r\n *    common.setupSocket(socket)\r\n *    // => Socket\r\n *\r\n * @param {Socket} Socket instance to setup\r\n * \r\n * @return {Socket} Return the configured socket.\r\n *\r\n * @api private\r\n */\r\n\r\ncommon.setupSocket = function(socket) {\r\n  socket.setTimeout(0);\r\n  socket.setNoDelay(true);\r\n\r\n  socket.setKeepAlive(true, 0);\r\n\r\n  return socket;\r\n};\r\n\r\n/**\r\n * Get the port number from the host. Or guess it based on the connection type.\r\n *\r\n * @param {Request} req Incoming HTTP request.\r\n *\r\n * @return {String} The port number.\r\n *\r\n * @api private\r\n */\r\ncommon.getPort = function(req) {\r\n  var res = req.headers.host ? req.headers.host.match(/:(\\d+)/) : '';\r\n\r\n  return res ?\r\n    res[1] :\r\n    common.hasEncryptedConnection(req) ? '443' : '80';\r\n};\r\n\r\n/**\r\n * Check if the request has an encrypted connection.\r\n *\r\n * @param {Request} req Incoming HTTP request.\r\n *\r\n * @return {Boolean} Whether the connection is encrypted or not.\r\n *\r\n * @api private\r\n */\r\ncommon.hasEncryptedConnection = function(req) {\r\n  return Boolean(req.connection.encrypted || req.connection.pair);\r\n};\r\n\r\n/**\r\n * OS-agnostic join (doesn't break on URLs like path.join does on Windows)>\r\n *\r\n * @return {String} The generated path.\r\n *\r\n * @api private\r\n */\r\n\r\ncommon.urlJoin = function() {\r\n    //\r\n    // We do not want to mess with the query string. All we want to touch is the path.\r\n    //\r\n  var args = Array.prototype.slice.call(arguments),\r\n      lastIndex = args.length - 1,\r\n      last = args[lastIndex],\r\n      lastSegs = last.split('?'),\r\n      retSegs;\r\n\r\n  args[lastIndex] = lastSegs.shift();\r\n\r\n  //\r\n  // Join all strings, but remove empty strings so we don't get extra slashes from\r\n  // joining e.g. ['', 'am']\r\n  //\r\n  retSegs = [\r\n    args.filter(Boolean).join('/')\r\n        .replace(/\\/+/g, '/')\r\n        .replace('http:/', 'http://')\r\n        .replace('https:/', 'https://')\r\n  ];\r\n\r\n  // Only join the query string if it exists so we don't have trailing a '?'\r\n  // on every request\r\n\r\n  // Handle case where there could be multiple ? in the URL.\r\n  retSegs.push.apply(retSegs, lastSegs);\r\n\r\n  return retSegs.join('?')\r\n};\r\n\r\n/**\r\n * Rewrites or removes the domain of a cookie header\r\n *\r\n * @param {String|Array} Header\r\n * @param {Object} Config, mapping of domain to rewritten domain.\r\n *                 '*' key to match any domain, null value to remove the domain.\r\n *\r\n * @api private\r\n */\r\ncommon.rewriteCookieProperty = function rewriteCookieProperty(header, config, property) {\r\n  if (Array.isArray(header)) {\r\n    return header.map(function (headerElement) {\r\n      return rewriteCookieProperty(headerElement, config, property);\r\n    });\r\n  }\r\n  return header.replace(new RegExp(\"(;\\\\s*\" + property + \"=)([^;]+)\", 'i'), function(match, prefix, previousValue) {\r\n    var newValue;\r\n    if (previousValue in config) {\r\n      newValue = config[previousValue];\r\n    } else if ('*' in config) {\r\n      newValue = config['*'];\r\n    } else {\r\n      //no match, return previous value\r\n      return match;\r\n    }\r\n    if (newValue) {\r\n      //replace value\r\n      return prefix + newValue;\r\n    } else {\r\n      //remove value\r\n      return '';\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * Check the host and see if it potentially has a port in it (keep it simple)\r\n *\r\n * @returns {Boolean} Whether we have one or not\r\n *\r\n * @api private\r\n */\r\nfunction hasPort(host) {\r\n  return !!~host.indexOf(':');\r\n};\r\n", "var url    = require('url'),\r\n    common = require('../common');\r\n\r\n\r\nvar redirectRegex = /^201|30(1|2|7|8)$/;\r\n\r\n/*!\r\n * Array of passes.\r\n *\r\n * A `pass` is just a function that is executed on `req, res, options`\r\n * so that you can easily add new checks while still keeping the base\r\n * flexible.\r\n */\r\n\r\nmodule.exports = { // <--\r\n\r\n  /**\r\n   * If is a HTTP 1.0 request, remove chunk headers\r\n   *\r\n   * @param {ClientRequest} Req Request object\r\n   * @param {IncomingMessage} Res Response object\r\n   * @param {proxyResponse} Res Response object from the proxy request\r\n   *\r\n   * @api private\r\n   */\r\n  removeChunked: function removeChunked(req, res, proxyRes) {\r\n    if (req.httpVersion === '1.0') {\r\n      delete proxyRes.headers['transfer-encoding'];\r\n    }\r\n  },\r\n\r\n  /**\r\n   * If is a HTTP 1.0 request, set the correct connection header\r\n   * or if connection header not present, then use `keep-alive`\r\n   *\r\n   * @param {ClientRequest} Req Request object\r\n   * @param {IncomingMessage} Res Response object\r\n   * @param {proxyResponse} Res Response object from the proxy request\r\n   *\r\n   * @api private\r\n   */\r\n  setConnection: function setConnection(req, res, proxyRes) {\r\n    if (req.httpVersion === '1.0') {\r\n      proxyRes.headers.connection = req.headers.connection || 'close';\r\n    } else if (req.httpVersion !== '2.0' && !proxyRes.headers.connection) {\r\n      proxyRes.headers.connection = req.headers.connection || 'keep-alive';\r\n    }\r\n  },\r\n\r\n  setRedirectHostRewrite: function setRedirectHostRewrite(req, res, proxyRes, options) {\r\n    if ((options.hostRewrite || options.autoRewrite || options.protocolRewrite)\r\n        && proxyRes.headers['location']\r\n        && redirectRegex.test(proxyRes.statusCode)) {\r\n      var target = url.parse(options.target);\r\n      var u = url.parse(proxyRes.headers['location']);\r\n\r\n      // make sure the redirected host matches the target host before rewriting\r\n      if (target.host != u.host) {\r\n        return;\r\n      }\r\n\r\n      if (options.hostRewrite) {\r\n        u.host = options.hostRewrite;\r\n      } else if (options.autoRewrite) {\r\n        u.host = req.headers['host'];\r\n      }\r\n      if (options.protocolRewrite) {\r\n        u.protocol = options.protocolRewrite;\r\n      }\r\n\r\n      proxyRes.headers['location'] = u.format();\r\n    }\r\n  },\r\n  /**\r\n   * Copy headers from proxyResponse to response\r\n   * set each header in response object.\r\n   *\r\n   * @param {ClientRequest} Req Request object\r\n   * @param {IncomingMessage} Res Response object\r\n   * @param {proxyResponse} Res Response object from the proxy request\r\n   * @param {Object} Options options.cookieDomainRewrite: Config to rewrite cookie domain\r\n   *\r\n   * @api private\r\n   */\r\n  writeHeaders: function writeHeaders(req, res, proxyRes, options) {\r\n    var rewriteCookieDomainConfig = options.cookieDomainRewrite,\r\n        rewriteCookiePathConfig = options.cookiePathRewrite,\r\n        preserveHeaderKeyCase = options.preserveHeaderKeyCase,\r\n        rawHeaderKeyMap,\r\n        setHeader = function(key, header) {\r\n          if (header == undefined) return;\r\n          if (rewriteCookieDomainConfig && key.toLowerCase() === 'set-cookie') {\r\n            header = common.rewriteCookieProperty(header, rewriteCookieDomainConfig, 'domain');\r\n          }\r\n          if (rewriteCookiePathConfig && key.toLowerCase() === 'set-cookie') {\r\n            header = common.rewriteCookieProperty(header, rewriteCookiePathConfig, 'path');\r\n          }\r\n          res.setHeader(String(key).trim(), header);\r\n        };\r\n\r\n    if (typeof rewriteCookieDomainConfig === 'string') { //also test for ''\r\n      rewriteCookieDomainConfig = { '*': rewriteCookieDomainConfig };\r\n    }\r\n\r\n    if (typeof rewriteCookiePathConfig === 'string') { //also test for ''\r\n      rewriteCookiePathConfig = { '*': rewriteCookiePathConfig };\r\n    }\r\n\r\n    // message.rawHeaders is added in: v0.11.6\r\n    // https://nodejs.org/api/http.html#http_message_rawheaders\r\n    if (preserveHeaderKeyCase && proxyRes.rawHeaders != undefined) {\r\n      rawHeaderKeyMap = {};\r\n      for (var i = 0; i < proxyRes.rawHeaders.length; i += 2) {\r\n        var key = proxyRes.rawHeaders[i];\r\n        rawHeaderKeyMap[key.toLowerCase()] = key;\r\n      }\r\n    }\r\n\r\n    Object.keys(proxyRes.headers).forEach(function(key) {\r\n      var header = proxyRes.headers[key];\r\n      if (preserveHeaderKeyCase && rawHeaderKeyMap) {\r\n        key = rawHeaderKeyMap[key] || key;\r\n      }\r\n      setHeader(key, header);\r\n    });\r\n  },\r\n\r\n  /**\r\n   * Set the statusCode from the proxyResponse\r\n   *\r\n   * @param {ClientRequest} Req Request object\r\n   * @param {IncomingMessage} Res Response object\r\n   * @param {proxyResponse} Res Response object from the proxy request\r\n   *\r\n   * @api private\r\n   */\r\n  writeStatusCode: function writeStatusCode(req, res, proxyRes) {\r\n    // From Node.js docs: response.writeHead(statusCode[, statusMessage][, headers])\r\n    if(proxyRes.statusMessage) {\r\n      res.statusCode = proxyRes.statusCode;\r\n      res.statusMessage = proxyRes.statusMessage;\r\n    } else {\r\n      res.statusCode = proxyRes.statusCode;\r\n    }\r\n  }\r\n\r\n};\r\n", "var debug;\r\n\r\nmodule.exports = function () {\r\n  if (!debug) {\r\n    try {\r\n      /* eslint global-require: off */\r\n      debug = require(\"debug\")(\"follow-redirects\");\r\n    }\r\n    catch (error) { /* */ }\r\n    if (typeof debug !== \"function\") {\r\n      debug = function () { /* */ };\r\n    }\r\n  }\r\n  debug.apply(null, arguments);\r\n};\r\n", "var url = require(\"url\");\r\nvar URL = url.URL;\r\nvar http = require(\"http\");\r\nvar https = require(\"https\");\r\nvar Writable = require(\"stream\").Writable;\r\nvar assert = require(\"assert\");\r\nvar debug = require(\"./debug\");\r\n\r\n// Preventive platform detection\r\n// istanbul ignore next\r\n(function detectUnsupportedEnvironment() {\r\n  var looksLikeNode = typeof process !== \"undefined\";\r\n  var looksLikeBrowser = typeof window !== \"undefined\" && typeof document !== \"undefined\";\r\n  var looksLikeV8 = isFunction(Error.captureStackTrace);\r\n  if (!looksLikeNode && (looksLikeBrowser || !looksLikeV8)) {\r\n    console.warn(\"The follow-redirects package should be excluded from browser builds.\");\r\n  }\r\n}());\r\n\r\n// Whether to use the native URL object or the legacy url module\r\nvar useNativeURL = false;\r\ntry {\r\n  assert(new URL(\"\"));\r\n}\r\ncatch (error) {\r\n  useNativeURL = error.code === \"ERR_INVALID_URL\";\r\n}\r\n\r\n// URL fields to preserve in copy operations\r\nvar preservedUrlFields = [\r\n  \"auth\",\r\n  \"host\",\r\n  \"hostname\",\r\n  \"href\",\r\n  \"path\",\r\n  \"pathname\",\r\n  \"port\",\r\n  \"protocol\",\r\n  \"query\",\r\n  \"search\",\r\n  \"hash\",\r\n];\r\n\r\n// Create handlers that pass events from native requests\r\nvar events = [\"abort\", \"aborted\", \"connect\", \"error\", \"socket\", \"timeout\"];\r\nvar eventHandlers = Object.create(null);\r\nevents.forEach(function (event) {\r\n  eventHandlers[event] = function (arg1, arg2, arg3) {\r\n    this._redirectable.emit(event, arg1, arg2, arg3);\r\n  };\r\n});\r\n\r\n// Error types with codes\r\nvar InvalidUrlError = createErrorType(\r\n  \"ERR_INVALID_URL\",\r\n  \"Invalid URL\",\r\n  TypeError\r\n);\r\nvar RedirectionError = createErrorType(\r\n  \"ERR_FR_REDIRECTION_FAILURE\",\r\n  \"Redirected request failed\"\r\n);\r\nvar TooManyRedirectsError = createErrorType(\r\n  \"ERR_FR_TOO_MANY_REDIRECTS\",\r\n  \"Maximum number of redirects exceeded\",\r\n  RedirectionError\r\n);\r\nvar MaxBodyLengthExceededError = createErrorType(\r\n  \"ERR_FR_MAX_BODY_LENGTH_EXCEEDED\",\r\n  \"Request body larger than maxBodyLength limit\"\r\n);\r\nvar WriteAfterEndError = createErrorType(\r\n  \"ERR_STREAM_WRITE_AFTER_END\",\r\n  \"write after end\"\r\n);\r\n\r\n// istanbul ignore next\r\nvar destroy = Writable.prototype.destroy || noop;\r\n\r\n// An HTTP(S) request that can be redirected\r\nfunction RedirectableRequest(options, responseCallback) {\r\n  // Initialize the request\r\n  Writable.call(this);\r\n  this._sanitizeOptions(options);\r\n  this._options = options;\r\n  this._ended = false;\r\n  this._ending = false;\r\n  this._redirectCount = 0;\r\n  this._redirects = [];\r\n  this._requestBodyLength = 0;\r\n  this._requestBodyBuffers = [];\r\n\r\n  // Attach a callback if passed\r\n  if (responseCallback) {\r\n    this.on(\"response\", responseCallback);\r\n  }\r\n\r\n  // React to responses of native requests\r\n  var self = this;\r\n  this._onNativeResponse = function (response) {\r\n    try {\r\n      self._processResponse(response);\r\n    }\r\n    catch (cause) {\r\n      self.emit(\"error\", cause instanceof RedirectionError ?\r\n        cause : new RedirectionError({ cause: cause }));\r\n    }\r\n  };\r\n\r\n  // Perform the first request\r\n  this._performRequest();\r\n}\r\nRedirectableRequest.prototype = Object.create(Writable.prototype);\r\n\r\nRedirectableRequest.prototype.abort = function () {\r\n  destroyRequest(this._currentRequest);\r\n  this._currentRequest.abort();\r\n  this.emit(\"abort\");\r\n};\r\n\r\nRedirectableRequest.prototype.destroy = function (error) {\r\n  destroyRequest(this._currentRequest, error);\r\n  destroy.call(this, error);\r\n  return this;\r\n};\r\n\r\n// Writes buffered data to the current native request\r\nRedirectableRequest.prototype.write = function (data, encoding, callback) {\r\n  // Writing is not allowed if end has been called\r\n  if (this._ending) {\r\n    throw new WriteAfterEndError();\r\n  }\r\n\r\n  // Validate input and shift parameters if necessary\r\n  if (!isString(data) && !isBuffer(data)) {\r\n    throw new TypeError(\"data should be a string, Buffer or Uint8Array\");\r\n  }\r\n  if (isFunction(encoding)) {\r\n    callback = encoding;\r\n    encoding = null;\r\n  }\r\n\r\n  // Ignore empty buffers, since writing them doesn't invoke the callback\r\n  // https://github.com/nodejs/node/issues/22066\r\n  if (data.length === 0) {\r\n    if (callback) {\r\n      callback();\r\n    }\r\n    return;\r\n  }\r\n  // Only write when we don't exceed the maximum body length\r\n  if (this._requestBodyLength + data.length <= this._options.maxBodyLength) {\r\n    this._requestBodyLength += data.length;\r\n    this._requestBodyBuffers.push({ data: data, encoding: encoding });\r\n    this._currentRequest.write(data, encoding, callback);\r\n  }\r\n  // Error when we exceed the maximum body length\r\n  else {\r\n    this.emit(\"error\", new MaxBodyLengthExceededError());\r\n    this.abort();\r\n  }\r\n};\r\n\r\n// Ends the current native request\r\nRedirectableRequest.prototype.end = function (data, encoding, callback) {\r\n  // Shift parameters if necessary\r\n  if (isFunction(data)) {\r\n    callback = data;\r\n    data = encoding = null;\r\n  }\r\n  else if (isFunction(encoding)) {\r\n    callback = encoding;\r\n    encoding = null;\r\n  }\r\n\r\n  // Write data if needed and end\r\n  if (!data) {\r\n    this._ended = this._ending = true;\r\n    this._currentRequest.end(null, null, callback);\r\n  }\r\n  else {\r\n    var self = this;\r\n    var currentRequest = this._currentRequest;\r\n    this.write(data, encoding, function () {\r\n      self._ended = true;\r\n      currentRequest.end(null, null, callback);\r\n    });\r\n    this._ending = true;\r\n  }\r\n};\r\n\r\n// Sets a header value on the current native request\r\nRedirectableRequest.prototype.setHeader = function (name, value) {\r\n  this._options.headers[name] = value;\r\n  this._currentRequest.setHeader(name, value);\r\n};\r\n\r\n// Clears a header value on the current native request\r\nRedirectableRequest.prototype.removeHeader = function (name) {\r\n  delete this._options.headers[name];\r\n  this._currentRequest.removeHeader(name);\r\n};\r\n\r\n// Global timeout for all underlying requests\r\nRedirectableRequest.prototype.setTimeout = function (msecs, callback) {\r\n  var self = this;\r\n\r\n  // Destroys the socket on timeout\r\n  function destroyOnTimeout(socket) {\r\n    socket.setTimeout(msecs);\r\n    socket.removeListener(\"timeout\", socket.destroy);\r\n    socket.addListener(\"timeout\", socket.destroy);\r\n  }\r\n\r\n  // Sets up a timer to trigger a timeout event\r\n  function startTimer(socket) {\r\n    if (self._timeout) {\r\n      clearTimeout(self._timeout);\r\n    }\r\n    self._timeout = setTimeout(function () {\r\n      self.emit(\"timeout\");\r\n      clearTimer();\r\n    }, msecs);\r\n    destroyOnTimeout(socket);\r\n  }\r\n\r\n  // Stops a timeout from triggering\r\n  function clearTimer() {\r\n    // Clear the timeout\r\n    if (self._timeout) {\r\n      clearTimeout(self._timeout);\r\n      self._timeout = null;\r\n    }\r\n\r\n    // Clean up all attached listeners\r\n    self.removeListener(\"abort\", clearTimer);\r\n    self.removeListener(\"error\", clearTimer);\r\n    self.removeListener(\"response\", clearTimer);\r\n    self.removeListener(\"close\", clearTimer);\r\n    if (callback) {\r\n      self.removeListener(\"timeout\", callback);\r\n    }\r\n    if (!self.socket) {\r\n      self._currentRequest.removeListener(\"socket\", startTimer);\r\n    }\r\n  }\r\n\r\n  // Attach callback if passed\r\n  if (callback) {\r\n    this.on(\"timeout\", callback);\r\n  }\r\n\r\n  // Start the timer if or when the socket is opened\r\n  if (this.socket) {\r\n    startTimer(this.socket);\r\n  }\r\n  else {\r\n    this._currentRequest.once(\"socket\", startTimer);\r\n  }\r\n\r\n  // Clean up on events\r\n  this.on(\"socket\", destroyOnTimeout);\r\n  this.on(\"abort\", clearTimer);\r\n  this.on(\"error\", clearTimer);\r\n  this.on(\"response\", clearTimer);\r\n  this.on(\"close\", clearTimer);\r\n\r\n  return this;\r\n};\r\n\r\n// Proxy all other public ClientRequest methods\r\n[\r\n  \"flushHeaders\", \"getHeader\",\r\n  \"setNoDelay\", \"setSocketKeepAlive\",\r\n].forEach(function (method) {\r\n  RedirectableRequest.prototype[method] = function (a, b) {\r\n    return this._currentRequest[method](a, b);\r\n  };\r\n});\r\n\r\n// Proxy all public ClientRequest properties\r\n[\"aborted\", \"connection\", \"socket\"].forEach(function (property) {\r\n  Object.defineProperty(RedirectableRequest.prototype, property, {\r\n    get: function () { return this._currentRequest[property]; },\r\n  });\r\n});\r\n\r\nRedirectableRequest.prototype._sanitizeOptions = function (options) {\r\n  // Ensure headers are always present\r\n  if (!options.headers) {\r\n    options.headers = {};\r\n  }\r\n\r\n  // Since http.request treats host as an alias of hostname,\r\n  // but the url module interprets host as hostname plus port,\r\n  // eliminate the host property to avoid confusion.\r\n  if (options.host) {\r\n    // Use hostname if set, because it has precedence\r\n    if (!options.hostname) {\r\n      options.hostname = options.host;\r\n    }\r\n    delete options.host;\r\n  }\r\n\r\n  // Complete the URL object when necessary\r\n  if (!options.pathname && options.path) {\r\n    var searchPos = options.path.indexOf(\"?\");\r\n    if (searchPos < 0) {\r\n      options.pathname = options.path;\r\n    }\r\n    else {\r\n      options.pathname = options.path.substring(0, searchPos);\r\n      options.search = options.path.substring(searchPos);\r\n    }\r\n  }\r\n};\r\n\r\n\r\n// Executes the next native request (initial or redirect)\r\nRedirectableRequest.prototype._performRequest = function () {\r\n  // Load the native protocol\r\n  var protocol = this._options.protocol;\r\n  var nativeProtocol = this._options.nativeProtocols[protocol];\r\n  if (!nativeProtocol) {\r\n    throw new TypeError(\"Unsupported protocol \" + protocol);\r\n  }\r\n\r\n  // If specified, use the agent corresponding to the protocol\r\n  // (HTTP and HTTPS use different types of agents)\r\n  if (this._options.agents) {\r\n    var scheme = protocol.slice(0, -1);\r\n    this._options.agent = this._options.agents[scheme];\r\n  }\r\n\r\n  // Create the native request and set up its event handlers\r\n  var request = this._currentRequest =\r\n        nativeProtocol.request(this._options, this._onNativeResponse);\r\n  request._redirectable = this;\r\n  for (var event of events) {\r\n    request.on(event, eventHandlers[event]);\r\n  }\r\n\r\n  // RFC7230§5.3.1: When making a request directly to an origin server, […]\r\n  // a client MUST send only the absolute path […] as the request-target.\r\n  this._currentUrl = /^\\//.test(this._options.path) ?\r\n    url.format(this._options) :\r\n    // When making a request to a proxy, […]\r\n    // a client MUST send the target URI in absolute-form […].\r\n    this._options.path;\r\n\r\n  // End a redirected request\r\n  // (The first request must be ended explicitly with RedirectableRequest#end)\r\n  if (this._isRedirect) {\r\n    // Write the request entity and end\r\n    var i = 0;\r\n    var self = this;\r\n    var buffers = this._requestBodyBuffers;\r\n    (function writeNext(error) {\r\n      // Only write if this request has not been redirected yet\r\n      // istanbul ignore else\r\n      if (request === self._currentRequest) {\r\n        // Report any write errors\r\n        // istanbul ignore if\r\n        if (error) {\r\n          self.emit(\"error\", error);\r\n        }\r\n        // Write the next buffer if there are still left\r\n        else if (i < buffers.length) {\r\n          var buffer = buffers[i++];\r\n          // istanbul ignore else\r\n          if (!request.finished) {\r\n            request.write(buffer.data, buffer.encoding, writeNext);\r\n          }\r\n        }\r\n        // End the request if `end` has been called on us\r\n        else if (self._ended) {\r\n          request.end();\r\n        }\r\n      }\r\n    }());\r\n  }\r\n};\r\n\r\n// Processes a response from the current native request\r\nRedirectableRequest.prototype._processResponse = function (response) {\r\n  // Store the redirected response\r\n  var statusCode = response.statusCode;\r\n  if (this._options.trackRedirects) {\r\n    this._redirects.push({\r\n      url: this._currentUrl,\r\n      headers: response.headers,\r\n      statusCode: statusCode,\r\n    });\r\n  }\r\n\r\n  // RFC7231§6.4: The 3xx (Redirection) class of status code indicates\r\n  // that further action needs to be taken by the user agent in order to\r\n  // fulfill the request. If a Location header field is provided,\r\n  // the user agent MAY automatically redirect its request to the URI\r\n  // referenced by the Location field value,\r\n  // even if the specific status code is not understood.\r\n\r\n  // If the response is not a redirect; return it as-is\r\n  var location = response.headers.location;\r\n  if (!location || this._options.followRedirects === false ||\r\n      statusCode < 300 || statusCode >= 400) {\r\n    response.responseUrl = this._currentUrl;\r\n    response.redirects = this._redirects;\r\n    this.emit(\"response\", response);\r\n\r\n    // Clean up\r\n    this._requestBodyBuffers = [];\r\n    return;\r\n  }\r\n\r\n  // The response is a redirect, so abort the current request\r\n  destroyRequest(this._currentRequest);\r\n  // Discard the remainder of the response to avoid waiting for data\r\n  response.destroy();\r\n\r\n  // RFC7231§6.4: A client SHOULD detect and intervene\r\n  // in cyclical redirections (i.e., \"infinite\" redirection loops).\r\n  if (++this._redirectCount > this._options.maxRedirects) {\r\n    throw new TooManyRedirectsError();\r\n  }\r\n\r\n  // Store the request headers if applicable\r\n  var requestHeaders;\r\n  var beforeRedirect = this._options.beforeRedirect;\r\n  if (beforeRedirect) {\r\n    requestHeaders = Object.assign({\r\n      // The Host header was set by nativeProtocol.request\r\n      Host: response.req.getHeader(\"host\"),\r\n    }, this._options.headers);\r\n  }\r\n\r\n  // RFC7231§6.4: Automatic redirection needs to done with\r\n  // care for methods not known to be safe, […]\r\n  // RFC7231§6.4.2–3: For historical reasons, a user agent MAY change\r\n  // the request method from POST to GET for the subsequent request.\r\n  var method = this._options.method;\r\n  if ((statusCode === 301 || statusCode === 302) && this._options.method === \"POST\" ||\r\n      // RFC7231§6.4.4: The 303 (See Other) status code indicates that\r\n      // the server is redirecting the user agent to a different resource […]\r\n      // A user agent can perform a retrieval request targeting that URI\r\n      // (a GET or HEAD request if using HTTP) […]\r\n      (statusCode === 303) && !/^(?:GET|HEAD)$/.test(this._options.method)) {\r\n    this._options.method = \"GET\";\r\n    // Drop a possible entity and headers related to it\r\n    this._requestBodyBuffers = [];\r\n    removeMatchingHeaders(/^content-/i, this._options.headers);\r\n  }\r\n\r\n  // Drop the Host header, as the redirect might lead to a different host\r\n  var currentHostHeader = removeMatchingHeaders(/^host$/i, this._options.headers);\r\n\r\n  // If the redirect is relative, carry over the host of the last request\r\n  var currentUrlParts = parseUrl(this._currentUrl);\r\n  var currentHost = currentHostHeader || currentUrlParts.host;\r\n  var currentUrl = /^\\w+:/.test(location) ? this._currentUrl :\r\n    url.format(Object.assign(currentUrlParts, { host: currentHost }));\r\n\r\n  // Create the redirected request\r\n  var redirectUrl = resolveUrl(location, currentUrl);\r\n  debug(\"redirecting to\", redirectUrl.href);\r\n  this._isRedirect = true;\r\n  spreadUrlObject(redirectUrl, this._options);\r\n\r\n  // Drop confidential headers when redirecting to a less secure protocol\r\n  // or to a different domain that is not a superdomain\r\n  if (redirectUrl.protocol !== currentUrlParts.protocol &&\r\n     redirectUrl.protocol !== \"https:\" ||\r\n     redirectUrl.host !== currentHost &&\r\n     !isSubdomain(redirectUrl.host, currentHost)) {\r\n    removeMatchingHeaders(/^(?:(?:proxy-)?authorization|cookie)$/i, this._options.headers);\r\n  }\r\n\r\n  // Evaluate the beforeRedirect callback\r\n  if (isFunction(beforeRedirect)) {\r\n    var responseDetails = {\r\n      headers: response.headers,\r\n      statusCode: statusCode,\r\n    };\r\n    var requestDetails = {\r\n      url: currentUrl,\r\n      method: method,\r\n      headers: requestHeaders,\r\n    };\r\n    beforeRedirect(this._options, responseDetails, requestDetails);\r\n    this._sanitizeOptions(this._options);\r\n  }\r\n\r\n  // Perform the redirected request\r\n  this._performRequest();\r\n};\r\n\r\n// Wraps the key/value object of protocols with redirect functionality\r\nfunction wrap(protocols) {\r\n  // Default settings\r\n  var exports = {\r\n    maxRedirects: 21,\r\n    maxBodyLength: 10 * 1024 * 1024,\r\n  };\r\n\r\n  // Wrap each protocol\r\n  var nativeProtocols = {};\r\n  Object.keys(protocols).forEach(function (scheme) {\r\n    var protocol = scheme + \":\";\r\n    var nativeProtocol = nativeProtocols[protocol] = protocols[scheme];\r\n    var wrappedProtocol = exports[scheme] = Object.create(nativeProtocol);\r\n\r\n    // Executes a request, following redirects\r\n    function request(input, options, callback) {\r\n      // Parse parameters, ensuring that input is an object\r\n      if (isURL(input)) {\r\n        input = spreadUrlObject(input);\r\n      }\r\n      else if (isString(input)) {\r\n        input = spreadUrlObject(parseUrl(input));\r\n      }\r\n      else {\r\n        callback = options;\r\n        options = validateUrl(input);\r\n        input = { protocol: protocol };\r\n      }\r\n      if (isFunction(options)) {\r\n        callback = options;\r\n        options = null;\r\n      }\r\n\r\n      // Set defaults\r\n      options = Object.assign({\r\n        maxRedirects: exports.maxRedirects,\r\n        maxBodyLength: exports.maxBodyLength,\r\n      }, input, options);\r\n      options.nativeProtocols = nativeProtocols;\r\n      if (!isString(options.host) && !isString(options.hostname)) {\r\n        options.hostname = \"::1\";\r\n      }\r\n\r\n      assert.equal(options.protocol, protocol, \"protocol mismatch\");\r\n      debug(\"options\", options);\r\n      return new RedirectableRequest(options, callback);\r\n    }\r\n\r\n    // Executes a GET request, following redirects\r\n    function get(input, options, callback) {\r\n      var wrappedRequest = wrappedProtocol.request(input, options, callback);\r\n      wrappedRequest.end();\r\n      return wrappedRequest;\r\n    }\r\n\r\n    // Expose the properties on the wrapped protocol\r\n    Object.defineProperties(wrappedProtocol, {\r\n      request: { value: request, configurable: true, enumerable: true, writable: true },\r\n      get: { value: get, configurable: true, enumerable: true, writable: true },\r\n    });\r\n  });\r\n  return exports;\r\n}\r\n\r\nfunction noop() { /* empty */ }\r\n\r\nfunction parseUrl(input) {\r\n  var parsed;\r\n  // istanbul ignore else\r\n  if (useNativeURL) {\r\n    parsed = new URL(input);\r\n  }\r\n  else {\r\n    // Ensure the URL is valid and absolute\r\n    parsed = validateUrl(url.parse(input));\r\n    if (!isString(parsed.protocol)) {\r\n      throw new InvalidUrlError({ input });\r\n    }\r\n  }\r\n  return parsed;\r\n}\r\n\r\nfunction resolveUrl(relative, base) {\r\n  // istanbul ignore next\r\n  return useNativeURL ? new URL(relative, base) : parseUrl(url.resolve(base, relative));\r\n}\r\n\r\nfunction validateUrl(input) {\r\n  if (/^\\[/.test(input.hostname) && !/^\\[[:0-9a-f]+\\]$/i.test(input.hostname)) {\r\n    throw new InvalidUrlError({ input: input.href || input });\r\n  }\r\n  if (/^\\[/.test(input.host) && !/^\\[[:0-9a-f]+\\](:\\d+)?$/i.test(input.host)) {\r\n    throw new InvalidUrlError({ input: input.href || input });\r\n  }\r\n  return input;\r\n}\r\n\r\nfunction spreadUrlObject(urlObject, target) {\r\n  var spread = target || {};\r\n  for (var key of preservedUrlFields) {\r\n    spread[key] = urlObject[key];\r\n  }\r\n\r\n  // Fix IPv6 hostname\r\n  if (spread.hostname.startsWith(\"[\")) {\r\n    spread.hostname = spread.hostname.slice(1, -1);\r\n  }\r\n  // Ensure port is a number\r\n  if (spread.port !== \"\") {\r\n    spread.port = Number(spread.port);\r\n  }\r\n  // Concatenate path\r\n  spread.path = spread.search ? spread.pathname + spread.search : spread.pathname;\r\n\r\n  return spread;\r\n}\r\n\r\nfunction removeMatchingHeaders(regex, headers) {\r\n  var lastValue;\r\n  for (var header in headers) {\r\n    if (regex.test(header)) {\r\n      lastValue = headers[header];\r\n      delete headers[header];\r\n    }\r\n  }\r\n  return (lastValue === null || typeof lastValue === \"undefined\") ?\r\n    undefined : String(lastValue).trim();\r\n}\r\n\r\nfunction createErrorType(code, message, baseClass) {\r\n  // Create constructor\r\n  function CustomError(properties) {\r\n    // istanbul ignore else\r\n    if (isFunction(Error.captureStackTrace)) {\r\n      Error.captureStackTrace(this, this.constructor);\r\n    }\r\n    Object.assign(this, properties || {});\r\n    this.code = code;\r\n    this.message = this.cause ? message + \": \" + this.cause.message : message;\r\n  }\r\n\r\n  // Attach constructor and set default properties\r\n  CustomError.prototype = new (baseClass || Error)();\r\n  Object.defineProperties(CustomError.prototype, {\r\n    constructor: {\r\n      value: CustomError,\r\n      enumerable: false,\r\n    },\r\n    name: {\r\n      value: \"Error [\" + code + \"]\",\r\n      enumerable: false,\r\n    },\r\n  });\r\n  return CustomError;\r\n}\r\n\r\nfunction destroyRequest(request, error) {\r\n  for (var event of events) {\r\n    request.removeListener(event, eventHandlers[event]);\r\n  }\r\n  request.on(\"error\", noop);\r\n  request.destroy(error);\r\n}\r\n\r\nfunction isSubdomain(subdomain, domain) {\r\n  assert(isString(subdomain) && isString(domain));\r\n  var dot = subdomain.length - domain.length - 1;\r\n  return dot > 0 && subdomain[dot] === \".\" && subdomain.endsWith(domain);\r\n}\r\n\r\nfunction isString(value) {\r\n  return typeof value === \"string\" || value instanceof String;\r\n}\r\n\r\nfunction isFunction(value) {\r\n  return typeof value === \"function\";\r\n}\r\n\r\nfunction isBuffer(value) {\r\n  return typeof value === \"object\" && (\"length\" in value);\r\n}\r\n\r\nfunction isURL(value) {\r\n  return URL && value instanceof URL;\r\n}\r\n\r\n// Exports\r\nmodule.exports = wrap({ http: http, https: https });\r\nmodule.exports.wrap = wrap;\r\n", "var httpNative   = require('http'),\r\n    httpsNative  = require('https'),\r\n    web_o  = require('./web-outgoing'),\r\n    common = require('../common'),\r\n    followRedirects = require('follow-redirects');\r\n\r\nweb_o = Object.keys(web_o).map(function(pass) {\r\n  return web_o[pass];\r\n});\r\n\r\nvar nativeAgents = { http: httpNative, https: httpsNative };\r\n\r\n/*!\r\n * Array of passes.\r\n *\r\n * A `pass` is just a function that is executed on `req, res, options`\r\n * so that you can easily add new checks while still keeping the base\r\n * flexible.\r\n */\r\n\r\n\r\nmodule.exports = {\r\n\r\n  /**\r\n   * Sets `content-length` to '0' if request is of DELETE type.\r\n   *\r\n   * @param {ClientRequest} Req Request object\r\n   * @param {IncomingMessage} Res Response object\r\n   * @param {Object} Options Config object passed to the proxy\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  deleteLength: function deleteLength(req, res, options) {\r\n    if((req.method === 'DELETE' || req.method === 'OPTIONS')\r\n       && !req.headers['content-length']) {\r\n      req.headers['content-length'] = '0';\r\n      delete req.headers['transfer-encoding'];\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Sets timeout in request socket if it was specified in options.\r\n   *\r\n   * @param {ClientRequest} Req Request object\r\n   * @param {IncomingMessage} Res Response object\r\n   * @param {Object} Options Config object passed to the proxy\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  timeout: function timeout(req, res, options) {\r\n    if(options.timeout) {\r\n      req.socket.setTimeout(options.timeout);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Sets `x-forwarded-*` headers if specified in config.\r\n   *\r\n   * @param {ClientRequest} Req Request object\r\n   * @param {IncomingMessage} Res Response object\r\n   * @param {Object} Options Config object passed to the proxy\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  XHeaders: function XHeaders(req, res, options) {\r\n    if(!options.xfwd) return;\r\n\r\n    var encrypted = req.isSpdy || common.hasEncryptedConnection(req);\r\n    var values = {\r\n      for  : req.connection.remoteAddress || req.socket.remoteAddress,\r\n      port : common.getPort(req),\r\n      proto: encrypted ? 'https' : 'http'\r\n    };\r\n\r\n    ['for', 'port', 'proto'].forEach(function(header) {\r\n      req.headers['x-forwarded-' + header] =\r\n        (req.headers['x-forwarded-' + header] || '') +\r\n        (req.headers['x-forwarded-' + header] ? ',' : '') +\r\n        values[header];\r\n    });\r\n\r\n    req.headers['x-forwarded-host'] = req.headers['x-forwarded-host'] || req.headers['host'] || '';\r\n  },\r\n\r\n  /**\r\n   * Does the actual proxying. If `forward` is enabled fires up\r\n   * a ForwardStream, same happens for ProxyStream. The request\r\n   * just dies otherwise.\r\n   *\r\n   * @param {ClientRequest} Req Request object\r\n   * @param {IncomingMessage} Res Response object\r\n   * @param {Object} Options Config object passed to the proxy\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  stream: function stream(req, res, options, _, server, clb) {\r\n\r\n    // And we begin!\r\n    server.emit('start', req, res, options.target || options.forward);\r\n\r\n    var agents = options.followRedirects ? followRedirects : nativeAgents;\r\n    var http = agents.http;\r\n    var https = agents.https;\r\n\r\n    if(options.forward) {\r\n      // If forward enable, so just pipe the request\r\n      var forwardReq = (options.forward.protocol === 'https:' ? https : http).request(\r\n        common.setupOutgoing(options.ssl || {}, options, req, 'forward')\r\n      );\r\n\r\n      // error handler (e.g. ECONNRESET, ECONNREFUSED)\r\n      // Handle errors on incoming request as well as it makes sense to\r\n      var forwardError = createErrorHandler(forwardReq, options.forward);\r\n      req.on('error', forwardError);\r\n      forwardReq.on('error', forwardError);\r\n\r\n      (options.buffer || req).pipe(forwardReq);\r\n      if(!options.target) { return res.end(); }\r\n    }\r\n\r\n    // Request initalization\r\n    var proxyReq = (options.target.protocol === 'https:' ? https : http).request(\r\n      common.setupOutgoing(options.ssl || {}, options, req)\r\n    );\r\n\r\n    // Enable developers to modify the proxyReq before headers are sent\r\n    proxyReq.on('socket', function(socket) {\r\n      if(server && !proxyReq.getHeader('expect')) {\r\n        server.emit('proxyReq', proxyReq, req, res, options);\r\n      }\r\n    });\r\n\r\n    // allow outgoing socket to timeout so that we could\r\n    // show an error page at the initial request\r\n    if(options.proxyTimeout) {\r\n      proxyReq.setTimeout(options.proxyTimeout, function() {\r\n         proxyReq.abort();\r\n      });\r\n    }\r\n\r\n    // Ensure we abort proxy if request is aborted\r\n    req.on('aborted', function () {\r\n      proxyReq.abort();\r\n    });\r\n\r\n    // handle errors in proxy and incoming request, just like for forward proxy\r\n    var proxyError = createErrorHandler(proxyReq, options.target);\r\n    req.on('error', proxyError);\r\n    proxyReq.on('error', proxyError);\r\n\r\n    function createErrorHandler(proxyReq, url) {\r\n      return function proxyError(err) {\r\n        if (req.socket.destroyed && err.code === 'ECONNRESET') {\r\n          server.emit('econnreset', err, req, res, url);\r\n          return proxyReq.abort();\r\n        }\r\n\r\n        if (clb) {\r\n          clb(err, req, res, url);\r\n        } else {\r\n          server.emit('error', err, req, res, url);\r\n        }\r\n      }\r\n    }\r\n\r\n    (options.buffer || req).pipe(proxyReq);\r\n\r\n    proxyReq.on('response', function(proxyRes) {\r\n      if(server) { server.emit('proxyRes', proxyRes, req, res); }\r\n\r\n      if(!res.headersSent && !options.selfHandleResponse) {\r\n        for(var i=0; i < web_o.length; i++) {\r\n          if(web_o[i](req, res, proxyRes, options)) { break; }\r\n        }\r\n      }\r\n\r\n      if (!res.finished) {\r\n        // Allow us to listen when the proxy has completed\r\n        proxyRes.on('end', function () {\r\n          if (server) server.emit('end', req, res, proxyRes);\r\n        });\r\n        // We pipe to the response unless its expected to be handled by the user\r\n        if (!options.selfHandleResponse) proxyRes.pipe(res);\r\n      } else {\r\n        if (server) server.emit('end', req, res, proxyRes);\r\n      }\r\n    });\r\n  }\r\n\r\n};\r\n", "var http   = require('http'),\r\n    https  = require('https'),\r\n    common = require('../common');\r\n\r\n/*!\r\n * Array of passes.\r\n *\r\n * A `pass` is just a function that is executed on `req, socket, options`\r\n * so that you can easily add new checks while still keeping the base\r\n * flexible.\r\n */\r\n\r\n/*\r\n * Websockets Passes\r\n *\r\n */\r\n\r\n\r\nmodule.exports = {\r\n  /**\r\n   * WebSocket requests must have the `GET` method and\r\n   * the `upgrade:websocket` header\r\n   *\r\n   * @param {ClientRequest} Req Request object\r\n   * @param {Socket} Websocket\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  checkMethodAndHeader : function checkMethodAndHeader(req, socket) {\r\n    if (req.method !== 'GET' || !req.headers.upgrade) {\r\n      socket.destroy();\r\n      return true;\r\n    }\r\n\r\n    if (req.headers.upgrade.toLowerCase() !== 'websocket') {\r\n      socket.destroy();\r\n      return true;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Sets `x-forwarded-*` headers if specified in config.\r\n   *\r\n   * @param {ClientRequest} Req Request object\r\n   * @param {Socket} Websocket\r\n   * @param {Object} Options Config object passed to the proxy\r\n   *\r\n   * @api private\r\n   */\r\n\r\n  XHeaders : function XHeaders(req, socket, options) {\r\n    if(!options.xfwd) return;\r\n\r\n    var values = {\r\n      for  : req.connection.remoteAddress || req.socket.remoteAddress,\r\n      port : common.getPort(req),\r\n      proto: common.hasEncryptedConnection(req) ? 'wss' : 'ws'\r\n    };\r\n\r\n    ['for', 'port', 'proto'].forEach(function(header) {\r\n      req.headers['x-forwarded-' + header] =\r\n        (req.headers['x-forwarded-' + header] || '') +\r\n        (req.headers['x-forwarded-' + header] ? ',' : '') +\r\n        values[header];\r\n    });\r\n  },\r\n\r\n  /**\r\n   * Does the actual proxying. Make the request and upgrade it\r\n   * send the Switching Protocols request and pipe the sockets.\r\n   *\r\n   * @param {ClientRequest} Req Request object\r\n   * @param {Socket} Websocket\r\n   * @param {Object} Options Config object passed to the proxy\r\n   *\r\n   * @api private\r\n   */\r\n  stream : function stream(req, socket, options, head, server, clb) {\r\n\r\n    var createHttpHeader = function(line, headers) {\r\n      return Object.keys(headers).reduce(function (head, key) {\r\n        var value = headers[key];\r\n\r\n        if (!Array.isArray(value)) {\r\n          head.push(key + ': ' + value);\r\n          return head;\r\n        }\r\n\r\n        for (var i = 0; i < value.length; i++) {\r\n          head.push(key + ': ' + value[i]);\r\n        }\r\n        return head;\r\n      }, [line])\r\n      .join('\\r\\n') + '\\r\\n\\r\\n';\r\n    }\r\n\r\n    common.setupSocket(socket);\r\n\r\n    if (head && head.length) socket.unshift(head);\r\n\r\n\r\n    var proxyReq = (common.isSSL.test(options.target.protocol) ? https : http).request(\r\n      common.setupOutgoing(options.ssl || {}, options, req)\r\n    );\r\n\r\n    // Enable developers to modify the proxyReq before headers are sent\r\n    if (server) { server.emit('proxyReqWs', proxyReq, req, socket, options, head); }\r\n\r\n    // Error Handler\r\n    proxyReq.on('error', onOutgoingError);\r\n    proxyReq.on('response', function (res) {\r\n      // if upgrade event isn't going to happen, close the socket\r\n      if (!res.upgrade) {\r\n        socket.write(createHttpHeader('HTTP/' + res.httpVersion + ' ' + res.statusCode + ' ' + res.statusMessage, res.headers));\r\n        res.pipe(socket);\r\n      }\r\n    });\r\n\r\n    proxyReq.on('upgrade', function(proxyRes, proxySocket, proxyHead) {\r\n      proxySocket.on('error', onOutgoingError);\r\n\r\n      // Allow us to listen when the websocket has completed\r\n      proxySocket.on('end', function () {\r\n        server.emit('close', proxyRes, proxySocket, proxyHead);\r\n      });\r\n\r\n      // The pipe below will end proxySocket if socket closes cleanly, but not\r\n      // if it errors (eg, vanishes from the net and starts returning\r\n      // EHOSTUNREACH). We need to do that explicitly.\r\n      socket.on('error', function () {\r\n        proxySocket.end();\r\n      });\r\n\r\n      common.setupSocket(proxySocket);\r\n\r\n      if (proxyHead && proxyHead.length) proxySocket.unshift(proxyHead);\r\n\r\n      //\r\n      // Remark: Handle writing the headers to the socket when switching protocols\r\n      // Also handles when a header is an array\r\n      //\r\n      socket.write(createHttpHeader('HTTP/1.1 101 Switching Protocols', proxyRes.headers));\r\n\r\n      proxySocket.pipe(socket).pipe(proxySocket);\r\n\r\n      server.emit('open', proxySocket);\r\n      server.emit('proxySocket', proxySocket);  //DEPRECATED.\r\n    });\r\n\r\n    return proxyReq.end(); // XXX: CHECK IF THIS IS THIS CORRECT\r\n\r\n    function onOutgoingError(err) {\r\n      if (clb) {\r\n        clb(err, req, socket);\r\n      } else {\r\n        server.emit('error', err, req, socket);\r\n      }\r\n      socket.end();\r\n    }\r\n  }\r\n};\r\n", "var httpProxy = module.exports,\r\n    extend    = require('util')._extend,\r\n    parse_url = require('url').parse,\r\n    EE3       = require('eventemitter3'),\r\n    http      = require('http'),\r\n    https     = require('https'),\r\n    web       = require('./passes/web-incoming'),\r\n    ws        = require('./passes/ws-incoming');\r\n\r\nhttpProxy.Server = ProxyServer;\r\n\r\n/**\r\n * Returns a function that creates the loader for\r\n * either `ws` or `web`'s  passes.\r\n *\r\n * Examples:\r\n *\r\n *    httpProxy.createRightProxy('ws')\r\n *    // => [Function]\r\n *\r\n * @param {String} Type Either 'ws' or 'web'\r\n * \r\n * @return {Function} Loader Function that when called returns an iterator for the right passes\r\n *\r\n * @api private\r\n */\r\n\r\nfunction createRightProxy(type) {\r\n\r\n  return function(options) {\r\n    return function(req, res /*, [head], [opts] */) {\r\n      var passes = (type === 'ws') ? this.wsPasses : this.webPasses,\r\n          args = [].slice.call(arguments),\r\n          cntr = args.length - 1,\r\n          head, cbl;\r\n\r\n      /* optional args parse begin */\r\n      if(typeof args[cntr] === 'function') {\r\n        cbl = args[cntr];\r\n\r\n        cntr--;\r\n      }\r\n\r\n      var requestOptions = options;\r\n      if(\r\n        !(args[cntr] instanceof Buffer) &&\r\n        args[cntr] !== res\r\n      ) {\r\n        //Copy global options\r\n        requestOptions = extend({}, options);\r\n        //Overwrite with request options\r\n        extend(requestOptions, args[cntr]);\r\n\r\n        cntr--;\r\n      }\r\n\r\n      if(args[cntr] instanceof Buffer) {\r\n        head = args[cntr];\r\n      }\r\n\r\n      /* optional args parse end */\r\n\r\n      ['target', 'forward'].forEach(function(e) {\r\n        if (typeof requestOptions[e] === 'string')\r\n          requestOptions[e] = parse_url(requestOptions[e]);\r\n      });\r\n\r\n      if (!requestOptions.target && !requestOptions.forward) {\r\n        return this.emit('error', new Error('Must provide a proper URL as target'));\r\n      }\r\n\r\n      for(var i=0; i < passes.length; i++) {\r\n        /**\r\n         * Call of passes functions\r\n         * pass(req, res, options, head)\r\n         *\r\n         * In WebSockets case the `res` variable\r\n         * refer to the connection socket\r\n         * pass(req, socket, options, head)\r\n         */\r\n        if(passes[i](req, res, requestOptions, head, this, cbl)) { // passes can return a truthy value to halt the loop\r\n          break;\r\n        }\r\n      }\r\n    };\r\n  };\r\n}\r\nhttpProxy.createRightProxy = createRightProxy;\r\n\r\nfunction ProxyServer(options) {\r\n  EE3.call(this);\r\n\r\n  options = options || {};\r\n  options.prependPath = options.prependPath === false ? false : true;\r\n\r\n  this.web = this.proxyRequest           = createRightProxy('web')(options);\r\n  this.ws  = this.proxyWebsocketRequest  = createRightProxy('ws')(options);\r\n  this.options = options;\r\n\r\n  this.webPasses = Object.keys(web).map(function(pass) {\r\n    return web[pass];\r\n  });\r\n\r\n  this.wsPasses = Object.keys(ws).map(function(pass) {\r\n    return ws[pass];\r\n  });\r\n\r\n  this.on('error', this.onError, this);\r\n\r\n}\r\n\r\nrequire('util').inherits(ProxyServer, EE3);\r\n\r\nProxyServer.prototype.onError = function (err) {\r\n  //\r\n  // Remark: Replicate node core behavior using EE3\r\n  // so we force people to handle their own errors\r\n  //\r\n  if(this.listeners('error').length === 1) {\r\n    throw err;\r\n  }\r\n};\r\n\r\nProxyServer.prototype.listen = function(port, hostname) {\r\n  var self    = this,\r\n      closure = function(req, res) { self.web(req, res); };\r\n\r\n  this._server  = this.options.ssl ?\r\n    https.createServer(this.options.ssl, closure) :\r\n    http.createServer(closure);\r\n\r\n  if(this.options.ws) {\r\n    this._server.on('upgrade', function(req, socket, head) { self.ws(req, socket, head); });\r\n  }\r\n\r\n  this._server.listen(port, hostname);\r\n\r\n  return this;\r\n};\r\n\r\nProxyServer.prototype.close = function(callback) {\r\n  var self = this;\r\n  if (this._server) {\r\n    this._server.close(done);\r\n  }\r\n\r\n  // Wrap callback to nullify server after all open connections are closed.\r\n  function done() {\r\n    self._server = null;\r\n    if (callback) {\r\n      callback.apply(null, arguments);\r\n    }\r\n  };\r\n};\r\n\r\nProxyServer.prototype.before = function(type, passName, callback) {\r\n  if (type !== 'ws' && type !== 'web') {\r\n    throw new Error('type must be `web` or `ws`');\r\n  }\r\n  var passes = (type === 'ws') ? this.wsPasses : this.webPasses,\r\n      i = false;\r\n\r\n  passes.forEach(function(v, idx) {\r\n    if(v.name === passName) i = idx;\r\n  })\r\n\r\n  if(i === false) throw new Error('No such pass');\r\n\r\n  passes.splice(i, 0, callback);\r\n};\r\nProxyServer.prototype.after = function(type, passName, callback) {\r\n  if (type !== 'ws' && type !== 'web') {\r\n    throw new Error('type must be `web` or `ws`');\r\n  }\r\n  var passes = (type === 'ws') ? this.wsPasses : this.webPasses,\r\n      i = false;\r\n\r\n  passes.forEach(function(v, idx) {\r\n    if(v.name === passName) i = idx;\r\n  })\r\n\r\n  if(i === false) throw new Error('No such pass');\r\n\r\n  passes.splice(i++, 0, callback);\r\n};\r\n", " // Use explicit /index.js to help browserify negociation in require '/lib/http-proxy' (!)\r\nvar ProxyServer = require('./http-proxy/index.js').Server;\r\n\r\n\r\n/**\r\n * Creates the proxy server.\r\n *\r\n * Examples:\r\n *\r\n *    httpProxy.createProxyServer({ .. }, 8000)\r\n *    // => '{ web: [Function], ws: [Function] ... }'\r\n *\r\n * @param {Object} Options Config object passed to the proxy\r\n *\r\n * @return {Object} Proxy Proxy object with handlers for `ws` and `web` requests\r\n *\r\n * @api public\r\n */\r\n\r\n\r\nfunction createProxyServer(options) {\r\n  /*\r\n   *  `options` is needed and it must have the following layout:\r\n   *\r\n   *  {\r\n   *    target : <url string to be parsed with the url module>\r\n   *    forward: <url string to be parsed with the url module>\r\n   *    agent  : <object to be passed to http(s).request>\r\n   *    ssl    : <object to be passed to https.createServer()>\r\n   *    ws     : <true/false, if you want to proxy websockets>\r\n   *    xfwd   : <true/false, adds x-forward headers>\r\n   *    secure : <true/false, verify SSL certificate>\r\n   *    toProxy: <true/false, explicitly specify if we are proxying to another proxy>\r\n   *    prependPath: <true/false, Default: true - specify whether you want to prepend the target's path to the proxy path>\r\n   *    ignorePath: <true/false, Default: false - specify whether you want to ignore the proxy path of the incoming request>\r\n   *    localAddress : <Local interface string to bind for outgoing connections>\r\n   *    changeOrigin: <true/false, Default: false - changes the origin of the host header to the target URL>\r\n   *    preserveHeaderKeyCase: <true/false, Default: false - specify whether you want to keep letter case of response header key >\r\n   *    auth   : Basic authentication i.e. 'user:password' to compute an Authorization header.\r\n   *    hostRewrite: rewrites the location hostname on (201/301/302/307/308) redirects, Default: null.\r\n   *    autoRewrite: rewrites the location host/port on (201/301/302/307/308) redirects based on requested host/port. Default: false.\r\n   *    protocolRewrite: rewrites the location protocol on (201/301/302/307/308) redirects to 'http' or 'https'. Default: null.\r\n   *  }\r\n   *\r\n   *  NOTE: `options.ws` and `options.ssl` are optional.\r\n   *    `options.target and `options.forward` cannot be\r\n   *    both missing\r\n   *  }\r\n   */\r\n\r\n  return new ProxyServer(options);\r\n}\r\n\r\n\r\nProxyServer.createProxyServer = createProxyServer;\r\nProxyServer.createServer      = createProxyServer;\r\nProxyServer.createProxy       = createProxyServer;\r\n\r\n\r\n\r\n\r\n/**\r\n * Export the proxy \"Server\" as the main export.\r\n */\r\nmodule.exports = ProxyServer;\r\n\r\n", "/*!\r\n * Caron dimonio, con occhi di bragia\r\n * loro accennando, tutte le raccoglie;\r\n * batte col remo qualunque s’adagia \r\n *\r\n * Charon the demon, with the eyes of glede,\r\n * Beckoning to them, collects them all together,\r\n * Beats with his oar whoever lags behind\r\n *          \r\n *          Dante - The Divine Comedy (Canto III)\r\n */\r\n\r\nmodule.exports = require('./lib/http-proxy');", "'use strict';\r\n\r\nmodule.exports = value => {\r\n\tif (Object.prototype.toString.call(value) !== '[object Object]') {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tconst prototype = Object.getPrototypeOf(value);\r\n\treturn prototype === null || prototype === Object.prototype;\r\n};\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ERRORS = void 0;\r\nvar ERRORS;\r\n(function (ERRORS) {\r\n    ERRORS[\"ERR_CONFIG_FACTORY_TARGET_MISSING\"] = \"[HPM] Missing \\\"target\\\" option. Example: {target: \\\"http://www.example.org\\\"}\";\r\n    ERRORS[\"ERR_CONTEXT_MATCHER_GENERIC\"] = \"[HPM] Invalid context. Expecting something like: \\\"/api\\\" or [\\\"/api\\\", \\\"/ajax\\\"]\";\r\n    ERRORS[\"ERR_CONTEXT_MATCHER_INVALID_ARRAY\"] = \"[HPM] Invalid context. Expecting something like: [\\\"/api\\\", \\\"/ajax\\\"] or [\\\"/api/**\\\", \\\"!**.html\\\"]\";\r\n    ERRORS[\"ERR_PATH_REWRITER_CONFIG\"] = \"[HPM] Invalid pathRewrite config. Expecting object with pathRewrite config or a rewrite function\";\r\n})(ERRORS = exports.ERRORS || (exports.ERRORS = {}));\r\n", "\"use strict\";\r\n/* eslint-disable prefer-rest-params */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getArrow = exports.getInstance = void 0;\r\nconst util = require(\"util\");\r\nlet loggerInstance;\r\nconst defaultProvider = {\r\n    // tslint:disable: no-console\r\n    log: console.log,\r\n    debug: console.log,\r\n    info: console.info,\r\n    warn: console.warn,\r\n    error: console.error,\r\n};\r\n// log level 'weight'\r\nvar LEVELS;\r\n(function (LEVELS) {\r\n    LEVELS[LEVELS[\"debug\"] = 10] = \"debug\";\r\n    LEVELS[LEVELS[\"info\"] = 20] = \"info\";\r\n    LEVELS[LEVELS[\"warn\"] = 30] = \"warn\";\r\n    LEVELS[LEVELS[\"error\"] = 50] = \"error\";\r\n    LEVELS[LEVELS[\"silent\"] = 80] = \"silent\";\r\n})(LEVELS || (LEVELS = {}));\r\nfunction getInstance() {\r\n    if (!loggerInstance) {\r\n        loggerInstance = new Logger();\r\n    }\r\n    return loggerInstance;\r\n}\r\nexports.getInstance = getInstance;\r\nclass Logger {\r\n    constructor() {\r\n        this.setLevel('info');\r\n        this.setProvider(() => defaultProvider);\r\n    }\r\n    // log will log messages, regardless of logLevels\r\n    log() {\r\n        this.provider.log(this._interpolate.apply(null, arguments));\r\n    }\r\n    debug() {\r\n        if (this._showLevel('debug')) {\r\n            this.provider.debug(this._interpolate.apply(null, arguments));\r\n        }\r\n    }\r\n    info() {\r\n        if (this._showLevel('info')) {\r\n            this.provider.info(this._interpolate.apply(null, arguments));\r\n        }\r\n    }\r\n    warn() {\r\n        if (this._showLevel('warn')) {\r\n            this.provider.warn(this._interpolate.apply(null, arguments));\r\n        }\r\n    }\r\n    error() {\r\n        if (this._showLevel('error')) {\r\n            this.provider.error(this._interpolate.apply(null, arguments));\r\n        }\r\n    }\r\n    setLevel(v) {\r\n        if (this.isValidLevel(v)) {\r\n            this.logLevel = v;\r\n        }\r\n    }\r\n    setProvider(fn) {\r\n        if (fn && this.isValidProvider(fn)) {\r\n            this.provider = fn(defaultProvider);\r\n        }\r\n    }\r\n    isValidProvider(fnProvider) {\r\n        const result = true;\r\n        if (fnProvider && typeof fnProvider !== 'function') {\r\n            throw new Error('[HPM] Log provider config error. Expecting a function.');\r\n        }\r\n        return result;\r\n    }\r\n    isValidLevel(levelName) {\r\n        const validLevels = Object.keys(LEVELS);\r\n        const isValid = validLevels.includes(levelName);\r\n        if (!isValid) {\r\n            throw new Error('[HPM] Log level error. Invalid logLevel.');\r\n        }\r\n        return isValid;\r\n    }\r\n    /**\r\n     * Decide to log or not to log, based on the log levels 'weight'\r\n     * @param  {String}  showLevel [debug, info, warn, error, silent]\r\n     * @return {Boolean}\r\n     */\r\n    _showLevel(showLevel) {\r\n        let result = false;\r\n        const currentLogLevel = LEVELS[this.logLevel];\r\n        if (currentLogLevel && currentLogLevel <= LEVELS[showLevel]) {\r\n            result = true;\r\n        }\r\n        return result;\r\n    }\r\n    // make sure logged messages and its data are return interpolated\r\n    // make it possible for additional log data, such date/time or custom prefix.\r\n    _interpolate(format, ...args) {\r\n        const result = util.format(format, ...args);\r\n        return result;\r\n    }\r\n}\r\n/**\r\n * -> normal proxy\r\n * => router\r\n * ~> pathRewrite\r\n * ≈> router + pathRewrite\r\n *\r\n * @param  {String} originalPath\r\n * @param  {String} newPath\r\n * @param  {String} originalTarget\r\n * @param  {String} newTarget\r\n * @return {String}\r\n */\r\nfunction getArrow(originalPath, newPath, originalTarget, newTarget) {\r\n    const arrow = ['>'];\r\n    const isNewTarget = originalTarget !== newTarget; // router\r\n    const isNewPath = originalPath !== newPath; // pathRewrite\r\n    if (isNewPath && !isNewTarget) {\r\n        arrow.unshift('~');\r\n    }\r\n    else if (!isNewPath && isNewTarget) {\r\n        arrow.unshift('=');\r\n    }\r\n    else if (isNewPath && isNewTarget) {\r\n        arrow.unshift('≈');\r\n    }\r\n    else {\r\n        arrow.unshift('-');\r\n    }\r\n    return arrow.join('');\r\n}\r\nexports.getArrow = getArrow;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.createConfig = void 0;\r\nconst isPlainObj = require(\"is-plain-obj\");\r\nconst url = require(\"url\");\r\nconst errors_1 = require(\"./errors\");\r\nconst logger_1 = require(\"./logger\");\r\nconst logger = (0, logger_1.getInstance)();\r\nfunction createConfig(context, opts) {\r\n    // structure of config object to be returned\r\n    const config = {\r\n        context: undefined,\r\n        options: {},\r\n    };\r\n    // app.use('/api', proxy({target:'http://localhost:9000'}));\r\n    if (isContextless(context, opts)) {\r\n        config.context = '/';\r\n        config.options = Object.assign(config.options, context);\r\n        // app.use('/api', proxy('http://localhost:9000'));\r\n        // app.use(proxy('http://localhost:9000/api'));\r\n    }\r\n    else if (isStringShortHand(context)) {\r\n        const oUrl = url.parse(context);\r\n        const target = [oUrl.protocol, '//', oUrl.host].join('');\r\n        config.context = oUrl.pathname || '/';\r\n        config.options = Object.assign(config.options, { target }, opts);\r\n        if (oUrl.protocol === 'ws:' || oUrl.protocol === 'wss:') {\r\n            config.options.ws = true;\r\n        }\r\n        // app.use('/api', proxy({target:'http://localhost:9000'}));\r\n    }\r\n    else {\r\n        config.context = context;\r\n        config.options = Object.assign(config.options, opts);\r\n    }\r\n    configureLogger(config.options);\r\n    if (!config.options.target && !config.options.router) {\r\n        throw new Error(errors_1.ERRORS.ERR_CONFIG_FACTORY_TARGET_MISSING);\r\n    }\r\n    return config;\r\n}\r\nexports.createConfig = createConfig;\r\n/**\r\n * Checks if a String only target/config is provided.\r\n * This can be just the host or with the optional path.\r\n *\r\n * @example\r\n *      app.use('/api', proxy('http://localhost:9000'));\r\n *      app.use(proxy('http://localhost:9000/api'));\r\n *\r\n * @param  {String}  context [description]\r\n * @return {Boolean}         [description]\r\n */\r\nfunction isStringShortHand(context) {\r\n    if (typeof context === 'string') {\r\n        return !!url.parse(context).host;\r\n    }\r\n}\r\n/**\r\n * Checks if a Object only config is provided, without a context.\r\n * In this case the all paths will be proxied.\r\n *\r\n * @example\r\n *     app.use('/api', proxy({target:'http://localhost:9000'}));\r\n *\r\n * @param  {Object}  context [description]\r\n * @param  {*}       opts    [description]\r\n * @return {Boolean}         [description]\r\n */\r\nfunction isContextless(context, opts) {\r\n    return isPlainObj(context) && (opts == null || Object.keys(opts).length === 0);\r\n}\r\nfunction configureLogger(options) {\r\n    if (options.logLevel) {\r\n        logger.setLevel(options.logLevel);\r\n    }\r\n    if (options.logProvider) {\r\n        logger.setProvider(options.logProvider);\r\n    }\r\n}\r\n", "/*!\r\n * is-extglob <https://github.com/jonschlinkert/is-extglob>\r\n *\r\n * Copyright (c) 2014-2016, Jon Schlinkert.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nmodule.exports = function isExtglob(str) {\r\n  if (typeof str !== 'string' || str === '') {\r\n    return false;\r\n  }\r\n\r\n  var match;\r\n  while ((match = /(\\\\).|([@?!+*]\\(.*\\))/g.exec(str))) {\r\n    if (match[2]) return true;\r\n    str = str.slice(match.index + match[0].length);\r\n  }\r\n\r\n  return false;\r\n};\r\n", "/*!\r\n * is-glob <https://github.com/jonschlinkert/is-glob>\r\n *\r\n * Copyright (c) 2014-2017, Jon Schlinkert.\r\n * Released under the MIT License.\r\n */\r\n\r\nvar isExtglob = require('is-extglob');\r\nvar chars = { '{': '}', '(': ')', '[': ']'};\r\nvar strictCheck = function(str) {\r\n  if (str[0] === '!') {\r\n    return true;\r\n  }\r\n  var index = 0;\r\n  var pipeIndex = -2;\r\n  var closeSquareIndex = -2;\r\n  var closeCurlyIndex = -2;\r\n  var closeParenIndex = -2;\r\n  var backSlashIndex = -2;\r\n  while (index < str.length) {\r\n    if (str[index] === '*') {\r\n      return true;\r\n    }\r\n\r\n    if (str[index + 1] === '?' && /[\\].+)]/.test(str[index])) {\r\n      return true;\r\n    }\r\n\r\n    if (closeSquareIndex !== -1 && str[index] === '[' && str[index + 1] !== ']') {\r\n      if (closeSquareIndex < index) {\r\n        closeSquareIndex = str.indexOf(']', index);\r\n      }\r\n      if (closeSquareIndex > index) {\r\n        if (backSlashIndex === -1 || backSlashIndex > closeSquareIndex) {\r\n          return true;\r\n        }\r\n        backSlashIndex = str.indexOf('\\\\', index);\r\n        if (backSlashIndex === -1 || backSlashIndex > closeSquareIndex) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (closeCurlyIndex !== -1 && str[index] === '{' && str[index + 1] !== '}') {\r\n      closeCurlyIndex = str.indexOf('}', index);\r\n      if (closeCurlyIndex > index) {\r\n        backSlashIndex = str.indexOf('\\\\', index);\r\n        if (backSlashIndex === -1 || backSlashIndex > closeCurlyIndex) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (closeParenIndex !== -1 && str[index] === '(' && str[index + 1] === '?' && /[:!=]/.test(str[index + 2]) && str[index + 3] !== ')') {\r\n      closeParenIndex = str.indexOf(')', index);\r\n      if (closeParenIndex > index) {\r\n        backSlashIndex = str.indexOf('\\\\', index);\r\n        if (backSlashIndex === -1 || backSlashIndex > closeParenIndex) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (pipeIndex !== -1 && str[index] === '(' && str[index + 1] !== '|') {\r\n      if (pipeIndex < index) {\r\n        pipeIndex = str.indexOf('|', index);\r\n      }\r\n      if (pipeIndex !== -1 && str[pipeIndex + 1] !== ')') {\r\n        closeParenIndex = str.indexOf(')', pipeIndex);\r\n        if (closeParenIndex > pipeIndex) {\r\n          backSlashIndex = str.indexOf('\\\\', pipeIndex);\r\n          if (backSlashIndex === -1 || backSlashIndex > closeParenIndex) {\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (str[index] === '\\\\') {\r\n      var open = str[index + 1];\r\n      index += 2;\r\n      var close = chars[open];\r\n\r\n      if (close) {\r\n        var n = str.indexOf(close, index);\r\n        if (n !== -1) {\r\n          index = n + 1;\r\n        }\r\n      }\r\n\r\n      if (str[index] === '!') {\r\n        return true;\r\n      }\r\n    } else {\r\n      index++;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nvar relaxedCheck = function(str) {\r\n  if (str[0] === '!') {\r\n    return true;\r\n  }\r\n  var index = 0;\r\n  while (index < str.length) {\r\n    if (/[*?{}()[\\]]/.test(str[index])) {\r\n      return true;\r\n    }\r\n\r\n    if (str[index] === '\\\\') {\r\n      var open = str[index + 1];\r\n      index += 2;\r\n      var close = chars[open];\r\n\r\n      if (close) {\r\n        var n = str.indexOf(close, index);\r\n        if (n !== -1) {\r\n          index = n + 1;\r\n        }\r\n      }\r\n\r\n      if (str[index] === '!') {\r\n        return true;\r\n      }\r\n    } else {\r\n      index++;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nmodule.exports = function isGlob(str, options) {\r\n  if (typeof str !== 'string' || str === '') {\r\n    return false;\r\n  }\r\n\r\n  if (isExtglob(str)) {\r\n    return true;\r\n  }\r\n\r\n  var check = strictCheck;\r\n\r\n  // optionally relax check\r\n  if (options && options.strict === false) {\r\n    check = relaxedCheck;\r\n  }\r\n\r\n  return check(str);\r\n};\r\n", "'use strict';\r\n\r\nexports.isInteger = num => {\r\n  if (typeof num === 'number') {\r\n    return Number.isInteger(num);\r\n  }\r\n  if (typeof num === 'string' && num.trim() !== '') {\r\n    return Number.isInteger(Number(num));\r\n  }\r\n  return false;\r\n};\r\n\r\n/**\r\n * Find a node of the given type\r\n */\r\n\r\nexports.find = (node, type) => node.nodes.find(node => node.type === type);\r\n\r\n/**\r\n * Find a node of the given type\r\n */\r\n\r\nexports.exceedsLimit = (min, max, step = 1, limit) => {\r\n  if (limit === false) return false;\r\n  if (!exports.isInteger(min) || !exports.isInteger(max)) return false;\r\n  return ((Number(max) - Number(min)) / Number(step)) >= limit;\r\n};\r\n\r\n/**\r\n * Escape the given node with '\\\\' before node.value\r\n */\r\n\r\nexports.escapeNode = (block, n = 0, type) => {\r\n  const node = block.nodes[n];\r\n  if (!node) return;\r\n\r\n  if ((type && node.type === type) || node.type === 'open' || node.type === 'close') {\r\n    if (node.escaped !== true) {\r\n      node.value = '\\\\' + node.value;\r\n      node.escaped = true;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Returns true if the given brace node should be enclosed in literal braces\r\n */\r\n\r\nexports.encloseBrace = node => {\r\n  if (node.type !== 'brace') return false;\r\n  if ((node.commas >> 0 + node.ranges >> 0) === 0) {\r\n    node.invalid = true;\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\n/**\r\n * Returns true if a brace node is invalid.\r\n */\r\n\r\nexports.isInvalidBrace = block => {\r\n  if (block.type !== 'brace') return false;\r\n  if (block.invalid === true || block.dollar) return true;\r\n  if ((block.commas >> 0 + block.ranges >> 0) === 0) {\r\n    block.invalid = true;\r\n    return true;\r\n  }\r\n  if (block.open !== true || block.close !== true) {\r\n    block.invalid = true;\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\n/**\r\n * Returns true if a node is an open or close node\r\n */\r\n\r\nexports.isOpenOrClose = node => {\r\n  if (node.type === 'open' || node.type === 'close') {\r\n    return true;\r\n  }\r\n  return node.open === true || node.close === true;\r\n};\r\n\r\n/**\r\n * Reduce an array of text nodes.\r\n */\r\n\r\nexports.reduce = nodes => nodes.reduce((acc, node) => {\r\n  if (node.type === 'text') acc.push(node.value);\r\n  if (node.type === 'range') node.type = 'text';\r\n  return acc;\r\n}, []);\r\n\r\n/**\r\n * Flatten an array\r\n */\r\n\r\nexports.flatten = (...args) => {\r\n  const result = [];\r\n\r\n  const flat = arr => {\r\n    for (let i = 0; i < arr.length; i++) {\r\n      const ele = arr[i];\r\n\r\n      if (Array.isArray(ele)) {\r\n        flat(ele);\r\n        continue;\r\n      }\r\n\r\n      if (ele !== undefined) {\r\n        result.push(ele);\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n\r\n  flat(args);\r\n  return result;\r\n};\r\n", "'use strict';\r\n\r\nconst utils = require('./utils');\r\n\r\nmodule.exports = (ast, options = {}) => {\r\n  const stringify = (node, parent = {}) => {\r\n    const invalidBlock = options.escapeInvalid && utils.isInvalidBrace(parent);\r\n    const invalidNode = node.invalid === true && options.escapeInvalid === true;\r\n    let output = '';\r\n\r\n    if (node.value) {\r\n      if ((invalidBlock || invalidNode) && utils.isOpenOrClose(node)) {\r\n        return '\\\\' + node.value;\r\n      }\r\n      return node.value;\r\n    }\r\n\r\n    if (node.value) {\r\n      return node.value;\r\n    }\r\n\r\n    if (node.nodes) {\r\n      for (const child of node.nodes) {\r\n        output += stringify(child);\r\n      }\r\n    }\r\n    return output;\r\n  };\r\n\r\n  return stringify(ast);\r\n};\r\n\r\n", "/*!\r\n * is-number <https://github.com/jonschlinkert/is-number>\r\n *\r\n * Copyright (c) 2014-present, Jon Schlinkert.\r\n * Released under the MIT License.\r\n */\r\n\r\n'use strict';\r\n\r\nmodule.exports = function(num) {\r\n  if (typeof num === 'number') {\r\n    return num - num === 0;\r\n  }\r\n  if (typeof num === 'string' && num.trim() !== '') {\r\n    return Number.isFinite ? Number.isFinite(+num) : isFinite(+num);\r\n  }\r\n  return false;\r\n};\r\n", "/*!\r\n * to-regex-range <https://github.com/micromatch/to-regex-range>\r\n *\r\n * Copyright (c) 2015-present, Jon Schlinkert.\r\n * Released under the MIT License.\r\n */\r\n\r\n'use strict';\r\n\r\nconst isNumber = require('is-number');\r\n\r\nconst toRegexRange = (min, max, options) => {\r\n  if (isNumber(min) === false) {\r\n    throw new TypeError('toRegexRange: expected the first argument to be a number');\r\n  }\r\n\r\n  if (max === void 0 || min === max) {\r\n    return String(min);\r\n  }\r\n\r\n  if (isNumber(max) === false) {\r\n    throw new TypeError('toRegexRange: expected the second argument to be a number.');\r\n  }\r\n\r\n  let opts = { relaxZeros: true, ...options };\r\n  if (typeof opts.strictZeros === 'boolean') {\r\n    opts.relaxZeros = opts.strictZeros === false;\r\n  }\r\n\r\n  let relax = String(opts.relaxZeros);\r\n  let shorthand = String(opts.shorthand);\r\n  let capture = String(opts.capture);\r\n  let wrap = String(opts.wrap);\r\n  let cacheKey = min + ':' + max + '=' + relax + shorthand + capture + wrap;\r\n\r\n  if (toRegexRange.cache.hasOwnProperty(cacheKey)) {\r\n    return toRegexRange.cache[cacheKey].result;\r\n  }\r\n\r\n  let a = Math.min(min, max);\r\n  let b = Math.max(min, max);\r\n\r\n  if (Math.abs(a - b) === 1) {\r\n    let result = min + '|' + max;\r\n    if (opts.capture) {\r\n      return `(${result})`;\r\n    }\r\n    if (opts.wrap === false) {\r\n      return result;\r\n    }\r\n    return `(?:${result})`;\r\n  }\r\n\r\n  let isPadded = hasPadding(min) || hasPadding(max);\r\n  let state = { min, max, a, b };\r\n  let positives = [];\r\n  let negatives = [];\r\n\r\n  if (isPadded) {\r\n    state.isPadded = isPadded;\r\n    state.maxLen = String(state.max).length;\r\n  }\r\n\r\n  if (a < 0) {\r\n    let newMin = b < 0 ? Math.abs(b) : 1;\r\n    negatives = splitToPatterns(newMin, Math.abs(a), state, opts);\r\n    a = state.a = 0;\r\n  }\r\n\r\n  if (b >= 0) {\r\n    positives = splitToPatterns(a, b, state, opts);\r\n  }\r\n\r\n  state.negatives = negatives;\r\n  state.positives = positives;\r\n  state.result = collatePatterns(negatives, positives, opts);\r\n\r\n  if (opts.capture === true) {\r\n    state.result = `(${state.result})`;\r\n  } else if (opts.wrap !== false && (positives.length + negatives.length) > 1) {\r\n    state.result = `(?:${state.result})`;\r\n  }\r\n\r\n  toRegexRange.cache[cacheKey] = state;\r\n  return state.result;\r\n};\r\n\r\nfunction collatePatterns(neg, pos, options) {\r\n  let onlyNegative = filterPatterns(neg, pos, '-', false, options) || [];\r\n  let onlyPositive = filterPatterns(pos, neg, '', false, options) || [];\r\n  let intersected = filterPatterns(neg, pos, '-?', true, options) || [];\r\n  let subpatterns = onlyNegative.concat(intersected).concat(onlyPositive);\r\n  return subpatterns.join('|');\r\n}\r\n\r\nfunction splitToRanges(min, max) {\r\n  let nines = 1;\r\n  let zeros = 1;\r\n\r\n  let stop = countNines(min, nines);\r\n  let stops = new Set([max]);\r\n\r\n  while (min <= stop && stop <= max) {\r\n    stops.add(stop);\r\n    nines += 1;\r\n    stop = countNines(min, nines);\r\n  }\r\n\r\n  stop = countZeros(max + 1, zeros) - 1;\r\n\r\n  while (min < stop && stop <= max) {\r\n    stops.add(stop);\r\n    zeros += 1;\r\n    stop = countZeros(max + 1, zeros) - 1;\r\n  }\r\n\r\n  stops = [...stops];\r\n  stops.sort(compare);\r\n  return stops;\r\n}\r\n\r\n/**\r\n * Convert a range to a regex pattern\r\n * @param {Number} `start`\r\n * @param {Number} `stop`\r\n * @return {String}\r\n */\r\n\r\nfunction rangeToPattern(start, stop, options) {\r\n  if (start === stop) {\r\n    return { pattern: start, count: [], digits: 0 };\r\n  }\r\n\r\n  let zipped = zip(start, stop);\r\n  let digits = zipped.length;\r\n  let pattern = '';\r\n  let count = 0;\r\n\r\n  for (let i = 0; i < digits; i++) {\r\n    let [startDigit, stopDigit] = zipped[i];\r\n\r\n    if (startDigit === stopDigit) {\r\n      pattern += startDigit;\r\n\r\n    } else if (startDigit !== '0' || stopDigit !== '9') {\r\n      pattern += toCharacterClass(startDigit, stopDigit, options);\r\n\r\n    } else {\r\n      count++;\r\n    }\r\n  }\r\n\r\n  if (count) {\r\n    pattern += options.shorthand === true ? '\\\\d' : '[0-9]';\r\n  }\r\n\r\n  return { pattern, count: [count], digits };\r\n}\r\n\r\nfunction splitToPatterns(min, max, tok, options) {\r\n  let ranges = splitToRanges(min, max);\r\n  let tokens = [];\r\n  let start = min;\r\n  let prev;\r\n\r\n  for (let i = 0; i < ranges.length; i++) {\r\n    let max = ranges[i];\r\n    let obj = rangeToPattern(String(start), String(max), options);\r\n    let zeros = '';\r\n\r\n    if (!tok.isPadded && prev && prev.pattern === obj.pattern) {\r\n      if (prev.count.length > 1) {\r\n        prev.count.pop();\r\n      }\r\n\r\n      prev.count.push(obj.count[0]);\r\n      prev.string = prev.pattern + toQuantifier(prev.count);\r\n      start = max + 1;\r\n      continue;\r\n    }\r\n\r\n    if (tok.isPadded) {\r\n      zeros = padZeros(max, tok, options);\r\n    }\r\n\r\n    obj.string = zeros + obj.pattern + toQuantifier(obj.count);\r\n    tokens.push(obj);\r\n    start = max + 1;\r\n    prev = obj;\r\n  }\r\n\r\n  return tokens;\r\n}\r\n\r\nfunction filterPatterns(arr, comparison, prefix, intersection, options) {\r\n  let result = [];\r\n\r\n  for (let ele of arr) {\r\n    let { string } = ele;\r\n\r\n    // only push if _both_ are negative...\r\n    if (!intersection && !contains(comparison, 'string', string)) {\r\n      result.push(prefix + string);\r\n    }\r\n\r\n    // or _both_ are positive\r\n    if (intersection && contains(comparison, 'string', string)) {\r\n      result.push(prefix + string);\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Zip strings\r\n */\r\n\r\nfunction zip(a, b) {\r\n  let arr = [];\r\n  for (let i = 0; i < a.length; i++) arr.push([a[i], b[i]]);\r\n  return arr;\r\n}\r\n\r\nfunction compare(a, b) {\r\n  return a > b ? 1 : b > a ? -1 : 0;\r\n}\r\n\r\nfunction contains(arr, key, val) {\r\n  return arr.some(ele => ele[key] === val);\r\n}\r\n\r\nfunction countNines(min, len) {\r\n  return Number(String(min).slice(0, -len) + '9'.repeat(len));\r\n}\r\n\r\nfunction countZeros(integer, zeros) {\r\n  return integer - (integer % Math.pow(10, zeros));\r\n}\r\n\r\nfunction toQuantifier(digits) {\r\n  let [start = 0, stop = ''] = digits;\r\n  if (stop || start > 1) {\r\n    return `{${start + (stop ? ',' + stop : '')}}`;\r\n  }\r\n  return '';\r\n}\r\n\r\nfunction toCharacterClass(a, b, options) {\r\n  return `[${a}${(b - a === 1) ? '' : '-'}${b}]`;\r\n}\r\n\r\nfunction hasPadding(str) {\r\n  return /^-?(0+)\\d/.test(str);\r\n}\r\n\r\nfunction padZeros(value, tok, options) {\r\n  if (!tok.isPadded) {\r\n    return value;\r\n  }\r\n\r\n  let diff = Math.abs(tok.maxLen - String(value).length);\r\n  let relax = options.relaxZeros !== false;\r\n\r\n  switch (diff) {\r\n    case 0:\r\n      return '';\r\n    case 1:\r\n      return relax ? '0?' : '0';\r\n    case 2:\r\n      return relax ? '0{0,2}' : '00';\r\n    default: {\r\n      return relax ? `0{0,${diff}}` : `0{${diff}}`;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Cache\r\n */\r\n\r\ntoRegexRange.cache = {};\r\ntoRegexRange.clearCache = () => (toRegexRange.cache = {});\r\n\r\n/**\r\n * Expose `toRegexRange`\r\n */\r\n\r\nmodule.exports = toRegexRange;\r\n", "/*!\r\n * fill-range <https://github.com/jonschlinkert/fill-range>\r\n *\r\n * Copyright (c) 2014-present, Jon Schlinkert.\r\n * Licensed under the MIT License.\r\n */\r\n\r\n'use strict';\r\n\r\nconst util = require('util');\r\nconst toRegexRange = require('to-regex-range');\r\n\r\nconst isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\r\n\r\nconst transform = toNumber => {\r\n  return value => toNumber === true ? Number(value) : String(value);\r\n};\r\n\r\nconst isValidValue = value => {\r\n  return typeof value === 'number' || (typeof value === 'string' && value !== '');\r\n};\r\n\r\nconst isNumber = num => Number.isInteger(+num);\r\n\r\nconst zeros = input => {\r\n  let value = `${input}`;\r\n  let index = -1;\r\n  if (value[0] === '-') value = value.slice(1);\r\n  if (value === '0') return false;\r\n  while (value[++index] === '0');\r\n  return index > 0;\r\n};\r\n\r\nconst stringify = (start, end, options) => {\r\n  if (typeof start === 'string' || typeof end === 'string') {\r\n    return true;\r\n  }\r\n  return options.stringify === true;\r\n};\r\n\r\nconst pad = (input, maxLength, toNumber) => {\r\n  if (maxLength > 0) {\r\n    let dash = input[0] === '-' ? '-' : '';\r\n    if (dash) input = input.slice(1);\r\n    input = (dash + input.padStart(dash ? maxLength - 1 : maxLength, '0'));\r\n  }\r\n  if (toNumber === false) {\r\n    return String(input);\r\n  }\r\n  return input;\r\n};\r\n\r\nconst toMaxLen = (input, maxLength) => {\r\n  let negative = input[0] === '-' ? '-' : '';\r\n  if (negative) {\r\n    input = input.slice(1);\r\n    maxLength--;\r\n  }\r\n  while (input.length < maxLength) input = '0' + input;\r\n  return negative ? ('-' + input) : input;\r\n};\r\n\r\nconst toSequence = (parts, options, maxLen) => {\r\n  parts.negatives.sort((a, b) => a < b ? -1 : a > b ? 1 : 0);\r\n  parts.positives.sort((a, b) => a < b ? -1 : a > b ? 1 : 0);\r\n\r\n  let prefix = options.capture ? '' : '?:';\r\n  let positives = '';\r\n  let negatives = '';\r\n  let result;\r\n\r\n  if (parts.positives.length) {\r\n    positives = parts.positives.map(v => toMaxLen(String(v), maxLen)).join('|');\r\n  }\r\n\r\n  if (parts.negatives.length) {\r\n    negatives = `-(${prefix}${parts.negatives.map(v => toMaxLen(String(v), maxLen)).join('|')})`;\r\n  }\r\n\r\n  if (positives && negatives) {\r\n    result = `${positives}|${negatives}`;\r\n  } else {\r\n    result = positives || negatives;\r\n  }\r\n\r\n  if (options.wrap) {\r\n    return `(${prefix}${result})`;\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nconst toRange = (a, b, isNumbers, options) => {\r\n  if (isNumbers) {\r\n    return toRegexRange(a, b, { wrap: false, ...options });\r\n  }\r\n\r\n  let start = String.fromCharCode(a);\r\n  if (a === b) return start;\r\n\r\n  let stop = String.fromCharCode(b);\r\n  return `[${start}-${stop}]`;\r\n};\r\n\r\nconst toRegex = (start, end, options) => {\r\n  if (Array.isArray(start)) {\r\n    let wrap = options.wrap === true;\r\n    let prefix = options.capture ? '' : '?:';\r\n    return wrap ? `(${prefix}${start.join('|')})` : start.join('|');\r\n  }\r\n  return toRegexRange(start, end, options);\r\n};\r\n\r\nconst rangeError = (...args) => {\r\n  return new RangeError('Invalid range arguments: ' + util.inspect(...args));\r\n};\r\n\r\nconst invalidRange = (start, end, options) => {\r\n  if (options.strictRanges === true) throw rangeError([start, end]);\r\n  return [];\r\n};\r\n\r\nconst invalidStep = (step, options) => {\r\n  if (options.strictRanges === true) {\r\n    throw new TypeError(`Expected step \"${step}\" to be a number`);\r\n  }\r\n  return [];\r\n};\r\n\r\nconst fillNumbers = (start, end, step = 1, options = {}) => {\r\n  let a = Number(start);\r\n  let b = Number(end);\r\n\r\n  if (!Number.isInteger(a) || !Number.isInteger(b)) {\r\n    if (options.strictRanges === true) throw rangeError([start, end]);\r\n    return [];\r\n  }\r\n\r\n  // fix negative zero\r\n  if (a === 0) a = 0;\r\n  if (b === 0) b = 0;\r\n\r\n  let descending = a > b;\r\n  let startString = String(start);\r\n  let endString = String(end);\r\n  let stepString = String(step);\r\n  step = Math.max(Math.abs(step), 1);\r\n\r\n  let padded = zeros(startString) || zeros(endString) || zeros(stepString);\r\n  let maxLen = padded ? Math.max(startString.length, endString.length, stepString.length) : 0;\r\n  let toNumber = padded === false && stringify(start, end, options) === false;\r\n  let format = options.transform || transform(toNumber);\r\n\r\n  if (options.toRegex && step === 1) {\r\n    return toRange(toMaxLen(start, maxLen), toMaxLen(end, maxLen), true, options);\r\n  }\r\n\r\n  let parts = { negatives: [], positives: [] };\r\n  let push = num => parts[num < 0 ? 'negatives' : 'positives'].push(Math.abs(num));\r\n  let range = [];\r\n  let index = 0;\r\n\r\n  while (descending ? a >= b : a <= b) {\r\n    if (options.toRegex === true && step > 1) {\r\n      push(a);\r\n    } else {\r\n      range.push(pad(format(a, index), maxLen, toNumber));\r\n    }\r\n    a = descending ? a - step : a + step;\r\n    index++;\r\n  }\r\n\r\n  if (options.toRegex === true) {\r\n    return step > 1\r\n      ? toSequence(parts, options, maxLen)\r\n      : toRegex(range, null, { wrap: false, ...options });\r\n  }\r\n\r\n  return range;\r\n};\r\n\r\nconst fillLetters = (start, end, step = 1, options = {}) => {\r\n  if ((!isNumber(start) && start.length > 1) || (!isNumber(end) && end.length > 1)) {\r\n    return invalidRange(start, end, options);\r\n  }\r\n\r\n  let format = options.transform || (val => String.fromCharCode(val));\r\n  let a = `${start}`.charCodeAt(0);\r\n  let b = `${end}`.charCodeAt(0);\r\n\r\n  let descending = a > b;\r\n  let min = Math.min(a, b);\r\n  let max = Math.max(a, b);\r\n\r\n  if (options.toRegex && step === 1) {\r\n    return toRange(min, max, false, options);\r\n  }\r\n\r\n  let range = [];\r\n  let index = 0;\r\n\r\n  while (descending ? a >= b : a <= b) {\r\n    range.push(format(a, index));\r\n    a = descending ? a - step : a + step;\r\n    index++;\r\n  }\r\n\r\n  if (options.toRegex === true) {\r\n    return toRegex(range, null, { wrap: false, options });\r\n  }\r\n\r\n  return range;\r\n};\r\n\r\nconst fill = (start, end, step, options = {}) => {\r\n  if (end == null && isValidValue(start)) {\r\n    return [start];\r\n  }\r\n\r\n  if (!isValidValue(start) || !isValidValue(end)) {\r\n    return invalidRange(start, end, options);\r\n  }\r\n\r\n  if (typeof step === 'function') {\r\n    return fill(start, end, 1, { transform: step });\r\n  }\r\n\r\n  if (isObject(step)) {\r\n    return fill(start, end, 0, step);\r\n  }\r\n\r\n  let opts = { ...options };\r\n  if (opts.capture === true) opts.wrap = true;\r\n  step = step || opts.step || 1;\r\n\r\n  if (!isNumber(step)) {\r\n    if (step != null && !isObject(step)) return invalidStep(step, opts);\r\n    return fill(start, end, 1, step);\r\n  }\r\n\r\n  if (isNumber(start) && isNumber(end)) {\r\n    return fillNumbers(start, end, step, opts);\r\n  }\r\n\r\n  return fillLetters(start, end, Math.max(Math.abs(step), 1), opts);\r\n};\r\n\r\nmodule.exports = fill;\r\n", "'use strict';\r\n\r\nconst fill = require('fill-range');\r\nconst utils = require('./utils');\r\n\r\nconst compile = (ast, options = {}) => {\r\n  const walk = (node, parent = {}) => {\r\n    const invalidBlock = utils.isInvalidBrace(parent);\r\n    const invalidNode = node.invalid === true && options.escapeInvalid === true;\r\n    const invalid = invalidBlock === true || invalidNode === true;\r\n    const prefix = options.escapeInvalid === true ? '\\\\' : '';\r\n    let output = '';\r\n\r\n    if (node.isOpen === true) {\r\n      return prefix + node.value;\r\n    }\r\n\r\n    if (node.isClose === true) {\r\n      console.log('node.isClose', prefix, node.value);\r\n      return prefix + node.value;\r\n    }\r\n\r\n    if (node.type === 'open') {\r\n      return invalid ? prefix + node.value : '(';\r\n    }\r\n\r\n    if (node.type === 'close') {\r\n      return invalid ? prefix + node.value : ')';\r\n    }\r\n\r\n    if (node.type === 'comma') {\r\n      return node.prev.type === 'comma' ? '' : invalid ? node.value : '|';\r\n    }\r\n\r\n    if (node.value) {\r\n      return node.value;\r\n    }\r\n\r\n    if (node.nodes && node.ranges > 0) {\r\n      const args = utils.reduce(node.nodes);\r\n      const range = fill(...args, { ...options, wrap: false, toRegex: true, strictZeros: true });\r\n\r\n      if (range.length !== 0) {\r\n        return args.length > 1 && range.length > 1 ? `(${range})` : range;\r\n      }\r\n    }\r\n\r\n    if (node.nodes) {\r\n      for (const child of node.nodes) {\r\n        output += walk(child, node);\r\n      }\r\n    }\r\n\r\n    return output;\r\n  };\r\n\r\n  return walk(ast);\r\n};\r\n\r\nmodule.exports = compile;\r\n", "'use strict';\r\n\r\nconst fill = require('fill-range');\r\nconst stringify = require('./stringify');\r\nconst utils = require('./utils');\r\n\r\nconst append = (queue = '', stash = '', enclose = false) => {\r\n  const result = [];\r\n\r\n  queue = [].concat(queue);\r\n  stash = [].concat(stash);\r\n\r\n  if (!stash.length) return queue;\r\n  if (!queue.length) {\r\n    return enclose ? utils.flatten(stash).map(ele => `{${ele}}`) : stash;\r\n  }\r\n\r\n  for (const item of queue) {\r\n    if (Array.isArray(item)) {\r\n      for (const value of item) {\r\n        result.push(append(value, stash, enclose));\r\n      }\r\n    } else {\r\n      for (let ele of stash) {\r\n        if (enclose === true && typeof ele === 'string') ele = `{${ele}}`;\r\n        result.push(Array.isArray(ele) ? append(item, ele, enclose) : item + ele);\r\n      }\r\n    }\r\n  }\r\n  return utils.flatten(result);\r\n};\r\n\r\nconst expand = (ast, options = {}) => {\r\n  const rangeLimit = options.rangeLimit === undefined ? 1000 : options.rangeLimit;\r\n\r\n  const walk = (node, parent = {}) => {\r\n    node.queue = [];\r\n\r\n    let p = parent;\r\n    let q = parent.queue;\r\n\r\n    while (p.type !== 'brace' && p.type !== 'root' && p.parent) {\r\n      p = p.parent;\r\n      q = p.queue;\r\n    }\r\n\r\n    if (node.invalid || node.dollar) {\r\n      q.push(append(q.pop(), stringify(node, options)));\r\n      return;\r\n    }\r\n\r\n    if (node.type === 'brace' && node.invalid !== true && node.nodes.length === 2) {\r\n      q.push(append(q.pop(), ['{}']));\r\n      return;\r\n    }\r\n\r\n    if (node.nodes && node.ranges > 0) {\r\n      const args = utils.reduce(node.nodes);\r\n\r\n      if (utils.exceedsLimit(...args, options.step, rangeLimit)) {\r\n        throw new RangeError('expanded array length exceeds range limit. Use options.rangeLimit to increase or disable the limit.');\r\n      }\r\n\r\n      let range = fill(...args, options);\r\n      if (range.length === 0) {\r\n        range = stringify(node, options);\r\n      }\r\n\r\n      q.push(append(q.pop(), range));\r\n      node.nodes = [];\r\n      return;\r\n    }\r\n\r\n    const enclose = utils.encloseBrace(node);\r\n    let queue = node.queue;\r\n    let block = node;\r\n\r\n    while (block.type !== 'brace' && block.type !== 'root' && block.parent) {\r\n      block = block.parent;\r\n      queue = block.queue;\r\n    }\r\n\r\n    for (let i = 0; i < node.nodes.length; i++) {\r\n      const child = node.nodes[i];\r\n\r\n      if (child.type === 'comma' && node.type === 'brace') {\r\n        if (i === 1) queue.push('');\r\n        queue.push('');\r\n        continue;\r\n      }\r\n\r\n      if (child.type === 'close') {\r\n        q.push(append(q.pop(), queue, enclose));\r\n        continue;\r\n      }\r\n\r\n      if (child.value && child.type !== 'open') {\r\n        queue.push(append(queue.pop(), child.value));\r\n        continue;\r\n      }\r\n\r\n      if (child.nodes) {\r\n        walk(child, node);\r\n      }\r\n    }\r\n\r\n    return queue;\r\n  };\r\n\r\n  return utils.flatten(walk(ast));\r\n};\r\n\r\nmodule.exports = expand;\r\n", "'use strict';\r\n\r\nmodule.exports = {\r\n  MAX_LENGTH: 10000,\r\n\r\n  // Digits\r\n  CHAR_0: '0', /* 0 */\r\n  CHAR_9: '9', /* 9 */\r\n\r\n  // Alphabet chars.\r\n  CHAR_UPPERCASE_A: 'A', /* A */\r\n  CHAR_LOWERCASE_A: 'a', /* a */\r\n  CHAR_UPPERCASE_Z: 'Z', /* Z */\r\n  CHAR_LOWERCASE_Z: 'z', /* z */\r\n\r\n  CHAR_LEFT_PARENTHESES: '(', /* ( */\r\n  CHAR_RIGHT_PARENTHESES: ')', /* ) */\r\n\r\n  CHAR_ASTERISK: '*', /* * */\r\n\r\n  // Non-alphabetic chars.\r\n  CHAR_AMPERSAND: '&', /* & */\r\n  CHAR_AT: '@', /* @ */\r\n  CHAR_BACKSLASH: '\\\\', /* \\ */\r\n  CHAR_BACKTICK: '`', /* ` */\r\n  CHAR_CARRIAGE_RETURN: '\\r', /* \\r */\r\n  CHAR_CIRCUMFLEX_ACCENT: '^', /* ^ */\r\n  CHAR_COLON: ':', /* : */\r\n  CHAR_COMMA: ',', /* , */\r\n  CHAR_DOLLAR: '$', /* . */\r\n  CHAR_DOT: '.', /* . */\r\n  CHAR_DOUBLE_QUOTE: '\"', /* \" */\r\n  CHAR_EQUAL: '=', /* = */\r\n  CHAR_EXCLAMATION_MARK: '!', /* ! */\r\n  CHAR_FORM_FEED: '\\f', /* \\f */\r\n  CHAR_FORWARD_SLASH: '/', /* / */\r\n  CHAR_HASH: '#', /* # */\r\n  CHAR_HYPHEN_MINUS: '-', /* - */\r\n  CHAR_LEFT_ANGLE_BRACKET: '<', /* < */\r\n  CHAR_LEFT_CURLY_BRACE: '{', /* { */\r\n  CHAR_LEFT_SQUARE_BRACKET: '[', /* [ */\r\n  CHAR_LINE_FEED: '\\n', /* \\n */\r\n  CHAR_NO_BREAK_SPACE: '\\u00A0', /* \\u00A0 */\r\n  CHAR_PERCENT: '%', /* % */\r\n  CHAR_PLUS: '+', /* + */\r\n  CHAR_QUESTION_MARK: '?', /* ? */\r\n  CHAR_RIGHT_ANGLE_BRACKET: '>', /* > */\r\n  CHAR_RIGHT_CURLY_BRACE: '}', /* } */\r\n  CHAR_RIGHT_SQUARE_BRACKET: ']', /* ] */\r\n  CHAR_SEMICOLON: ';', /* ; */\r\n  CHAR_SINGLE_QUOTE: '\\'', /* ' */\r\n  CHAR_SPACE: ' ', /*   */\r\n  CHAR_TAB: '\\t', /* \\t */\r\n  CHAR_UNDERSCORE: '_', /* _ */\r\n  CHAR_VERTICAL_LINE: '|', /* | */\r\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE: '\\uFEFF' /* \\uFEFF */\r\n};\r\n", "'use strict';\r\n\r\nconst stringify = require('./stringify');\r\n\r\n/**\r\n * Constants\r\n */\r\n\r\nconst {\r\n  MAX_LENGTH,\r\n  CHAR_BACKSLASH, /* \\ */\r\n  CHAR_BACKTICK, /* ` */\r\n  CHAR_COMMA, /* , */\r\n  CHAR_DOT, /* . */\r\n  CHAR_LEFT_PARENTHESES, /* ( */\r\n  CHAR_RIGHT_PARENTHESES, /* ) */\r\n  CHAR_LEFT_CURLY_BRACE, /* { */\r\n  CHAR_RIGHT_CURLY_BRACE, /* } */\r\n  CHAR_LEFT_SQUARE_BRACKET, /* [ */\r\n  CHAR_RIGHT_SQUARE_BRACKET, /* ] */\r\n  CHAR_DOUBLE_QUOTE, /* \" */\r\n  CHAR_SINGLE_QUOTE, /* ' */\r\n  CHAR_NO_BREAK_SPACE,\r\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE\r\n} = require('./constants');\r\n\r\n/**\r\n * parse\r\n */\r\n\r\nconst parse = (input, options = {}) => {\r\n  if (typeof input !== 'string') {\r\n    throw new TypeError('Expected a string');\r\n  }\r\n\r\n  const opts = options || {};\r\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\r\n  if (input.length > max) {\r\n    throw new SyntaxError(`Input length (${input.length}), exceeds max characters (${max})`);\r\n  }\r\n\r\n  const ast = { type: 'root', input, nodes: [] };\r\n  const stack = [ast];\r\n  let block = ast;\r\n  let prev = ast;\r\n  let brackets = 0;\r\n  const length = input.length;\r\n  let index = 0;\r\n  let depth = 0;\r\n  let value;\r\n\r\n  /**\r\n   * Helpers\r\n   */\r\n\r\n  const advance = () => input[index++];\r\n  const push = node => {\r\n    if (node.type === 'text' && prev.type === 'dot') {\r\n      prev.type = 'text';\r\n    }\r\n\r\n    if (prev && prev.type === 'text' && node.type === 'text') {\r\n      prev.value += node.value;\r\n      return;\r\n    }\r\n\r\n    block.nodes.push(node);\r\n    node.parent = block;\r\n    node.prev = prev;\r\n    prev = node;\r\n    return node;\r\n  };\r\n\r\n  push({ type: 'bos' });\r\n\r\n  while (index < length) {\r\n    block = stack[stack.length - 1];\r\n    value = advance();\r\n\r\n    /**\r\n     * Invalid chars\r\n     */\r\n\r\n    if (value === CHAR_ZERO_WIDTH_NOBREAK_SPACE || value === CHAR_NO_BREAK_SPACE) {\r\n      continue;\r\n    }\r\n\r\n    /**\r\n     * Escaped chars\r\n     */\r\n\r\n    if (value === CHAR_BACKSLASH) {\r\n      push({ type: 'text', value: (options.keepEscaping ? value : '') + advance() });\r\n      continue;\r\n    }\r\n\r\n    /**\r\n     * Right square bracket (literal): ']'\r\n     */\r\n\r\n    if (value === CHAR_RIGHT_SQUARE_BRACKET) {\r\n      push({ type: 'text', value: '\\\\' + value });\r\n      continue;\r\n    }\r\n\r\n    /**\r\n     * Left square bracket: '['\r\n     */\r\n\r\n    if (value === CHAR_LEFT_SQUARE_BRACKET) {\r\n      brackets++;\r\n\r\n      let next;\r\n\r\n      while (index < length && (next = advance())) {\r\n        value += next;\r\n\r\n        if (next === CHAR_LEFT_SQUARE_BRACKET) {\r\n          brackets++;\r\n          continue;\r\n        }\r\n\r\n        if (next === CHAR_BACKSLASH) {\r\n          value += advance();\r\n          continue;\r\n        }\r\n\r\n        if (next === CHAR_RIGHT_SQUARE_BRACKET) {\r\n          brackets--;\r\n\r\n          if (brackets === 0) {\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      push({ type: 'text', value });\r\n      continue;\r\n    }\r\n\r\n    /**\r\n     * Parentheses\r\n     */\r\n\r\n    if (value === CHAR_LEFT_PARENTHESES) {\r\n      block = push({ type: 'paren', nodes: [] });\r\n      stack.push(block);\r\n      push({ type: 'text', value });\r\n      continue;\r\n    }\r\n\r\n    if (value === CHAR_RIGHT_PARENTHESES) {\r\n      if (block.type !== 'paren') {\r\n        push({ type: 'text', value });\r\n        continue;\r\n      }\r\n      block = stack.pop();\r\n      push({ type: 'text', value });\r\n      block = stack[stack.length - 1];\r\n      continue;\r\n    }\r\n\r\n    /**\r\n     * Quotes: '|\"|`\r\n     */\r\n\r\n    if (value === CHAR_DOUBLE_QUOTE || value === CHAR_SINGLE_QUOTE || value === CHAR_BACKTICK) {\r\n      const open = value;\r\n      let next;\r\n\r\n      if (options.keepQuotes !== true) {\r\n        value = '';\r\n      }\r\n\r\n      while (index < length && (next = advance())) {\r\n        if (next === CHAR_BACKSLASH) {\r\n          value += next + advance();\r\n          continue;\r\n        }\r\n\r\n        if (next === open) {\r\n          if (options.keepQuotes === true) value += next;\r\n          break;\r\n        }\r\n\r\n        value += next;\r\n      }\r\n\r\n      push({ type: 'text', value });\r\n      continue;\r\n    }\r\n\r\n    /**\r\n     * Left curly brace: '{'\r\n     */\r\n\r\n    if (value === CHAR_LEFT_CURLY_BRACE) {\r\n      depth++;\r\n\r\n      const dollar = prev.value && prev.value.slice(-1) === '$' || block.dollar === true;\r\n      const brace = {\r\n        type: 'brace',\r\n        open: true,\r\n        close: false,\r\n        dollar,\r\n        depth,\r\n        commas: 0,\r\n        ranges: 0,\r\n        nodes: []\r\n      };\r\n\r\n      block = push(brace);\r\n      stack.push(block);\r\n      push({ type: 'open', value });\r\n      continue;\r\n    }\r\n\r\n    /**\r\n     * Right curly brace: '}'\r\n     */\r\n\r\n    if (value === CHAR_RIGHT_CURLY_BRACE) {\r\n      if (block.type !== 'brace') {\r\n        push({ type: 'text', value });\r\n        continue;\r\n      }\r\n\r\n      const type = 'close';\r\n      block = stack.pop();\r\n      block.close = true;\r\n\r\n      push({ type, value });\r\n      depth--;\r\n\r\n      block = stack[stack.length - 1];\r\n      continue;\r\n    }\r\n\r\n    /**\r\n     * Comma: ','\r\n     */\r\n\r\n    if (value === CHAR_COMMA && depth > 0) {\r\n      if (block.ranges > 0) {\r\n        block.ranges = 0;\r\n        const open = block.nodes.shift();\r\n        block.nodes = [open, { type: 'text', value: stringify(block) }];\r\n      }\r\n\r\n      push({ type: 'comma', value });\r\n      block.commas++;\r\n      continue;\r\n    }\r\n\r\n    /**\r\n     * Dot: '.'\r\n     */\r\n\r\n    if (value === CHAR_DOT && depth > 0 && block.commas === 0) {\r\n      const siblings = block.nodes;\r\n\r\n      if (depth === 0 || siblings.length === 0) {\r\n        push({ type: 'text', value });\r\n        continue;\r\n      }\r\n\r\n      if (prev.type === 'dot') {\r\n        block.range = [];\r\n        prev.value += value;\r\n        prev.type = 'range';\r\n\r\n        if (block.nodes.length !== 3 && block.nodes.length !== 5) {\r\n          block.invalid = true;\r\n          block.ranges = 0;\r\n          prev.type = 'text';\r\n          continue;\r\n        }\r\n\r\n        block.ranges++;\r\n        block.args = [];\r\n        continue;\r\n      }\r\n\r\n      if (prev.type === 'range') {\r\n        siblings.pop();\r\n\r\n        const before = siblings[siblings.length - 1];\r\n        before.value += prev.value + value;\r\n        prev = before;\r\n        block.ranges--;\r\n        continue;\r\n      }\r\n\r\n      push({ type: 'dot', value });\r\n      continue;\r\n    }\r\n\r\n    /**\r\n     * Text\r\n     */\r\n\r\n    push({ type: 'text', value });\r\n  }\r\n\r\n  // Mark imbalanced braces and brackets as invalid\r\n  do {\r\n    block = stack.pop();\r\n\r\n    if (block.type !== 'root') {\r\n      block.nodes.forEach(node => {\r\n        if (!node.nodes) {\r\n          if (node.type === 'open') node.isOpen = true;\r\n          if (node.type === 'close') node.isClose = true;\r\n          if (!node.nodes) node.type = 'text';\r\n          node.invalid = true;\r\n        }\r\n      });\r\n\r\n      // get the location of the block on parent.nodes (block's siblings)\r\n      const parent = stack[stack.length - 1];\r\n      const index = parent.nodes.indexOf(block);\r\n      // replace the (invalid) block with it's nodes\r\n      parent.nodes.splice(index, 1, ...block.nodes);\r\n    }\r\n  } while (stack.length > 0);\r\n\r\n  push({ type: 'eos' });\r\n  return ast;\r\n};\r\n\r\nmodule.exports = parse;\r\n", "'use strict';\r\n\r\nconst stringify = require('./lib/stringify');\r\nconst compile = require('./lib/compile');\r\nconst expand = require('./lib/expand');\r\nconst parse = require('./lib/parse');\r\n\r\n/**\r\n * Expand the given pattern or create a regex-compatible string.\r\n *\r\n * ```js\r\n * const braces = require('braces');\r\n * console.log(braces('{a,b,c}', { compile: true })); //=> ['(a|b|c)']\r\n * console.log(braces('{a,b,c}')); //=> ['a', 'b', 'c']\r\n * ```\r\n * @param {String} `str`\r\n * @param {Object} `options`\r\n * @return {String}\r\n * @api public\r\n */\r\n\r\nconst braces = (input, options = {}) => {\r\n  let output = [];\r\n\r\n  if (Array.isArray(input)) {\r\n    for (const pattern of input) {\r\n      const result = braces.create(pattern, options);\r\n      if (Array.isArray(result)) {\r\n        output.push(...result);\r\n      } else {\r\n        output.push(result);\r\n      }\r\n    }\r\n  } else {\r\n    output = [].concat(braces.create(input, options));\r\n  }\r\n\r\n  if (options && options.expand === true && options.nodupes === true) {\r\n    output = [...new Set(output)];\r\n  }\r\n  return output;\r\n};\r\n\r\n/**\r\n * Parse the given `str` with the given `options`.\r\n *\r\n * ```js\r\n * // braces.parse(pattern, [, options]);\r\n * const ast = braces.parse('a/{b,c}/d');\r\n * console.log(ast);\r\n * ```\r\n * @param {String} pattern Brace pattern to parse\r\n * @param {Object} options\r\n * @return {Object} Returns an AST\r\n * @api public\r\n */\r\n\r\nbraces.parse = (input, options = {}) => parse(input, options);\r\n\r\n/**\r\n * Creates a braces string from an AST, or an AST node.\r\n *\r\n * ```js\r\n * const braces = require('braces');\r\n * let ast = braces.parse('foo/{a,b}/bar');\r\n * console.log(stringify(ast.nodes[2])); //=> '{a,b}'\r\n * ```\r\n * @param {String} `input` Brace pattern or AST.\r\n * @param {Object} `options`\r\n * @return {Array} Returns an array of expanded values.\r\n * @api public\r\n */\r\n\r\nbraces.stringify = (input, options = {}) => {\r\n  if (typeof input === 'string') {\r\n    return stringify(braces.parse(input, options), options);\r\n  }\r\n  return stringify(input, options);\r\n};\r\n\r\n/**\r\n * Compiles a brace pattern into a regex-compatible, optimized string.\r\n * This method is called by the main [braces](#braces) function by default.\r\n *\r\n * ```js\r\n * const braces = require('braces');\r\n * console.log(braces.compile('a/{b,c}/d'));\r\n * //=> ['a/(b|c)/d']\r\n * ```\r\n * @param {String} `input` Brace pattern or AST.\r\n * @param {Object} `options`\r\n * @return {Array} Returns an array of expanded values.\r\n * @api public\r\n */\r\n\r\nbraces.compile = (input, options = {}) => {\r\n  if (typeof input === 'string') {\r\n    input = braces.parse(input, options);\r\n  }\r\n  return compile(input, options);\r\n};\r\n\r\n/**\r\n * Expands a brace pattern into an array. This method is called by the\r\n * main [braces](#braces) function when `options.expand` is true. Before\r\n * using this method it's recommended that you read the [performance notes](#performance))\r\n * and advantages of using [.compile](#compile) instead.\r\n *\r\n * ```js\r\n * const braces = require('braces');\r\n * console.log(braces.expand('a/{b,c}/d'));\r\n * //=> ['a/b/d', 'a/c/d'];\r\n * ```\r\n * @param {String} `pattern` Brace pattern\r\n * @param {Object} `options`\r\n * @return {Array} Returns an array of expanded values.\r\n * @api public\r\n */\r\n\r\nbraces.expand = (input, options = {}) => {\r\n  if (typeof input === 'string') {\r\n    input = braces.parse(input, options);\r\n  }\r\n\r\n  let result = expand(input, options);\r\n\r\n  // filter out empty strings if specified\r\n  if (options.noempty === true) {\r\n    result = result.filter(Boolean);\r\n  }\r\n\r\n  // filter out duplicates if specified\r\n  if (options.nodupes === true) {\r\n    result = [...new Set(result)];\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\n/**\r\n * Processes a brace pattern and returns either an expanded array\r\n * (if `options.expand` is true), a highly optimized regex-compatible string.\r\n * This method is called by the main [braces](#braces) function.\r\n *\r\n * ```js\r\n * const braces = require('braces');\r\n * console.log(braces.create('user-{200..300}/project-{a,b,c}-{1..10}'))\r\n * //=> 'user-(20[0-9]|2[1-9][0-9]|300)/project-(a|b|c)-([1-9]|10)'\r\n * ```\r\n * @param {String} `pattern` Brace pattern\r\n * @param {Object} `options`\r\n * @return {Array} Returns an array of expanded values.\r\n * @api public\r\n */\r\n\r\nbraces.create = (input, options = {}) => {\r\n  if (input === '' || input.length < 3) {\r\n    return [input];\r\n  }\r\n\r\n  return options.expand !== true\r\n    ? braces.compile(input, options)\r\n    : braces.expand(input, options);\r\n};\r\n\r\n/**\r\n * Expose \"braces\"\r\n */\r\n\r\nmodule.exports = braces;\r\n", "'use strict';\r\n\r\nconst path = require('path');\r\nconst WIN_SLASH = '\\\\\\\\/';\r\nconst WIN_NO_SLASH = `[^${WIN_SLASH}]`;\r\n\r\n/**\r\n * Posix glob regex\r\n */\r\n\r\nconst DOT_LITERAL = '\\\\.';\r\nconst PLUS_LITERAL = '\\\\+';\r\nconst QMARK_LITERAL = '\\\\?';\r\nconst SLASH_LITERAL = '\\\\/';\r\nconst ONE_CHAR = '(?=.)';\r\nconst QMARK = '[^/]';\r\nconst END_ANCHOR = `(?:${SLASH_LITERAL}|$)`;\r\nconst START_ANCHOR = `(?:^|${SLASH_LITERAL})`;\r\nconst DOTS_SLASH = `${DOT_LITERAL}{1,2}${END_ANCHOR}`;\r\nconst NO_DOT = `(?!${DOT_LITERAL})`;\r\nconst NO_DOTS = `(?!${START_ANCHOR}${DOTS_SLASH})`;\r\nconst NO_DOT_SLASH = `(?!${DOT_LITERAL}{0,1}${END_ANCHOR})`;\r\nconst NO_DOTS_SLASH = `(?!${DOTS_SLASH})`;\r\nconst QMARK_NO_DOT = `[^.${SLASH_LITERAL}]`;\r\nconst STAR = `${QMARK}*?`;\r\n\r\nconst POSIX_CHARS = {\r\n  DOT_LITERAL,\r\n  PLUS_LITERAL,\r\n  QMARK_LITERAL,\r\n  SLASH_LITERAL,\r\n  ONE_CHAR,\r\n  QMARK,\r\n  END_ANCHOR,\r\n  DOTS_SLASH,\r\n  NO_DOT,\r\n  NO_DOTS,\r\n  NO_DOT_SLASH,\r\n  NO_DOTS_SLASH,\r\n  QMARK_NO_DOT,\r\n  STAR,\r\n  START_ANCHOR\r\n};\r\n\r\n/**\r\n * Windows glob regex\r\n */\r\n\r\nconst WINDOWS_CHARS = {\r\n  ...POSIX_CHARS,\r\n\r\n  SLASH_LITERAL: `[${WIN_SLASH}]`,\r\n  QMARK: WIN_NO_SLASH,\r\n  STAR: `${WIN_NO_SLASH}*?`,\r\n  DOTS_SLASH: `${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$)`,\r\n  NO_DOT: `(?!${DOT_LITERAL})`,\r\n  NO_DOTS: `(?!(?:^|[${WIN_SLASH}])${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\r\n  NO_DOT_SLASH: `(?!${DOT_LITERAL}{0,1}(?:[${WIN_SLASH}]|$))`,\r\n  NO_DOTS_SLASH: `(?!${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\r\n  QMARK_NO_DOT: `[^.${WIN_SLASH}]`,\r\n  START_ANCHOR: `(?:^|[${WIN_SLASH}])`,\r\n  END_ANCHOR: `(?:[${WIN_SLASH}]|$)`\r\n};\r\n\r\n/**\r\n * POSIX Bracket Regex\r\n */\r\n\r\nconst POSIX_REGEX_SOURCE = {\r\n  alnum: 'a-zA-Z0-9',\r\n  alpha: 'a-zA-Z',\r\n  ascii: '\\\\x00-\\\\x7F',\r\n  blank: ' \\\\t',\r\n  cntrl: '\\\\x00-\\\\x1F\\\\x7F',\r\n  digit: '0-9',\r\n  graph: '\\\\x21-\\\\x7E',\r\n  lower: 'a-z',\r\n  print: '\\\\x20-\\\\x7E ',\r\n  punct: '\\\\-!\"#$%&\\'()\\\\*+,./:;<=>?@[\\\\]^_`{|}~',\r\n  space: ' \\\\t\\\\r\\\\n\\\\v\\\\f',\r\n  upper: 'A-Z',\r\n  word: 'A-Za-z0-9_',\r\n  xdigit: 'A-Fa-f0-9'\r\n};\r\n\r\nmodule.exports = {\r\n  MAX_LENGTH: 1024 * 64,\r\n  POSIX_REGEX_SOURCE,\r\n\r\n  // regular expressions\r\n  REGEX_BACKSLASH: /\\\\(?![*+?^${}(|)[\\]])/g,\r\n  REGEX_NON_SPECIAL_CHARS: /^[^@![\\].,$*+?^{}()|\\\\/]+/,\r\n  REGEX_SPECIAL_CHARS: /[-*+?.^${}(|)[\\]]/,\r\n  REGEX_SPECIAL_CHARS_BACKREF: /(\\\\?)((\\W)(\\3*))/g,\r\n  REGEX_SPECIAL_CHARS_GLOBAL: /([-*+?.^${}(|)[\\]])/g,\r\n  REGEX_REMOVE_BACKSLASH: /(?:\\[.*?[^\\\\]\\]|\\\\(?=.))/g,\r\n\r\n  // Replace globs with equivalent patterns to reduce parsing time.\r\n  REPLACEMENTS: {\r\n    '***': '*',\r\n    '**/**': '**',\r\n    '**/**/**': '**'\r\n  },\r\n\r\n  // Digits\r\n  CHAR_0: 48, /* 0 */\r\n  CHAR_9: 57, /* 9 */\r\n\r\n  // Alphabet chars.\r\n  CHAR_UPPERCASE_A: 65, /* A */\r\n  CHAR_LOWERCASE_A: 97, /* a */\r\n  CHAR_UPPERCASE_Z: 90, /* Z */\r\n  CHAR_LOWERCASE_Z: 122, /* z */\r\n\r\n  CHAR_LEFT_PARENTHESES: 40, /* ( */\r\n  CHAR_RIGHT_PARENTHESES: 41, /* ) */\r\n\r\n  CHAR_ASTERISK: 42, /* * */\r\n\r\n  // Non-alphabetic chars.\r\n  CHAR_AMPERSAND: 38, /* & */\r\n  CHAR_AT: 64, /* @ */\r\n  CHAR_BACKWARD_SLASH: 92, /* \\ */\r\n  CHAR_CARRIAGE_RETURN: 13, /* \\r */\r\n  CHAR_CIRCUMFLEX_ACCENT: 94, /* ^ */\r\n  CHAR_COLON: 58, /* : */\r\n  CHAR_COMMA: 44, /* , */\r\n  CHAR_DOT: 46, /* . */\r\n  CHAR_DOUBLE_QUOTE: 34, /* \" */\r\n  CHAR_EQUAL: 61, /* = */\r\n  CHAR_EXCLAMATION_MARK: 33, /* ! */\r\n  CHAR_FORM_FEED: 12, /* \\f */\r\n  CHAR_FORWARD_SLASH: 47, /* / */\r\n  CHAR_GRAVE_ACCENT: 96, /* ` */\r\n  CHAR_HASH: 35, /* # */\r\n  CHAR_HYPHEN_MINUS: 45, /* - */\r\n  CHAR_LEFT_ANGLE_BRACKET: 60, /* < */\r\n  CHAR_LEFT_CURLY_BRACE: 123, /* { */\r\n  CHAR_LEFT_SQUARE_BRACKET: 91, /* [ */\r\n  CHAR_LINE_FEED: 10, /* \\n */\r\n  CHAR_NO_BREAK_SPACE: 160, /* \\u00A0 */\r\n  CHAR_PERCENT: 37, /* % */\r\n  CHAR_PLUS: 43, /* + */\r\n  CHAR_QUESTION_MARK: 63, /* ? */\r\n  CHAR_RIGHT_ANGLE_BRACKET: 62, /* > */\r\n  CHAR_RIGHT_CURLY_BRACE: 125, /* } */\r\n  CHAR_RIGHT_SQUARE_BRACKET: 93, /* ] */\r\n  CHAR_SEMICOLON: 59, /* ; */\r\n  CHAR_SINGLE_QUOTE: 39, /* ' */\r\n  CHAR_SPACE: 32, /*   */\r\n  CHAR_TAB: 9, /* \\t */\r\n  CHAR_UNDERSCORE: 95, /* _ */\r\n  CHAR_VERTICAL_LINE: 124, /* | */\r\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE: 65279, /* \\uFEFF */\r\n\r\n  SEP: path.sep,\r\n\r\n  /**\r\n   * Create EXTGLOB_CHARS\r\n   */\r\n\r\n  extglobChars(chars) {\r\n    return {\r\n      '!': { type: 'negate', open: '(?:(?!(?:', close: `))${chars.STAR})` },\r\n      '?': { type: 'qmark', open: '(?:', close: ')?' },\r\n      '+': { type: 'plus', open: '(?:', close: ')+' },\r\n      '*': { type: 'star', open: '(?:', close: ')*' },\r\n      '@': { type: 'at', open: '(?:', close: ')' }\r\n    };\r\n  },\r\n\r\n  /**\r\n   * Create GLOB_CHARS\r\n   */\r\n\r\n  globChars(win32) {\r\n    return win32 === true ? WINDOWS_CHARS : POSIX_CHARS;\r\n  }\r\n};\r\n", "'use strict';\r\n\r\nconst path = require('path');\r\nconst win32 = process.platform === 'win32';\r\nconst {\r\n  REGEX_BACKSLASH,\r\n  REGEX_REMOVE_BACKSLASH,\r\n  REGEX_SPECIAL_CHARS,\r\n  REGEX_SPECIAL_CHARS_GLOBAL\r\n} = require('./constants');\r\n\r\nexports.isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\r\nexports.hasRegexChars = str => REGEX_SPECIAL_CHARS.test(str);\r\nexports.isRegexChar = str => str.length === 1 && exports.hasRegexChars(str);\r\nexports.escapeRegex = str => str.replace(REGEX_SPECIAL_CHARS_GLOBAL, '\\\\$1');\r\nexports.toPosixSlashes = str => str.replace(REGEX_BACKSLASH, '/');\r\n\r\nexports.removeBackslashes = str => {\r\n  return str.replace(REGEX_REMOVE_BACKSLASH, match => {\r\n    return match === '\\\\' ? '' : match;\r\n  });\r\n};\r\n\r\nexports.supportsLookbehinds = () => {\r\n  const segs = process.version.slice(1).split('.').map(Number);\r\n  if (segs.length === 3 && segs[0] >= 9 || (segs[0] === 8 && segs[1] >= 10)) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexports.isWindows = options => {\r\n  if (options && typeof options.windows === 'boolean') {\r\n    return options.windows;\r\n  }\r\n  return win32 === true || path.sep === '\\\\';\r\n};\r\n\r\nexports.escapeLast = (input, char, lastIdx) => {\r\n  const idx = input.lastIndexOf(char, lastIdx);\r\n  if (idx === -1) return input;\r\n  if (input[idx - 1] === '\\\\') return exports.escapeLast(input, char, idx - 1);\r\n  return `${input.slice(0, idx)}\\\\${input.slice(idx)}`;\r\n};\r\n\r\nexports.removePrefix = (input, state = {}) => {\r\n  let output = input;\r\n  if (output.startsWith('./')) {\r\n    output = output.slice(2);\r\n    state.prefix = './';\r\n  }\r\n  return output;\r\n};\r\n\r\nexports.wrapOutput = (input, state = {}, options = {}) => {\r\n  const prepend = options.contains ? '' : '^';\r\n  const append = options.contains ? '' : '$';\r\n\r\n  let output = `${prepend}(?:${input})${append}`;\r\n  if (state.negated === true) {\r\n    output = `(?:^(?!${output}).*$)`;\r\n  }\r\n  return output;\r\n};\r\n", "'use strict';\r\n\r\nconst utils = require('./utils');\r\nconst {\r\n  CHAR_ASTERISK,             /* * */\r\n  CHAR_AT,                   /* @ */\r\n  CHAR_BACKWARD_SLASH,       /* \\ */\r\n  CHAR_COMMA,                /* , */\r\n  CHAR_DOT,                  /* . */\r\n  CHAR_EXCLAMATION_MARK,     /* ! */\r\n  CHAR_FORWARD_SLASH,        /* / */\r\n  CHAR_LEFT_CURLY_BRACE,     /* { */\r\n  CHAR_LEFT_PARENTHESES,     /* ( */\r\n  CHAR_LEFT_SQUARE_BRACKET,  /* [ */\r\n  CHAR_PLUS,                 /* + */\r\n  CHAR_QUESTION_MARK,        /* ? */\r\n  CHAR_RIGHT_CURLY_BRACE,    /* } */\r\n  CHAR_RIGHT_PARENTHESES,    /* ) */\r\n  CHAR_RIGHT_SQUARE_BRACKET  /* ] */\r\n} = require('./constants');\r\n\r\nconst isPathSeparator = code => {\r\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\r\n};\r\n\r\nconst depth = token => {\r\n  if (token.isPrefix !== true) {\r\n    token.depth = token.isGlobstar ? Infinity : 1;\r\n  }\r\n};\r\n\r\n/**\r\n * Quickly scans a glob pattern and returns an object with a handful of\r\n * useful properties, like `isGlob`, `path` (the leading non-glob, if it exists),\r\n * `glob` (the actual pattern), `negated` (true if the path starts with `!` but not\r\n * with `!(`) and `negatedExtglob` (true if the path starts with `!(`).\r\n *\r\n * ```js\r\n * const pm = require('picomatch');\r\n * console.log(pm.scan('foo/bar/*.js'));\r\n * { isGlob: true, input: 'foo/bar/*.js', base: 'foo/bar', glob: '*.js' }\r\n * ```\r\n * @param {String} `str`\r\n * @param {Object} `options`\r\n * @return {Object} Returns an object with tokens and regex source string.\r\n * @api public\r\n */\r\n\r\nconst scan = (input, options) => {\r\n  const opts = options || {};\r\n\r\n  const length = input.length - 1;\r\n  const scanToEnd = opts.parts === true || opts.scanToEnd === true;\r\n  const slashes = [];\r\n  const tokens = [];\r\n  const parts = [];\r\n\r\n  let str = input;\r\n  let index = -1;\r\n  let start = 0;\r\n  let lastIndex = 0;\r\n  let isBrace = false;\r\n  let isBracket = false;\r\n  let isGlob = false;\r\n  let isExtglob = false;\r\n  let isGlobstar = false;\r\n  let braceEscaped = false;\r\n  let backslashes = false;\r\n  let negated = false;\r\n  let negatedExtglob = false;\r\n  let finished = false;\r\n  let braces = 0;\r\n  let prev;\r\n  let code;\r\n  let token = { value: '', depth: 0, isGlob: false };\r\n\r\n  const eos = () => index >= length;\r\n  const peek = () => str.charCodeAt(index + 1);\r\n  const advance = () => {\r\n    prev = code;\r\n    return str.charCodeAt(++index);\r\n  };\r\n\r\n  while (index < length) {\r\n    code = advance();\r\n    let next;\r\n\r\n    if (code === CHAR_BACKWARD_SLASH) {\r\n      backslashes = token.backslashes = true;\r\n      code = advance();\r\n\r\n      if (code === CHAR_LEFT_CURLY_BRACE) {\r\n        braceEscaped = true;\r\n      }\r\n      continue;\r\n    }\r\n\r\n    if (braceEscaped === true || code === CHAR_LEFT_CURLY_BRACE) {\r\n      braces++;\r\n\r\n      while (eos() !== true && (code = advance())) {\r\n        if (code === CHAR_BACKWARD_SLASH) {\r\n          backslashes = token.backslashes = true;\r\n          advance();\r\n          continue;\r\n        }\r\n\r\n        if (code === CHAR_LEFT_CURLY_BRACE) {\r\n          braces++;\r\n          continue;\r\n        }\r\n\r\n        if (braceEscaped !== true && code === CHAR_DOT && (code = advance()) === CHAR_DOT) {\r\n          isBrace = token.isBrace = true;\r\n          isGlob = token.isGlob = true;\r\n          finished = true;\r\n\r\n          if (scanToEnd === true) {\r\n            continue;\r\n          }\r\n\r\n          break;\r\n        }\r\n\r\n        if (braceEscaped !== true && code === CHAR_COMMA) {\r\n          isBrace = token.isBrace = true;\r\n          isGlob = token.isGlob = true;\r\n          finished = true;\r\n\r\n          if (scanToEnd === true) {\r\n            continue;\r\n          }\r\n\r\n          break;\r\n        }\r\n\r\n        if (code === CHAR_RIGHT_CURLY_BRACE) {\r\n          braces--;\r\n\r\n          if (braces === 0) {\r\n            braceEscaped = false;\r\n            isBrace = token.isBrace = true;\r\n            finished = true;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (scanToEnd === true) {\r\n        continue;\r\n      }\r\n\r\n      break;\r\n    }\r\n\r\n    if (code === CHAR_FORWARD_SLASH) {\r\n      slashes.push(index);\r\n      tokens.push(token);\r\n      token = { value: '', depth: 0, isGlob: false };\r\n\r\n      if (finished === true) continue;\r\n      if (prev === CHAR_DOT && index === (start + 1)) {\r\n        start += 2;\r\n        continue;\r\n      }\r\n\r\n      lastIndex = index + 1;\r\n      continue;\r\n    }\r\n\r\n    if (opts.noext !== true) {\r\n      const isExtglobChar = code === CHAR_PLUS\r\n        || code === CHAR_AT\r\n        || code === CHAR_ASTERISK\r\n        || code === CHAR_QUESTION_MARK\r\n        || code === CHAR_EXCLAMATION_MARK;\r\n\r\n      if (isExtglobChar === true && peek() === CHAR_LEFT_PARENTHESES) {\r\n        isGlob = token.isGlob = true;\r\n        isExtglob = token.isExtglob = true;\r\n        finished = true;\r\n        if (code === CHAR_EXCLAMATION_MARK && index === start) {\r\n          negatedExtglob = true;\r\n        }\r\n\r\n        if (scanToEnd === true) {\r\n          while (eos() !== true && (code = advance())) {\r\n            if (code === CHAR_BACKWARD_SLASH) {\r\n              backslashes = token.backslashes = true;\r\n              code = advance();\r\n              continue;\r\n            }\r\n\r\n            if (code === CHAR_RIGHT_PARENTHESES) {\r\n              isGlob = token.isGlob = true;\r\n              finished = true;\r\n              break;\r\n            }\r\n          }\r\n          continue;\r\n        }\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (code === CHAR_ASTERISK) {\r\n      if (prev === CHAR_ASTERISK) isGlobstar = token.isGlobstar = true;\r\n      isGlob = token.isGlob = true;\r\n      finished = true;\r\n\r\n      if (scanToEnd === true) {\r\n        continue;\r\n      }\r\n      break;\r\n    }\r\n\r\n    if (code === CHAR_QUESTION_MARK) {\r\n      isGlob = token.isGlob = true;\r\n      finished = true;\r\n\r\n      if (scanToEnd === true) {\r\n        continue;\r\n      }\r\n      break;\r\n    }\r\n\r\n    if (code === CHAR_LEFT_SQUARE_BRACKET) {\r\n      while (eos() !== true && (next = advance())) {\r\n        if (next === CHAR_BACKWARD_SLASH) {\r\n          backslashes = token.backslashes = true;\r\n          advance();\r\n          continue;\r\n        }\r\n\r\n        if (next === CHAR_RIGHT_SQUARE_BRACKET) {\r\n          isBracket = token.isBracket = true;\r\n          isGlob = token.isGlob = true;\r\n          finished = true;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (scanToEnd === true) {\r\n        continue;\r\n      }\r\n\r\n      break;\r\n    }\r\n\r\n    if (opts.nonegate !== true && code === CHAR_EXCLAMATION_MARK && index === start) {\r\n      negated = token.negated = true;\r\n      start++;\r\n      continue;\r\n    }\r\n\r\n    if (opts.noparen !== true && code === CHAR_LEFT_PARENTHESES) {\r\n      isGlob = token.isGlob = true;\r\n\r\n      if (scanToEnd === true) {\r\n        while (eos() !== true && (code = advance())) {\r\n          if (code === CHAR_LEFT_PARENTHESES) {\r\n            backslashes = token.backslashes = true;\r\n            code = advance();\r\n            continue;\r\n          }\r\n\r\n          if (code === CHAR_RIGHT_PARENTHESES) {\r\n            finished = true;\r\n            break;\r\n          }\r\n        }\r\n        continue;\r\n      }\r\n      break;\r\n    }\r\n\r\n    if (isGlob === true) {\r\n      finished = true;\r\n\r\n      if (scanToEnd === true) {\r\n        continue;\r\n      }\r\n\r\n      break;\r\n    }\r\n  }\r\n\r\n  if (opts.noext === true) {\r\n    isExtglob = false;\r\n    isGlob = false;\r\n  }\r\n\r\n  let base = str;\r\n  let prefix = '';\r\n  let glob = '';\r\n\r\n  if (start > 0) {\r\n    prefix = str.slice(0, start);\r\n    str = str.slice(start);\r\n    lastIndex -= start;\r\n  }\r\n\r\n  if (base && isGlob === true && lastIndex > 0) {\r\n    base = str.slice(0, lastIndex);\r\n    glob = str.slice(lastIndex);\r\n  } else if (isGlob === true) {\r\n    base = '';\r\n    glob = str;\r\n  } else {\r\n    base = str;\r\n  }\r\n\r\n  if (base && base !== '' && base !== '/' && base !== str) {\r\n    if (isPathSeparator(base.charCodeAt(base.length - 1))) {\r\n      base = base.slice(0, -1);\r\n    }\r\n  }\r\n\r\n  if (opts.unescape === true) {\r\n    if (glob) glob = utils.removeBackslashes(glob);\r\n\r\n    if (base && backslashes === true) {\r\n      base = utils.removeBackslashes(base);\r\n    }\r\n  }\r\n\r\n  const state = {\r\n    prefix,\r\n    input,\r\n    start,\r\n    base,\r\n    glob,\r\n    isBrace,\r\n    isBracket,\r\n    isGlob,\r\n    isExtglob,\r\n    isGlobstar,\r\n    negated,\r\n    negatedExtglob\r\n  };\r\n\r\n  if (opts.tokens === true) {\r\n    state.maxDepth = 0;\r\n    if (!isPathSeparator(code)) {\r\n      tokens.push(token);\r\n    }\r\n    state.tokens = tokens;\r\n  }\r\n\r\n  if (opts.parts === true || opts.tokens === true) {\r\n    let prevIndex;\r\n\r\n    for (let idx = 0; idx < slashes.length; idx++) {\r\n      const n = prevIndex ? prevIndex + 1 : start;\r\n      const i = slashes[idx];\r\n      const value = input.slice(n, i);\r\n      if (opts.tokens) {\r\n        if (idx === 0 && start !== 0) {\r\n          tokens[idx].isPrefix = true;\r\n          tokens[idx].value = prefix;\r\n        } else {\r\n          tokens[idx].value = value;\r\n        }\r\n        depth(tokens[idx]);\r\n        state.maxDepth += tokens[idx].depth;\r\n      }\r\n      if (idx !== 0 || value !== '') {\r\n        parts.push(value);\r\n      }\r\n      prevIndex = i;\r\n    }\r\n\r\n    if (prevIndex && prevIndex + 1 < input.length) {\r\n      const value = input.slice(prevIndex + 1);\r\n      parts.push(value);\r\n\r\n      if (opts.tokens) {\r\n        tokens[tokens.length - 1].value = value;\r\n        depth(tokens[tokens.length - 1]);\r\n        state.maxDepth += tokens[tokens.length - 1].depth;\r\n      }\r\n    }\r\n\r\n    state.slashes = slashes;\r\n    state.parts = parts;\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nmodule.exports = scan;\r\n", "'use strict';\r\n\r\nconst constants = require('./constants');\r\nconst utils = require('./utils');\r\n\r\n/**\r\n * Constants\r\n */\r\n\r\nconst {\r\n  MAX_LENGTH,\r\n  POSIX_REGEX_SOURCE,\r\n  REGEX_NON_SPECIAL_CHARS,\r\n  REGEX_SPECIAL_CHARS_BACKREF,\r\n  REPLACEMENTS\r\n} = constants;\r\n\r\n/**\r\n * Helpers\r\n */\r\n\r\nconst expandRange = (args, options) => {\r\n  if (typeof options.expandRange === 'function') {\r\n    return options.expandRange(...args, options);\r\n  }\r\n\r\n  args.sort();\r\n  const value = `[${args.join('-')}]`;\r\n\r\n  try {\r\n    /* eslint-disable-next-line no-new */\r\n    new RegExp(value);\r\n  } catch (ex) {\r\n    return args.map(v => utils.escapeRegex(v)).join('..');\r\n  }\r\n\r\n  return value;\r\n};\r\n\r\n/**\r\n * Create the message for a syntax error\r\n */\r\n\r\nconst syntaxError = (type, char) => {\r\n  return `Missing ${type}: \"${char}\" - use \"\\\\\\\\${char}\" to match literal characters`;\r\n};\r\n\r\n/**\r\n * Parse the given input string.\r\n * @param {String} input\r\n * @param {Object} options\r\n * @return {Object}\r\n */\r\n\r\nconst parse = (input, options) => {\r\n  if (typeof input !== 'string') {\r\n    throw new TypeError('Expected a string');\r\n  }\r\n\r\n  input = REPLACEMENTS[input] || input;\r\n\r\n  const opts = { ...options };\r\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\r\n\r\n  let len = input.length;\r\n  if (len > max) {\r\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\r\n  }\r\n\r\n  const bos = { type: 'bos', value: '', output: opts.prepend || '' };\r\n  const tokens = [bos];\r\n\r\n  const capture = opts.capture ? '' : '?:';\r\n  const win32 = utils.isWindows(options);\r\n\r\n  // create constants based on platform, for windows or posix\r\n  const PLATFORM_CHARS = constants.globChars(win32);\r\n  const EXTGLOB_CHARS = constants.extglobChars(PLATFORM_CHARS);\r\n\r\n  const {\r\n    DOT_LITERAL,\r\n    PLUS_LITERAL,\r\n    SLASH_LITERAL,\r\n    ONE_CHAR,\r\n    DOTS_SLASH,\r\n    NO_DOT,\r\n    NO_DOT_SLASH,\r\n    NO_DOTS_SLASH,\r\n    QMARK,\r\n    QMARK_NO_DOT,\r\n    STAR,\r\n    START_ANCHOR\r\n  } = PLATFORM_CHARS;\r\n\r\n  const globstar = opts => {\r\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\r\n  };\r\n\r\n  const nodot = opts.dot ? '' : NO_DOT;\r\n  const qmarkNoDot = opts.dot ? QMARK : QMARK_NO_DOT;\r\n  let star = opts.bash === true ? globstar(opts) : STAR;\r\n\r\n  if (opts.capture) {\r\n    star = `(${star})`;\r\n  }\r\n\r\n  // minimatch options support\r\n  if (typeof opts.noext === 'boolean') {\r\n    opts.noextglob = opts.noext;\r\n  }\r\n\r\n  const state = {\r\n    input,\r\n    index: -1,\r\n    start: 0,\r\n    dot: opts.dot === true,\r\n    consumed: '',\r\n    output: '',\r\n    prefix: '',\r\n    backtrack: false,\r\n    negated: false,\r\n    brackets: 0,\r\n    braces: 0,\r\n    parens: 0,\r\n    quotes: 0,\r\n    globstar: false,\r\n    tokens\r\n  };\r\n\r\n  input = utils.removePrefix(input, state);\r\n  len = input.length;\r\n\r\n  const extglobs = [];\r\n  const braces = [];\r\n  const stack = [];\r\n  let prev = bos;\r\n  let value;\r\n\r\n  /**\r\n   * Tokenizing helpers\r\n   */\r\n\r\n  const eos = () => state.index === len - 1;\r\n  const peek = state.peek = (n = 1) => input[state.index + n];\r\n  const advance = state.advance = () => input[++state.index] || '';\r\n  const remaining = () => input.slice(state.index + 1);\r\n  const consume = (value = '', num = 0) => {\r\n    state.consumed += value;\r\n    state.index += num;\r\n  };\r\n\r\n  const append = token => {\r\n    state.output += token.output != null ? token.output : token.value;\r\n    consume(token.value);\r\n  };\r\n\r\n  const negate = () => {\r\n    let count = 1;\r\n\r\n    while (peek() === '!' && (peek(2) !== '(' || peek(3) === '?')) {\r\n      advance();\r\n      state.start++;\r\n      count++;\r\n    }\r\n\r\n    if (count % 2 === 0) {\r\n      return false;\r\n    }\r\n\r\n    state.negated = true;\r\n    state.start++;\r\n    return true;\r\n  };\r\n\r\n  const increment = type => {\r\n    state[type]++;\r\n    stack.push(type);\r\n  };\r\n\r\n  const decrement = type => {\r\n    state[type]--;\r\n    stack.pop();\r\n  };\r\n\r\n  /**\r\n   * Push tokens onto the tokens array. This helper speeds up\r\n   * tokenizing by 1) helping us avoid backtracking as much as possible,\r\n   * and 2) helping us avoid creating extra tokens when consecutive\r\n   * characters are plain text. This improves performance and simplifies\r\n   * lookbehinds.\r\n   */\r\n\r\n  const push = tok => {\r\n    if (prev.type === 'globstar') {\r\n      const isBrace = state.braces > 0 && (tok.type === 'comma' || tok.type === 'brace');\r\n      const isExtglob = tok.extglob === true || (extglobs.length && (tok.type === 'pipe' || tok.type === 'paren'));\r\n\r\n      if (tok.type !== 'slash' && tok.type !== 'paren' && !isBrace && !isExtglob) {\r\n        state.output = state.output.slice(0, -prev.output.length);\r\n        prev.type = 'star';\r\n        prev.value = '*';\r\n        prev.output = star;\r\n        state.output += prev.output;\r\n      }\r\n    }\r\n\r\n    if (extglobs.length && tok.type !== 'paren') {\r\n      extglobs[extglobs.length - 1].inner += tok.value;\r\n    }\r\n\r\n    if (tok.value || tok.output) append(tok);\r\n    if (prev && prev.type === 'text' && tok.type === 'text') {\r\n      prev.value += tok.value;\r\n      prev.output = (prev.output || '') + tok.value;\r\n      return;\r\n    }\r\n\r\n    tok.prev = prev;\r\n    tokens.push(tok);\r\n    prev = tok;\r\n  };\r\n\r\n  const extglobOpen = (type, value) => {\r\n    const token = { ...EXTGLOB_CHARS[value], conditions: 1, inner: '' };\r\n\r\n    token.prev = prev;\r\n    token.parens = state.parens;\r\n    token.output = state.output;\r\n    const output = (opts.capture ? '(' : '') + token.open;\r\n\r\n    increment('parens');\r\n    push({ type, value, output: state.output ? '' : ONE_CHAR });\r\n    push({ type: 'paren', extglob: true, value: advance(), output });\r\n    extglobs.push(token);\r\n  };\r\n\r\n  const extglobClose = token => {\r\n    let output = token.close + (opts.capture ? ')' : '');\r\n    let rest;\r\n\r\n    if (token.type === 'negate') {\r\n      let extglobStar = star;\r\n\r\n      if (token.inner && token.inner.length > 1 && token.inner.includes('/')) {\r\n        extglobStar = globstar(opts);\r\n      }\r\n\r\n      if (extglobStar !== star || eos() || /^\\)+$/.test(remaining())) {\r\n        output = token.close = `)$))${extglobStar}`;\r\n      }\r\n\r\n      if (token.inner.includes('*') && (rest = remaining()) && /^\\.[^\\\\/.]+$/.test(rest)) {\r\n        // Any non-magical string (`.ts`) or even nested expression (`.{ts,tsx}`) can follow after the closing parenthesis.\r\n        // In this case, we need to parse the string and use it in the output of the original pattern.\r\n        // Suitable patterns: `/!(*.d).ts`, `/!(*.d).{ts,tsx}`, `**/!(*-dbg).@(js)`.\r\n        //\r\n        // Disabling the `fastpaths` option due to a problem with parsing strings as `.ts` in the pattern like `**/!(*.d).ts`.\r\n        const expression = parse(rest, { ...options, fastpaths: false }).output;\r\n\r\n        output = token.close = `)${expression})${extglobStar})`;\r\n      }\r\n\r\n      if (token.prev.type === 'bos') {\r\n        state.negatedExtglob = true;\r\n      }\r\n    }\r\n\r\n    push({ type: 'paren', extglob: true, value, output });\r\n    decrement('parens');\r\n  };\r\n\r\n  /**\r\n   * Fast paths\r\n   */\r\n\r\n  if (opts.fastpaths !== false && !/(^[*!]|[/()[\\]{}\"])/.test(input)) {\r\n    let backslashes = false;\r\n\r\n    let output = input.replace(REGEX_SPECIAL_CHARS_BACKREF, (m, esc, chars, first, rest, index) => {\r\n      if (first === '\\\\') {\r\n        backslashes = true;\r\n        return m;\r\n      }\r\n\r\n      if (first === '?') {\r\n        if (esc) {\r\n          return esc + first + (rest ? QMARK.repeat(rest.length) : '');\r\n        }\r\n        if (index === 0) {\r\n          return qmarkNoDot + (rest ? QMARK.repeat(rest.length) : '');\r\n        }\r\n        return QMARK.repeat(chars.length);\r\n      }\r\n\r\n      if (first === '.') {\r\n        return DOT_LITERAL.repeat(chars.length);\r\n      }\r\n\r\n      if (first === '*') {\r\n        if (esc) {\r\n          return esc + first + (rest ? star : '');\r\n        }\r\n        return star;\r\n      }\r\n      return esc ? m : `\\\\${m}`;\r\n    });\r\n\r\n    if (backslashes === true) {\r\n      if (opts.unescape === true) {\r\n        output = output.replace(/\\\\/g, '');\r\n      } else {\r\n        output = output.replace(/\\\\+/g, m => {\r\n          return m.length % 2 === 0 ? '\\\\\\\\' : (m ? '\\\\' : '');\r\n        });\r\n      }\r\n    }\r\n\r\n    if (output === input && opts.contains === true) {\r\n      state.output = input;\r\n      return state;\r\n    }\r\n\r\n    state.output = utils.wrapOutput(output, state, options);\r\n    return state;\r\n  }\r\n\r\n  /**\r\n   * Tokenize input until we reach end-of-string\r\n   */\r\n\r\n  while (!eos()) {\r\n    value = advance();\r\n\r\n    if (value === '\\u0000') {\r\n      continue;\r\n    }\r\n\r\n    /**\r\n     * Escaped characters\r\n     */\r\n\r\n    if (value === '\\\\') {\r\n      const next = peek();\r\n\r\n      if (next === '/' && opts.bash !== true) {\r\n        continue;\r\n      }\r\n\r\n      if (next === '.' || next === ';') {\r\n        continue;\r\n      }\r\n\r\n      if (!next) {\r\n        value += '\\\\';\r\n        push({ type: 'text', value });\r\n        continue;\r\n      }\r\n\r\n      // collapse slashes to reduce potential for exploits\r\n      const match = /^\\\\+/.exec(remaining());\r\n      let slashes = 0;\r\n\r\n      if (match && match[0].length > 2) {\r\n        slashes = match[0].length;\r\n        state.index += slashes;\r\n        if (slashes % 2 !== 0) {\r\n          value += '\\\\';\r\n        }\r\n      }\r\n\r\n      if (opts.unescape === true) {\r\n        value = advance();\r\n      } else {\r\n        value += advance();\r\n      }\r\n\r\n      if (state.brackets === 0) {\r\n        push({ type: 'text', value });\r\n        continue;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * If we're inside a regex character class, continue\r\n     * until we reach the closing bracket.\r\n     */\r\n\r\n    if (state.brackets > 0 && (value !== ']' || prev.value === '[' || prev.value === '[^')) {\r\n      if (opts.posix !== false && value === ':') {\r\n        const inner = prev.value.slice(1);\r\n        if (inner.includes('[')) {\r\n          prev.posix = true;\r\n\r\n          if (inner.includes(':')) {\r\n            const idx = prev.value.lastIndexOf('[');\r\n            const pre = prev.value.slice(0, idx);\r\n            const rest = prev.value.slice(idx + 2);\r\n            const posix = POSIX_REGEX_SOURCE[rest];\r\n            if (posix) {\r\n              prev.value = pre + posix;\r\n              state.backtrack = true;\r\n              advance();\r\n\r\n              if (!bos.output && tokens.indexOf(prev) === 1) {\r\n                bos.output = ONE_CHAR;\r\n              }\r\n              continue;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if ((value === '[' && peek() !== ':') || (value === '-' && peek() === ']')) {\r\n        value = `\\\\${value}`;\r\n      }\r\n\r\n      if (value === ']' && (prev.value === '[' || prev.value === '[^')) {\r\n        value = `\\\\${value}`;\r\n      }\r\n\r\n      if (opts.posix === true && value === '!' && prev.value === '[') {\r\n        value = '^';\r\n      }\r\n\r\n      prev.value += value;\r\n      append({ value });\r\n      continue;\r\n    }\r\n\r\n    /**\r\n     * If we're inside a quoted string, continue\r\n     * until we reach the closing double quote.\r\n     */\r\n\r\n    if (state.quotes === 1 && value !== '\"') {\r\n      value = utils.escapeRegex(value);\r\n      prev.value += value;\r\n      append({ value });\r\n      continue;\r\n    }\r\n\r\n    /**\r\n     * Double quotes\r\n     */\r\n\r\n    if (value === '\"') {\r\n      state.quotes = state.quotes === 1 ? 0 : 1;\r\n      if (opts.keepQuotes === true) {\r\n        push({ type: 'text', value });\r\n      }\r\n      continue;\r\n    }\r\n\r\n    /**\r\n     * Parentheses\r\n     */\r\n\r\n    if (value === '(') {\r\n      increment('parens');\r\n      push({ type: 'paren', value });\r\n      continue;\r\n    }\r\n\r\n    if (value === ')') {\r\n      if (state.parens === 0 && opts.strictBrackets === true) {\r\n        throw new SyntaxError(syntaxError('opening', '('));\r\n      }\r\n\r\n      const extglob = extglobs[extglobs.length - 1];\r\n      if (extglob && state.parens === extglob.parens + 1) {\r\n        extglobClose(extglobs.pop());\r\n        continue;\r\n      }\r\n\r\n      push({ type: 'paren', value, output: state.parens ? ')' : '\\\\)' });\r\n      decrement('parens');\r\n      continue;\r\n    }\r\n\r\n    /**\r\n     * Square brackets\r\n     */\r\n\r\n    if (value === '[') {\r\n      if (opts.nobracket === true || !remaining().includes(']')) {\r\n        if (opts.nobracket !== true && opts.strictBrackets === true) {\r\n          throw new SyntaxError(syntaxError('closing', ']'));\r\n        }\r\n\r\n        value = `\\\\${value}`;\r\n      } else {\r\n        increment('brackets');\r\n      }\r\n\r\n      push({ type: 'bracket', value });\r\n      continue;\r\n    }\r\n\r\n    if (value === ']') {\r\n      if (opts.nobracket === true || (prev && prev.type === 'bracket' && prev.value.length === 1)) {\r\n        push({ type: 'text', value, output: `\\\\${value}` });\r\n        continue;\r\n      }\r\n\r\n      if (state.brackets === 0) {\r\n        if (opts.strictBrackets === true) {\r\n          throw new SyntaxError(syntaxError('opening', '['));\r\n        }\r\n\r\n        push({ type: 'text', value, output: `\\\\${value}` });\r\n        continue;\r\n      }\r\n\r\n      decrement('brackets');\r\n\r\n      const prevValue = prev.value.slice(1);\r\n      if (prev.posix !== true && prevValue[0] === '^' && !prevValue.includes('/')) {\r\n        value = `/${value}`;\r\n      }\r\n\r\n      prev.value += value;\r\n      append({ value });\r\n\r\n      // when literal brackets are explicitly disabled\r\n      // assume we should match with a regex character class\r\n      if (opts.literalBrackets === false || utils.hasRegexChars(prevValue)) {\r\n        continue;\r\n      }\r\n\r\n      const escaped = utils.escapeRegex(prev.value);\r\n      state.output = state.output.slice(0, -prev.value.length);\r\n\r\n      // when literal brackets are explicitly enabled\r\n      // assume we should escape the brackets to match literal characters\r\n      if (opts.literalBrackets === true) {\r\n        state.output += escaped;\r\n        prev.value = escaped;\r\n        continue;\r\n      }\r\n\r\n      // when the user specifies nothing, try to match both\r\n      prev.value = `(${capture}${escaped}|${prev.value})`;\r\n      state.output += prev.value;\r\n      continue;\r\n    }\r\n\r\n    /**\r\n     * Braces\r\n     */\r\n\r\n    if (value === '{' && opts.nobrace !== true) {\r\n      increment('braces');\r\n\r\n      const open = {\r\n        type: 'brace',\r\n        value,\r\n        output: '(',\r\n        outputIndex: state.output.length,\r\n        tokensIndex: state.tokens.length\r\n      };\r\n\r\n      braces.push(open);\r\n      push(open);\r\n      continue;\r\n    }\r\n\r\n    if (value === '}') {\r\n      const brace = braces[braces.length - 1];\r\n\r\n      if (opts.nobrace === true || !brace) {\r\n        push({ type: 'text', value, output: value });\r\n        continue;\r\n      }\r\n\r\n      let output = ')';\r\n\r\n      if (brace.dots === true) {\r\n        const arr = tokens.slice();\r\n        const range = [];\r\n\r\n        for (let i = arr.length - 1; i >= 0; i--) {\r\n          tokens.pop();\r\n          if (arr[i].type === 'brace') {\r\n            break;\r\n          }\r\n          if (arr[i].type !== 'dots') {\r\n            range.unshift(arr[i].value);\r\n          }\r\n        }\r\n\r\n        output = expandRange(range, opts);\r\n        state.backtrack = true;\r\n      }\r\n\r\n      if (brace.comma !== true && brace.dots !== true) {\r\n        const out = state.output.slice(0, brace.outputIndex);\r\n        const toks = state.tokens.slice(brace.tokensIndex);\r\n        brace.value = brace.output = '\\\\{';\r\n        value = output = '\\\\}';\r\n        state.output = out;\r\n        for (const t of toks) {\r\n          state.output += (t.output || t.value);\r\n        }\r\n      }\r\n\r\n      push({ type: 'brace', value, output });\r\n      decrement('braces');\r\n      braces.pop();\r\n      continue;\r\n    }\r\n\r\n    /**\r\n     * Pipes\r\n     */\r\n\r\n    if (value === '|') {\r\n      if (extglobs.length > 0) {\r\n        extglobs[extglobs.length - 1].conditions++;\r\n      }\r\n      push({ type: 'text', value });\r\n      continue;\r\n    }\r\n\r\n    /**\r\n     * Commas\r\n     */\r\n\r\n    if (value === ',') {\r\n      let output = value;\r\n\r\n      const brace = braces[braces.length - 1];\r\n      if (brace && stack[stack.length - 1] === 'braces') {\r\n        brace.comma = true;\r\n        output = '|';\r\n      }\r\n\r\n      push({ type: 'comma', value, output });\r\n      continue;\r\n    }\r\n\r\n    /**\r\n     * Slashes\r\n     */\r\n\r\n    if (value === '/') {\r\n      // if the beginning of the glob is \"./\", advance the start\r\n      // to the current index, and don't add the \"./\" characters\r\n      // to the state. This greatly simplifies lookbehinds when\r\n      // checking for BOS characters like \"!\" and \".\" (not \"./\")\r\n      if (prev.type === 'dot' && state.index === state.start + 1) {\r\n        state.start = state.index + 1;\r\n        state.consumed = '';\r\n        state.output = '';\r\n        tokens.pop();\r\n        prev = bos; // reset \"prev\" to the first token\r\n        continue;\r\n      }\r\n\r\n      push({ type: 'slash', value, output: SLASH_LITERAL });\r\n      continue;\r\n    }\r\n\r\n    /**\r\n     * Dots\r\n     */\r\n\r\n    if (value === '.') {\r\n      if (state.braces > 0 && prev.type === 'dot') {\r\n        if (prev.value === '.') prev.output = DOT_LITERAL;\r\n        const brace = braces[braces.length - 1];\r\n        prev.type = 'dots';\r\n        prev.output += value;\r\n        prev.value += value;\r\n        brace.dots = true;\r\n        continue;\r\n      }\r\n\r\n      if ((state.braces + state.parens) === 0 && prev.type !== 'bos' && prev.type !== 'slash') {\r\n        push({ type: 'text', value, output: DOT_LITERAL });\r\n        continue;\r\n      }\r\n\r\n      push({ type: 'dot', value, output: DOT_LITERAL });\r\n      continue;\r\n    }\r\n\r\n    /**\r\n     * Question marks\r\n     */\r\n\r\n    if (value === '?') {\r\n      const isGroup = prev && prev.value === '(';\r\n      if (!isGroup && opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\r\n        extglobOpen('qmark', value);\r\n        continue;\r\n      }\r\n\r\n      if (prev && prev.type === 'paren') {\r\n        const next = peek();\r\n        let output = value;\r\n\r\n        if (next === '<' && !utils.supportsLookbehinds()) {\r\n          throw new Error('Node.js v10 or higher is required for regex lookbehinds');\r\n        }\r\n\r\n        if ((prev.value === '(' && !/[!=<:]/.test(next)) || (next === '<' && !/<([!=]|\\w+>)/.test(remaining()))) {\r\n          output = `\\\\${value}`;\r\n        }\r\n\r\n        push({ type: 'text', value, output });\r\n        continue;\r\n      }\r\n\r\n      if (opts.dot !== true && (prev.type === 'slash' || prev.type === 'bos')) {\r\n        push({ type: 'qmark', value, output: QMARK_NO_DOT });\r\n        continue;\r\n      }\r\n\r\n      push({ type: 'qmark', value, output: QMARK });\r\n      continue;\r\n    }\r\n\r\n    /**\r\n     * Exclamation\r\n     */\r\n\r\n    if (value === '!') {\r\n      if (opts.noextglob !== true && peek() === '(') {\r\n        if (peek(2) !== '?' || !/[!=<:]/.test(peek(3))) {\r\n          extglobOpen('negate', value);\r\n          continue;\r\n        }\r\n      }\r\n\r\n      if (opts.nonegate !== true && state.index === 0) {\r\n        negate();\r\n        continue;\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Plus\r\n     */\r\n\r\n    if (value === '+') {\r\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\r\n        extglobOpen('plus', value);\r\n        continue;\r\n      }\r\n\r\n      if ((prev && prev.value === '(') || opts.regex === false) {\r\n        push({ type: 'plus', value, output: PLUS_LITERAL });\r\n        continue;\r\n      }\r\n\r\n      if ((prev && (prev.type === 'bracket' || prev.type === 'paren' || prev.type === 'brace')) || state.parens > 0) {\r\n        push({ type: 'plus', value });\r\n        continue;\r\n      }\r\n\r\n      push({ type: 'plus', value: PLUS_LITERAL });\r\n      continue;\r\n    }\r\n\r\n    /**\r\n     * Plain text\r\n     */\r\n\r\n    if (value === '@') {\r\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\r\n        push({ type: 'at', extglob: true, value, output: '' });\r\n        continue;\r\n      }\r\n\r\n      push({ type: 'text', value });\r\n      continue;\r\n    }\r\n\r\n    /**\r\n     * Plain text\r\n     */\r\n\r\n    if (value !== '*') {\r\n      if (value === '$' || value === '^') {\r\n        value = `\\\\${value}`;\r\n      }\r\n\r\n      const match = REGEX_NON_SPECIAL_CHARS.exec(remaining());\r\n      if (match) {\r\n        value += match[0];\r\n        state.index += match[0].length;\r\n      }\r\n\r\n      push({ type: 'text', value });\r\n      continue;\r\n    }\r\n\r\n    /**\r\n     * Stars\r\n     */\r\n\r\n    if (prev && (prev.type === 'globstar' || prev.star === true)) {\r\n      prev.type = 'star';\r\n      prev.star = true;\r\n      prev.value += value;\r\n      prev.output = star;\r\n      state.backtrack = true;\r\n      state.globstar = true;\r\n      consume(value);\r\n      continue;\r\n    }\r\n\r\n    let rest = remaining();\r\n    if (opts.noextglob !== true && /^\\([^?]/.test(rest)) {\r\n      extglobOpen('star', value);\r\n      continue;\r\n    }\r\n\r\n    if (prev.type === 'star') {\r\n      if (opts.noglobstar === true) {\r\n        consume(value);\r\n        continue;\r\n      }\r\n\r\n      const prior = prev.prev;\r\n      const before = prior.prev;\r\n      const isStart = prior.type === 'slash' || prior.type === 'bos';\r\n      const afterStar = before && (before.type === 'star' || before.type === 'globstar');\r\n\r\n      if (opts.bash === true && (!isStart || (rest[0] && rest[0] !== '/'))) {\r\n        push({ type: 'star', value, output: '' });\r\n        continue;\r\n      }\r\n\r\n      const isBrace = state.braces > 0 && (prior.type === 'comma' || prior.type === 'brace');\r\n      const isExtglob = extglobs.length && (prior.type === 'pipe' || prior.type === 'paren');\r\n      if (!isStart && prior.type !== 'paren' && !isBrace && !isExtglob) {\r\n        push({ type: 'star', value, output: '' });\r\n        continue;\r\n      }\r\n\r\n      // strip consecutive `/**/`\r\n      while (rest.slice(0, 3) === '/**') {\r\n        const after = input[state.index + 4];\r\n        if (after && after !== '/') {\r\n          break;\r\n        }\r\n        rest = rest.slice(3);\r\n        consume('/**', 3);\r\n      }\r\n\r\n      if (prior.type === 'bos' && eos()) {\r\n        prev.type = 'globstar';\r\n        prev.value += value;\r\n        prev.output = globstar(opts);\r\n        state.output = prev.output;\r\n        state.globstar = true;\r\n        consume(value);\r\n        continue;\r\n      }\r\n\r\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && !afterStar && eos()) {\r\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\r\n        prior.output = `(?:${prior.output}`;\r\n\r\n        prev.type = 'globstar';\r\n        prev.output = globstar(opts) + (opts.strictSlashes ? ')' : '|$)');\r\n        prev.value += value;\r\n        state.globstar = true;\r\n        state.output += prior.output + prev.output;\r\n        consume(value);\r\n        continue;\r\n      }\r\n\r\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && rest[0] === '/') {\r\n        const end = rest[1] !== void 0 ? '|$' : '';\r\n\r\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\r\n        prior.output = `(?:${prior.output}`;\r\n\r\n        prev.type = 'globstar';\r\n        prev.output = `${globstar(opts)}${SLASH_LITERAL}|${SLASH_LITERAL}${end})`;\r\n        prev.value += value;\r\n\r\n        state.output += prior.output + prev.output;\r\n        state.globstar = true;\r\n\r\n        consume(value + advance());\r\n\r\n        push({ type: 'slash', value: '/', output: '' });\r\n        continue;\r\n      }\r\n\r\n      if (prior.type === 'bos' && rest[0] === '/') {\r\n        prev.type = 'globstar';\r\n        prev.value += value;\r\n        prev.output = `(?:^|${SLASH_LITERAL}|${globstar(opts)}${SLASH_LITERAL})`;\r\n        state.output = prev.output;\r\n        state.globstar = true;\r\n        consume(value + advance());\r\n        push({ type: 'slash', value: '/', output: '' });\r\n        continue;\r\n      }\r\n\r\n      // remove single star from output\r\n      state.output = state.output.slice(0, -prev.output.length);\r\n\r\n      // reset previous token to globstar\r\n      prev.type = 'globstar';\r\n      prev.output = globstar(opts);\r\n      prev.value += value;\r\n\r\n      // reset output with globstar\r\n      state.output += prev.output;\r\n      state.globstar = true;\r\n      consume(value);\r\n      continue;\r\n    }\r\n\r\n    const token = { type: 'star', value, output: star };\r\n\r\n    if (opts.bash === true) {\r\n      token.output = '.*?';\r\n      if (prev.type === 'bos' || prev.type === 'slash') {\r\n        token.output = nodot + token.output;\r\n      }\r\n      push(token);\r\n      continue;\r\n    }\r\n\r\n    if (prev && (prev.type === 'bracket' || prev.type === 'paren') && opts.regex === true) {\r\n      token.output = value;\r\n      push(token);\r\n      continue;\r\n    }\r\n\r\n    if (state.index === state.start || prev.type === 'slash' || prev.type === 'dot') {\r\n      if (prev.type === 'dot') {\r\n        state.output += NO_DOT_SLASH;\r\n        prev.output += NO_DOT_SLASH;\r\n\r\n      } else if (opts.dot === true) {\r\n        state.output += NO_DOTS_SLASH;\r\n        prev.output += NO_DOTS_SLASH;\r\n\r\n      } else {\r\n        state.output += nodot;\r\n        prev.output += nodot;\r\n      }\r\n\r\n      if (peek() !== '*') {\r\n        state.output += ONE_CHAR;\r\n        prev.output += ONE_CHAR;\r\n      }\r\n    }\r\n\r\n    push(token);\r\n  }\r\n\r\n  while (state.brackets > 0) {\r\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ']'));\r\n    state.output = utils.escapeLast(state.output, '[');\r\n    decrement('brackets');\r\n  }\r\n\r\n  while (state.parens > 0) {\r\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ')'));\r\n    state.output = utils.escapeLast(state.output, '(');\r\n    decrement('parens');\r\n  }\r\n\r\n  while (state.braces > 0) {\r\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', '}'));\r\n    state.output = utils.escapeLast(state.output, '{');\r\n    decrement('braces');\r\n  }\r\n\r\n  if (opts.strictSlashes !== true && (prev.type === 'star' || prev.type === 'bracket')) {\r\n    push({ type: 'maybe_slash', value: '', output: `${SLASH_LITERAL}?` });\r\n  }\r\n\r\n  // rebuild the output if we had to backtrack at any point\r\n  if (state.backtrack === true) {\r\n    state.output = '';\r\n\r\n    for (const token of state.tokens) {\r\n      state.output += token.output != null ? token.output : token.value;\r\n\r\n      if (token.suffix) {\r\n        state.output += token.suffix;\r\n      }\r\n    }\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\n/**\r\n * Fast paths for creating regular expressions for common glob patterns.\r\n * This can significantly speed up processing and has very little downside\r\n * impact when none of the fast paths match.\r\n */\r\n\r\nparse.fastpaths = (input, options) => {\r\n  const opts = { ...options };\r\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\r\n  const len = input.length;\r\n  if (len > max) {\r\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\r\n  }\r\n\r\n  input = REPLACEMENTS[input] || input;\r\n  const win32 = utils.isWindows(options);\r\n\r\n  // create constants based on platform, for windows or posix\r\n  const {\r\n    DOT_LITERAL,\r\n    SLASH_LITERAL,\r\n    ONE_CHAR,\r\n    DOTS_SLASH,\r\n    NO_DOT,\r\n    NO_DOTS,\r\n    NO_DOTS_SLASH,\r\n    STAR,\r\n    START_ANCHOR\r\n  } = constants.globChars(win32);\r\n\r\n  const nodot = opts.dot ? NO_DOTS : NO_DOT;\r\n  const slashDot = opts.dot ? NO_DOTS_SLASH : NO_DOT;\r\n  const capture = opts.capture ? '' : '?:';\r\n  const state = { negated: false, prefix: '' };\r\n  let star = opts.bash === true ? '.*?' : STAR;\r\n\r\n  if (opts.capture) {\r\n    star = `(${star})`;\r\n  }\r\n\r\n  const globstar = opts => {\r\n    if (opts.noglobstar === true) return star;\r\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\r\n  };\r\n\r\n  const create = str => {\r\n    switch (str) {\r\n      case '*':\r\n        return `${nodot}${ONE_CHAR}${star}`;\r\n\r\n      case '.*':\r\n        return `${DOT_LITERAL}${ONE_CHAR}${star}`;\r\n\r\n      case '*.*':\r\n        return `${nodot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\r\n\r\n      case '*/*':\r\n        return `${nodot}${star}${SLASH_LITERAL}${ONE_CHAR}${slashDot}${star}`;\r\n\r\n      case '**':\r\n        return nodot + globstar(opts);\r\n\r\n      case '**/*':\r\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${ONE_CHAR}${star}`;\r\n\r\n      case '**/*.*':\r\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\r\n\r\n      case '**/.*':\r\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${DOT_LITERAL}${ONE_CHAR}${star}`;\r\n\r\n      default: {\r\n        const match = /^(.*?)\\.(\\w+)$/.exec(str);\r\n        if (!match) return;\r\n\r\n        const source = create(match[1]);\r\n        if (!source) return;\r\n\r\n        return source + DOT_LITERAL + match[2];\r\n      }\r\n    }\r\n  };\r\n\r\n  const output = utils.removePrefix(input, state);\r\n  let source = create(output);\r\n\r\n  if (source && opts.strictSlashes !== true) {\r\n    source += `${SLASH_LITERAL}?`;\r\n  }\r\n\r\n  return source;\r\n};\r\n\r\nmodule.exports = parse;\r\n", "'use strict';\r\n\r\nconst path = require('path');\r\nconst scan = require('./scan');\r\nconst parse = require('./parse');\r\nconst utils = require('./utils');\r\nconst constants = require('./constants');\r\nconst isObject = val => val && typeof val === 'object' && !Array.isArray(val);\r\n\r\n/**\r\n * Creates a matcher function from one or more glob patterns. The\r\n * returned function takes a string to match as its first argument,\r\n * and returns true if the string is a match. The returned matcher\r\n * function also takes a boolean as the second argument that, when true,\r\n * returns an object with additional information.\r\n *\r\n * ```js\r\n * const picomatch = require('picomatch');\r\n * // picomatch(glob[, options]);\r\n *\r\n * const isMatch = picomatch('*.!(*a)');\r\n * console.log(isMatch('a.a')); //=> false\r\n * console.log(isMatch('a.b')); //=> true\r\n * ```\r\n * @name picomatch\r\n * @param {String|Array} `globs` One or more glob patterns.\r\n * @param {Object=} `options`\r\n * @return {Function=} Returns a matcher function.\r\n * @api public\r\n */\r\n\r\nconst picomatch = (glob, options, returnState = false) => {\r\n  if (Array.isArray(glob)) {\r\n    const fns = glob.map(input => picomatch(input, options, returnState));\r\n    const arrayMatcher = str => {\r\n      for (const isMatch of fns) {\r\n        const state = isMatch(str);\r\n        if (state) return state;\r\n      }\r\n      return false;\r\n    };\r\n    return arrayMatcher;\r\n  }\r\n\r\n  const isState = isObject(glob) && glob.tokens && glob.input;\r\n\r\n  if (glob === '' || (typeof glob !== 'string' && !isState)) {\r\n    throw new TypeError('Expected pattern to be a non-empty string');\r\n  }\r\n\r\n  const opts = options || {};\r\n  const posix = utils.isWindows(options);\r\n  const regex = isState\r\n    ? picomatch.compileRe(glob, options)\r\n    : picomatch.makeRe(glob, options, false, true);\r\n\r\n  const state = regex.state;\r\n  delete regex.state;\r\n\r\n  let isIgnored = () => false;\r\n  if (opts.ignore) {\r\n    const ignoreOpts = { ...options, ignore: null, onMatch: null, onResult: null };\r\n    isIgnored = picomatch(opts.ignore, ignoreOpts, returnState);\r\n  }\r\n\r\n  const matcher = (input, returnObject = false) => {\r\n    const { isMatch, match, output } = picomatch.test(input, regex, options, { glob, posix });\r\n    const result = { glob, state, regex, posix, input, output, match, isMatch };\r\n\r\n    if (typeof opts.onResult === 'function') {\r\n      opts.onResult(result);\r\n    }\r\n\r\n    if (isMatch === false) {\r\n      result.isMatch = false;\r\n      return returnObject ? result : false;\r\n    }\r\n\r\n    if (isIgnored(input)) {\r\n      if (typeof opts.onIgnore === 'function') {\r\n        opts.onIgnore(result);\r\n      }\r\n      result.isMatch = false;\r\n      return returnObject ? result : false;\r\n    }\r\n\r\n    if (typeof opts.onMatch === 'function') {\r\n      opts.onMatch(result);\r\n    }\r\n    return returnObject ? result : true;\r\n  };\r\n\r\n  if (returnState) {\r\n    matcher.state = state;\r\n  }\r\n\r\n  return matcher;\r\n};\r\n\r\n/**\r\n * Test `input` with the given `regex`. This is used by the main\r\n * `picomatch()` function to test the input string.\r\n *\r\n * ```js\r\n * const picomatch = require('picomatch');\r\n * // picomatch.test(input, regex[, options]);\r\n *\r\n * console.log(picomatch.test('foo/bar', /^(?:([^/]*?)\\/([^/]*?))$/));\r\n * // { isMatch: true, match: [ 'foo/', 'foo', 'bar' ], output: 'foo/bar' }\r\n * ```\r\n * @param {String} `input` String to test.\r\n * @param {RegExp} `regex`\r\n * @return {Object} Returns an object with matching info.\r\n * @api public\r\n */\r\n\r\npicomatch.test = (input, regex, options, { glob, posix } = {}) => {\r\n  if (typeof input !== 'string') {\r\n    throw new TypeError('Expected input to be a string');\r\n  }\r\n\r\n  if (input === '') {\r\n    return { isMatch: false, output: '' };\r\n  }\r\n\r\n  const opts = options || {};\r\n  const format = opts.format || (posix ? utils.toPosixSlashes : null);\r\n  let match = input === glob;\r\n  let output = (match && format) ? format(input) : input;\r\n\r\n  if (match === false) {\r\n    output = format ? format(input) : input;\r\n    match = output === glob;\r\n  }\r\n\r\n  if (match === false || opts.capture === true) {\r\n    if (opts.matchBase === true || opts.basename === true) {\r\n      match = picomatch.matchBase(input, regex, options, posix);\r\n    } else {\r\n      match = regex.exec(output);\r\n    }\r\n  }\r\n\r\n  return { isMatch: Boolean(match), match, output };\r\n};\r\n\r\n/**\r\n * Match the basename of a filepath.\r\n *\r\n * ```js\r\n * const picomatch = require('picomatch');\r\n * // picomatch.matchBase(input, glob[, options]);\r\n * console.log(picomatch.matchBase('foo/bar.js', '*.js'); // true\r\n * ```\r\n * @param {String} `input` String to test.\r\n * @param {RegExp|String} `glob` Glob pattern or regex created by [.makeRe](#makeRe).\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\npicomatch.matchBase = (input, glob, options, posix = utils.isWindows(options)) => {\r\n  const regex = glob instanceof RegExp ? glob : picomatch.makeRe(glob, options);\r\n  return regex.test(path.basename(input));\r\n};\r\n\r\n/**\r\n * Returns true if **any** of the given glob `patterns` match the specified `string`.\r\n *\r\n * ```js\r\n * const picomatch = require('picomatch');\r\n * // picomatch.isMatch(string, patterns[, options]);\r\n *\r\n * console.log(picomatch.isMatch('a.a', ['b.*', '*.a'])); //=> true\r\n * console.log(picomatch.isMatch('a.a', 'b.*')); //=> false\r\n * ```\r\n * @param {String|Array} str The string to test.\r\n * @param {String|Array} patterns One or more glob patterns to use for matching.\r\n * @param {Object} [options] See available [options](#options).\r\n * @return {Boolean} Returns true if any patterns match `str`\r\n * @api public\r\n */\r\n\r\npicomatch.isMatch = (str, patterns, options) => picomatch(patterns, options)(str);\r\n\r\n/**\r\n * Parse a glob pattern to create the source string for a regular\r\n * expression.\r\n *\r\n * ```js\r\n * const picomatch = require('picomatch');\r\n * const result = picomatch.parse(pattern[, options]);\r\n * ```\r\n * @param {String} `pattern`\r\n * @param {Object} `options`\r\n * @return {Object} Returns an object with useful properties and output to be used as a regex source string.\r\n * @api public\r\n */\r\n\r\npicomatch.parse = (pattern, options) => {\r\n  if (Array.isArray(pattern)) return pattern.map(p => picomatch.parse(p, options));\r\n  return parse(pattern, { ...options, fastpaths: false });\r\n};\r\n\r\n/**\r\n * Scan a glob pattern to separate the pattern into segments.\r\n *\r\n * ```js\r\n * const picomatch = require('picomatch');\r\n * // picomatch.scan(input[, options]);\r\n *\r\n * const result = picomatch.scan('!./foo/*.js');\r\n * console.log(result);\r\n * { prefix: '!./',\r\n *   input: '!./foo/*.js',\r\n *   start: 3,\r\n *   base: 'foo',\r\n *   glob: '*.js',\r\n *   isBrace: false,\r\n *   isBracket: false,\r\n *   isGlob: true,\r\n *   isExtglob: false,\r\n *   isGlobstar: false,\r\n *   negated: true }\r\n * ```\r\n * @param {String} `input` Glob pattern to scan.\r\n * @param {Object} `options`\r\n * @return {Object} Returns an object with\r\n * @api public\r\n */\r\n\r\npicomatch.scan = (input, options) => scan(input, options);\r\n\r\n/**\r\n * Compile a regular expression from the `state` object returned by the\r\n * [parse()](#parse) method.\r\n *\r\n * @param {Object} `state`\r\n * @param {Object} `options`\r\n * @param {Boolean} `returnOutput` Intended for implementors, this argument allows you to return the raw output from the parser.\r\n * @param {Boolean} `returnState` Adds the state to a `state` property on the returned regex. Useful for implementors and debugging.\r\n * @return {RegExp}\r\n * @api public\r\n */\r\n\r\npicomatch.compileRe = (state, options, returnOutput = false, returnState = false) => {\r\n  if (returnOutput === true) {\r\n    return state.output;\r\n  }\r\n\r\n  const opts = options || {};\r\n  const prepend = opts.contains ? '' : '^';\r\n  const append = opts.contains ? '' : '$';\r\n\r\n  let source = `${prepend}(?:${state.output})${append}`;\r\n  if (state && state.negated === true) {\r\n    source = `^(?!${source}).*$`;\r\n  }\r\n\r\n  const regex = picomatch.toRegex(source, options);\r\n  if (returnState === true) {\r\n    regex.state = state;\r\n  }\r\n\r\n  return regex;\r\n};\r\n\r\n/**\r\n * Create a regular expression from a parsed glob pattern.\r\n *\r\n * ```js\r\n * const picomatch = require('picomatch');\r\n * const state = picomatch.parse('*.js');\r\n * // picomatch.compileRe(state[, options]);\r\n *\r\n * console.log(picomatch.compileRe(state));\r\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\r\n * ```\r\n * @param {String} `state` The object returned from the `.parse` method.\r\n * @param {Object} `options`\r\n * @param {Boolean} `returnOutput` Implementors may use this argument to return the compiled output, instead of a regular expression. This is not exposed on the options to prevent end-users from mutating the result.\r\n * @param {Boolean} `returnState` Implementors may use this argument to return the state from the parsed glob with the returned regular expression.\r\n * @return {RegExp} Returns a regex created from the given pattern.\r\n * @api public\r\n */\r\n\r\npicomatch.makeRe = (input, options = {}, returnOutput = false, returnState = false) => {\r\n  if (!input || typeof input !== 'string') {\r\n    throw new TypeError('Expected a non-empty string');\r\n  }\r\n\r\n  let parsed = { negated: false, fastpaths: true };\r\n\r\n  if (options.fastpaths !== false && (input[0] === '.' || input[0] === '*')) {\r\n    parsed.output = parse.fastpaths(input, options);\r\n  }\r\n\r\n  if (!parsed.output) {\r\n    parsed = parse(input, options);\r\n  }\r\n\r\n  return picomatch.compileRe(parsed, options, returnOutput, returnState);\r\n};\r\n\r\n/**\r\n * Create a regular expression from the given regex source string.\r\n *\r\n * ```js\r\n * const picomatch = require('picomatch');\r\n * // picomatch.toRegex(source[, options]);\r\n *\r\n * const { output } = picomatch.parse('*.js');\r\n * console.log(picomatch.toRegex(output));\r\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\r\n * ```\r\n * @param {String} `source` Regular expression source string.\r\n * @param {Object} `options`\r\n * @return {RegExp}\r\n * @api public\r\n */\r\n\r\npicomatch.toRegex = (source, options) => {\r\n  try {\r\n    const opts = options || {};\r\n    return new RegExp(source, opts.flags || (opts.nocase ? 'i' : ''));\r\n  } catch (err) {\r\n    if (options && options.debug === true) throw err;\r\n    return /$^/;\r\n  }\r\n};\r\n\r\n/**\r\n * Picomatch constants.\r\n * @return {Object}\r\n */\r\n\r\npicomatch.constants = constants;\r\n\r\n/**\r\n * Expose \"picomatch\"\r\n */\r\n\r\nmodule.exports = picomatch;\r\n", "'use strict';\r\n\r\nmodule.exports = require('./lib/picomatch');\r\n", "'use strict';\r\n\r\nconst util = require('util');\r\nconst braces = require('braces');\r\nconst picomatch = require('picomatch');\r\nconst utils = require('picomatch/lib/utils');\r\n\r\nconst isEmptyString = v => v === '' || v === './';\r\nconst hasBraces = v => {\r\n  const index = v.indexOf('{');\r\n  return index > -1 && v.indexOf('}', index) > -1;\r\n};\r\n\r\n/**\r\n * Returns an array of strings that match one or more glob patterns.\r\n *\r\n * ```js\r\n * const mm = require('micromatch');\r\n * // mm(list, patterns[, options]);\r\n *\r\n * console.log(mm(['a.js', 'a.txt'], ['*.js']));\r\n * //=> [ 'a.js' ]\r\n * ```\r\n * @param {String|Array<string>} `list` List of strings to match.\r\n * @param {String|Array<string>} `patterns` One or more glob patterns to use for matching.\r\n * @param {Object} `options` See available [options](#options)\r\n * @return {Array} Returns an array of matches\r\n * @summary false\r\n * @api public\r\n */\r\n\r\nconst micromatch = (list, patterns, options) => {\r\n  patterns = [].concat(patterns);\r\n  list = [].concat(list);\r\n\r\n  let omit = new Set();\r\n  let keep = new Set();\r\n  let items = new Set();\r\n  let negatives = 0;\r\n\r\n  let onResult = state => {\r\n    items.add(state.output);\r\n    if (options && options.onResult) {\r\n      options.onResult(state);\r\n    }\r\n  };\r\n\r\n  for (let i = 0; i < patterns.length; i++) {\r\n    let isMatch = picomatch(String(patterns[i]), { ...options, onResult }, true);\r\n    let negated = isMatch.state.negated || isMatch.state.negatedExtglob;\r\n    if (negated) negatives++;\r\n\r\n    for (let item of list) {\r\n      let matched = isMatch(item, true);\r\n\r\n      let match = negated ? !matched.isMatch : matched.isMatch;\r\n      if (!match) continue;\r\n\r\n      if (negated) {\r\n        omit.add(matched.output);\r\n      } else {\r\n        omit.delete(matched.output);\r\n        keep.add(matched.output);\r\n      }\r\n    }\r\n  }\r\n\r\n  let result = negatives === patterns.length ? [...items] : [...keep];\r\n  let matches = result.filter(item => !omit.has(item));\r\n\r\n  if (options && matches.length === 0) {\r\n    if (options.failglob === true) {\r\n      throw new Error(`No matches found for \"${patterns.join(', ')}\"`);\r\n    }\r\n\r\n    if (options.nonull === true || options.nullglob === true) {\r\n      return options.unescape ? patterns.map(p => p.replace(/\\\\/g, '')) : patterns;\r\n    }\r\n  }\r\n\r\n  return matches;\r\n};\r\n\r\n/**\r\n * Backwards compatibility\r\n */\r\n\r\nmicromatch.match = micromatch;\r\n\r\n/**\r\n * Returns a matcher function from the given glob `pattern` and `options`.\r\n * The returned function takes a string to match as its only argument and returns\r\n * true if the string is a match.\r\n *\r\n * ```js\r\n * const mm = require('micromatch');\r\n * // mm.matcher(pattern[, options]);\r\n *\r\n * const isMatch = mm.matcher('*.!(*a)');\r\n * console.log(isMatch('a.a')); //=> false\r\n * console.log(isMatch('a.b')); //=> true\r\n * ```\r\n * @param {String} `pattern` Glob pattern\r\n * @param {Object} `options`\r\n * @return {Function} Returns a matcher function.\r\n * @api public\r\n */\r\n\r\nmicromatch.matcher = (pattern, options) => picomatch(pattern, options);\r\n\r\n/**\r\n * Returns true if **any** of the given glob `patterns` match the specified `string`.\r\n *\r\n * ```js\r\n * const mm = require('micromatch');\r\n * // mm.isMatch(string, patterns[, options]);\r\n *\r\n * console.log(mm.isMatch('a.a', ['b.*', '*.a'])); //=> true\r\n * console.log(mm.isMatch('a.a', 'b.*')); //=> false\r\n * ```\r\n * @param {String} `str` The string to test.\r\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\r\n * @param {Object} `[options]` See available [options](#options).\r\n * @return {Boolean} Returns true if any patterns match `str`\r\n * @api public\r\n */\r\n\r\nmicromatch.isMatch = (str, patterns, options) => picomatch(patterns, options)(str);\r\n\r\n/**\r\n * Backwards compatibility\r\n */\r\n\r\nmicromatch.any = micromatch.isMatch;\r\n\r\n/**\r\n * Returns a list of strings that _**do not match any**_ of the given `patterns`.\r\n *\r\n * ```js\r\n * const mm = require('micromatch');\r\n * // mm.not(list, patterns[, options]);\r\n *\r\n * console.log(mm.not(['a.a', 'b.b', 'c.c'], '*.a'));\r\n * //=> ['b.b', 'c.c']\r\n * ```\r\n * @param {Array} `list` Array of strings to match.\r\n * @param {String|Array} `patterns` One or more glob pattern to use for matching.\r\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\r\n * @return {Array} Returns an array of strings that **do not match** the given patterns.\r\n * @api public\r\n */\r\n\r\nmicromatch.not = (list, patterns, options = {}) => {\r\n  patterns = [].concat(patterns).map(String);\r\n  let result = new Set();\r\n  let items = [];\r\n\r\n  let onResult = state => {\r\n    if (options.onResult) options.onResult(state);\r\n    items.push(state.output);\r\n  };\r\n\r\n  let matches = new Set(micromatch(list, patterns, { ...options, onResult }));\r\n\r\n  for (let item of items) {\r\n    if (!matches.has(item)) {\r\n      result.add(item);\r\n    }\r\n  }\r\n  return [...result];\r\n};\r\n\r\n/**\r\n * Returns true if the given `string` contains the given pattern. Similar\r\n * to [.isMatch](#isMatch) but the pattern can match any part of the string.\r\n *\r\n * ```js\r\n * var mm = require('micromatch');\r\n * // mm.contains(string, pattern[, options]);\r\n *\r\n * console.log(mm.contains('aa/bb/cc', '*b'));\r\n * //=> true\r\n * console.log(mm.contains('aa/bb/cc', '*d'));\r\n * //=> false\r\n * ```\r\n * @param {String} `str` The string to match.\r\n * @param {String|Array} `patterns` Glob pattern to use for matching.\r\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\r\n * @return {Boolean} Returns true if any of the patterns matches any part of `str`.\r\n * @api public\r\n */\r\n\r\nmicromatch.contains = (str, pattern, options) => {\r\n  if (typeof str !== 'string') {\r\n    throw new TypeError(`Expected a string: \"${util.inspect(str)}\"`);\r\n  }\r\n\r\n  if (Array.isArray(pattern)) {\r\n    return pattern.some(p => micromatch.contains(str, p, options));\r\n  }\r\n\r\n  if (typeof pattern === 'string') {\r\n    if (isEmptyString(str) || isEmptyString(pattern)) {\r\n      return false;\r\n    }\r\n\r\n    if (str.includes(pattern) || (str.startsWith('./') && str.slice(2).includes(pattern))) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return micromatch.isMatch(str, pattern, { ...options, contains: true });\r\n};\r\n\r\n/**\r\n * Filter the keys of the given object with the given `glob` pattern\r\n * and `options`. Does not attempt to match nested keys. If you need this feature,\r\n * use [glob-object][] instead.\r\n *\r\n * ```js\r\n * const mm = require('micromatch');\r\n * // mm.matchKeys(object, patterns[, options]);\r\n *\r\n * const obj = { aa: 'a', ab: 'b', ac: 'c' };\r\n * console.log(mm.matchKeys(obj, '*b'));\r\n * //=> { ab: 'b' }\r\n * ```\r\n * @param {Object} `object` The object with keys to filter.\r\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\r\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\r\n * @return {Object} Returns an object with only keys that match the given patterns.\r\n * @api public\r\n */\r\n\r\nmicromatch.matchKeys = (obj, patterns, options) => {\r\n  if (!utils.isObject(obj)) {\r\n    throw new TypeError('Expected the first argument to be an object');\r\n  }\r\n  let keys = micromatch(Object.keys(obj), patterns, options);\r\n  let res = {};\r\n  for (let key of keys) res[key] = obj[key];\r\n  return res;\r\n};\r\n\r\n/**\r\n * Returns true if some of the strings in the given `list` match any of the given glob `patterns`.\r\n *\r\n * ```js\r\n * const mm = require('micromatch');\r\n * // mm.some(list, patterns[, options]);\r\n *\r\n * console.log(mm.some(['foo.js', 'bar.js'], ['*.js', '!foo.js']));\r\n * // true\r\n * console.log(mm.some(['foo.js'], ['*.js', '!foo.js']));\r\n * // false\r\n * ```\r\n * @param {String|Array} `list` The string or array of strings to test. Returns as soon as the first match is found.\r\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\r\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\r\n * @return {Boolean} Returns true if any `patterns` matches any of the strings in `list`\r\n * @api public\r\n */\r\n\r\nmicromatch.some = (list, patterns, options) => {\r\n  let items = [].concat(list);\r\n\r\n  for (let pattern of [].concat(patterns)) {\r\n    let isMatch = picomatch(String(pattern), options);\r\n    if (items.some(item => isMatch(item))) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\n/**\r\n * Returns true if every string in the given `list` matches\r\n * any of the given glob `patterns`.\r\n *\r\n * ```js\r\n * const mm = require('micromatch');\r\n * // mm.every(list, patterns[, options]);\r\n *\r\n * console.log(mm.every('foo.js', ['foo.js']));\r\n * // true\r\n * console.log(mm.every(['foo.js', 'bar.js'], ['*.js']));\r\n * // true\r\n * console.log(mm.every(['foo.js', 'bar.js'], ['*.js', '!foo.js']));\r\n * // false\r\n * console.log(mm.every(['foo.js'], ['*.js', '!foo.js']));\r\n * // false\r\n * ```\r\n * @param {String|Array} `list` The string or array of strings to test.\r\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\r\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\r\n * @return {Boolean} Returns true if all `patterns` matches all of the strings in `list`\r\n * @api public\r\n */\r\n\r\nmicromatch.every = (list, patterns, options) => {\r\n  let items = [].concat(list);\r\n\r\n  for (let pattern of [].concat(patterns)) {\r\n    let isMatch = picomatch(String(pattern), options);\r\n    if (!items.every(item => isMatch(item))) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n};\r\n\r\n/**\r\n * Returns true if **all** of the given `patterns` match\r\n * the specified string.\r\n *\r\n * ```js\r\n * const mm = require('micromatch');\r\n * // mm.all(string, patterns[, options]);\r\n *\r\n * console.log(mm.all('foo.js', ['foo.js']));\r\n * // true\r\n *\r\n * console.log(mm.all('foo.js', ['*.js', '!foo.js']));\r\n * // false\r\n *\r\n * console.log(mm.all('foo.js', ['*.js', 'foo.js']));\r\n * // true\r\n *\r\n * console.log(mm.all('foo.js', ['*.js', 'f*', '*o*', '*o.js']));\r\n * // true\r\n * ```\r\n * @param {String|Array} `str` The string to test.\r\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\r\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\r\n * @return {Boolean} Returns true if any patterns match `str`\r\n * @api public\r\n */\r\n\r\nmicromatch.all = (str, patterns, options) => {\r\n  if (typeof str !== 'string') {\r\n    throw new TypeError(`Expected a string: \"${util.inspect(str)}\"`);\r\n  }\r\n\r\n  return [].concat(patterns).every(p => picomatch(p, options)(str));\r\n};\r\n\r\n/**\r\n * Returns an array of matches captured by `pattern` in `string, or `null` if the pattern did not match.\r\n *\r\n * ```js\r\n * const mm = require('micromatch');\r\n * // mm.capture(pattern, string[, options]);\r\n *\r\n * console.log(mm.capture('test/*.js', 'test/foo.js'));\r\n * //=> ['foo']\r\n * console.log(mm.capture('test/*.js', 'foo/bar.css'));\r\n * //=> null\r\n * ```\r\n * @param {String} `glob` Glob pattern to use for matching.\r\n * @param {String} `input` String to match\r\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\r\n * @return {Array|null} Returns an array of captures if the input matches the glob pattern, otherwise `null`.\r\n * @api public\r\n */\r\n\r\nmicromatch.capture = (glob, input, options) => {\r\n  let posix = utils.isWindows(options);\r\n  let regex = picomatch.makeRe(String(glob), { ...options, capture: true });\r\n  let match = regex.exec(posix ? utils.toPosixSlashes(input) : input);\r\n\r\n  if (match) {\r\n    return match.slice(1).map(v => v === void 0 ? '' : v);\r\n  }\r\n};\r\n\r\n/**\r\n * Create a regular expression from the given glob `pattern`.\r\n *\r\n * ```js\r\n * const mm = require('micromatch');\r\n * // mm.makeRe(pattern[, options]);\r\n *\r\n * console.log(mm.makeRe('*.js'));\r\n * //=> /^(?:(\\.[\\\\\\/])?(?!\\.)(?=.)[^\\/]*?\\.js)$/\r\n * ```\r\n * @param {String} `pattern` A glob pattern to convert to regex.\r\n * @param {Object} `options`\r\n * @return {RegExp} Returns a regex created from the given pattern.\r\n * @api public\r\n */\r\n\r\nmicromatch.makeRe = (...args) => picomatch.makeRe(...args);\r\n\r\n/**\r\n * Scan a glob pattern to separate the pattern into segments. Used\r\n * by the [split](#split) method.\r\n *\r\n * ```js\r\n * const mm = require('micromatch');\r\n * const state = mm.scan(pattern[, options]);\r\n * ```\r\n * @param {String} `pattern`\r\n * @param {Object} `options`\r\n * @return {Object} Returns an object with\r\n * @api public\r\n */\r\n\r\nmicromatch.scan = (...args) => picomatch.scan(...args);\r\n\r\n/**\r\n * Parse a glob pattern to create the source string for a regular\r\n * expression.\r\n *\r\n * ```js\r\n * const mm = require('micromatch');\r\n * const state = mm.parse(pattern[, options]);\r\n * ```\r\n * @param {String} `glob`\r\n * @param {Object} `options`\r\n * @return {Object} Returns an object with useful properties and output to be used as regex source string.\r\n * @api public\r\n */\r\n\r\nmicromatch.parse = (patterns, options) => {\r\n  let res = [];\r\n  for (let pattern of [].concat(patterns || [])) {\r\n    for (let str of braces(String(pattern), options)) {\r\n      res.push(picomatch.parse(str, options));\r\n    }\r\n  }\r\n  return res;\r\n};\r\n\r\n/**\r\n * Process the given brace `pattern`.\r\n *\r\n * ```js\r\n * const { braces } = require('micromatch');\r\n * console.log(braces('foo/{a,b,c}/bar'));\r\n * //=> [ 'foo/(a|b|c)/bar' ]\r\n *\r\n * console.log(braces('foo/{a,b,c}/bar', { expand: true }));\r\n * //=> [ 'foo/a/bar', 'foo/b/bar', 'foo/c/bar' ]\r\n * ```\r\n * @param {String} `pattern` String with brace pattern to process.\r\n * @param {Object} `options` Any [options](#options) to change how expansion is performed. See the [braces][] library for all available options.\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nmicromatch.braces = (pattern, options) => {\r\n  if (typeof pattern !== 'string') throw new TypeError('Expected a string');\r\n  if ((options && options.nobrace === true) || !hasBraces(pattern)) {\r\n    return [pattern];\r\n  }\r\n  return braces(pattern, options);\r\n};\r\n\r\n/**\r\n * Expand braces\r\n */\r\n\r\nmicromatch.braceExpand = (pattern, options) => {\r\n  if (typeof pattern !== 'string') throw new TypeError('Expected a string');\r\n  return micromatch.braces(pattern, { ...options, expand: true });\r\n};\r\n\r\n/**\r\n * Expose micromatch\r\n */\r\n\r\n// exposed for tests\r\nmicromatch.hasBraces = hasBraces;\r\nmodule.exports = micromatch;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.match = void 0;\r\nconst isGlob = require(\"is-glob\");\r\nconst micromatch = require(\"micromatch\");\r\nconst url = require(\"url\");\r\nconst errors_1 = require(\"./errors\");\r\nfunction match(context, uri, req) {\r\n    // single path\r\n    if (isStringPath(context)) {\r\n        return matchSingleStringPath(context, uri);\r\n    }\r\n    // single glob path\r\n    if (isGlobPath(context)) {\r\n        return matchSingleGlobPath(context, uri);\r\n    }\r\n    // multi path\r\n    if (Array.isArray(context)) {\r\n        if (context.every(isStringPath)) {\r\n            return matchMultiPath(context, uri);\r\n        }\r\n        if (context.every(isGlobPath)) {\r\n            return matchMultiGlobPath(context, uri);\r\n        }\r\n        throw new Error(errors_1.ERRORS.ERR_CONTEXT_MATCHER_INVALID_ARRAY);\r\n    }\r\n    // custom matching\r\n    if (typeof context === 'function') {\r\n        const pathname = getUrlPathName(uri);\r\n        return context(pathname, req);\r\n    }\r\n    throw new Error(errors_1.ERRORS.ERR_CONTEXT_MATCHER_GENERIC);\r\n}\r\nexports.match = match;\r\n/**\r\n * @param  {String} context '/api'\r\n * @param  {String} uri     'http://example.org/api/b/c/d.html'\r\n * @return {Boolean}\r\n */\r\nfunction matchSingleStringPath(context, uri) {\r\n    const pathname = getUrlPathName(uri);\r\n    return pathname.indexOf(context) === 0;\r\n}\r\nfunction matchSingleGlobPath(pattern, uri) {\r\n    const pathname = getUrlPathName(uri);\r\n    const matches = micromatch([pathname], pattern);\r\n    return matches && matches.length > 0;\r\n}\r\nfunction matchMultiGlobPath(patternList, uri) {\r\n    return matchSingleGlobPath(patternList, uri);\r\n}\r\n/**\r\n * @param  {String} contextList ['/api', '/ajax']\r\n * @param  {String} uri     'http://example.org/api/b/c/d.html'\r\n * @return {Boolean}\r\n */\r\nfunction matchMultiPath(contextList, uri) {\r\n    let isMultiPath = false;\r\n    for (const context of contextList) {\r\n        if (matchSingleStringPath(context, uri)) {\r\n            isMultiPath = true;\r\n            break;\r\n        }\r\n    }\r\n    return isMultiPath;\r\n}\r\n/**\r\n * Parses URI and returns RFC 3986 path\r\n *\r\n * @param  {String} uri from req.url\r\n * @return {String}     RFC 3986 path\r\n */\r\nfunction getUrlPathName(uri) {\r\n    return uri && url.parse(uri).pathname;\r\n}\r\nfunction isStringPath(context) {\r\n    return typeof context === 'string' && !isGlob(context);\r\n}\r\nfunction isGlobPath(context) {\r\n    return isGlob(context);\r\n}\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getHandlers = exports.init = void 0;\r\nconst logger_1 = require(\"./logger\");\r\nconst logger = (0, logger_1.getInstance)();\r\nfunction init(proxy, option) {\r\n    const handlers = getHandlers(option);\r\n    for (const eventName of Object.keys(handlers)) {\r\n        proxy.on(eventName, handlers[eventName]);\r\n    }\r\n    // https://github.com/webpack/webpack-dev-server/issues/1642\r\n    proxy.on('econnreset', (error, req, res, target) => {\r\n        logger.error(`[HPM] ECONNRESET: %O`, error);\r\n    });\r\n    // https://github.com/webpack/webpack-dev-server/issues/1642#issuecomment-1104325120\r\n    proxy.on('proxyReqWs', (proxyReq, req, socket, options, head) => {\r\n        socket.on('error', (error) => {\r\n            logger.error(`[HPM] WebSocket error: %O`, error);\r\n        });\r\n    });\r\n    logger.debug('[HPM] Subscribed to http-proxy events:', Object.keys(handlers));\r\n}\r\nexports.init = init;\r\nfunction getHandlers(options) {\r\n    // https://github.com/nodejitsu/node-http-proxy#listening-for-proxy-events\r\n    const proxyEventsMap = {\r\n        error: 'onError',\r\n        proxyReq: 'onProxyReq',\r\n        proxyReqWs: 'onProxyReqWs',\r\n        proxyRes: 'onProxyRes',\r\n        open: 'onOpen',\r\n        close: 'onClose',\r\n    };\r\n    const handlers = {};\r\n    for (const [eventName, onEventName] of Object.entries(proxyEventsMap)) {\r\n        // all handlers for the http-proxy events are prefixed with 'on'.\r\n        // loop through options and try to find these handlers\r\n        // and add them to the handlers object for subscription in init().\r\n        const fnHandler = options ? options[onEventName] : null;\r\n        if (typeof fnHandler === 'function') {\r\n            handlers[eventName] = fnHandler;\r\n        }\r\n    }\r\n    // add default error handler in absence of error handler\r\n    if (typeof handlers.error !== 'function') {\r\n        handlers.error = defaultErrorHandler;\r\n    }\r\n    // add default close handler in absence of close handler\r\n    if (typeof handlers.close !== 'function') {\r\n        handlers.close = logClose;\r\n    }\r\n    return handlers;\r\n}\r\nexports.getHandlers = getHandlers;\r\nfunction defaultErrorHandler(err, req, res) {\r\n    // Re-throw error. Not recoverable since req & res are empty.\r\n    if (!req && !res) {\r\n        throw err; // \"Error: Must provide a proper URL as target\"\r\n    }\r\n    const host = req.headers && req.headers.host;\r\n    const code = err.code;\r\n    if (res.writeHead && !res.headersSent) {\r\n        if (/HPE_INVALID/.test(code)) {\r\n            res.writeHead(502);\r\n        }\r\n        else {\r\n            switch (code) {\r\n                case 'ECONNRESET':\r\n                case 'ENOTFOUND':\r\n                case 'ECONNREFUSED':\r\n                case 'ETIMEDOUT':\r\n                    res.writeHead(504);\r\n                    break;\r\n                default:\r\n                    res.writeHead(500);\r\n            }\r\n        }\r\n    }\r\n    res.end(`Error occurred while trying to proxy: ${host}${req.url}`);\r\n}\r\nfunction logClose(req, socket, head) {\r\n    // view disconnected websocket connections\r\n    logger.info('[HPM] Client disconnected');\r\n}\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.createPathRewriter = void 0;\r\nconst isPlainObj = require(\"is-plain-obj\");\r\nconst errors_1 = require(\"./errors\");\r\nconst logger_1 = require(\"./logger\");\r\nconst logger = (0, logger_1.getInstance)();\r\n/**\r\n * Create rewrite function, to cache parsed rewrite rules.\r\n *\r\n * @param {Object} rewriteConfig\r\n * @return {Function} Function to rewrite paths; This function should accept `path` (request.url) as parameter\r\n */\r\nfunction createPathRewriter(rewriteConfig) {\r\n    let rulesCache;\r\n    if (!isValidRewriteConfig(rewriteConfig)) {\r\n        return;\r\n    }\r\n    if (typeof rewriteConfig === 'function') {\r\n        const customRewriteFn = rewriteConfig;\r\n        return customRewriteFn;\r\n    }\r\n    else {\r\n        rulesCache = parsePathRewriteRules(rewriteConfig);\r\n        return rewritePath;\r\n    }\r\n    function rewritePath(path) {\r\n        let result = path;\r\n        for (const rule of rulesCache) {\r\n            if (rule.regex.test(path)) {\r\n                result = result.replace(rule.regex, rule.value);\r\n                logger.debug('[HPM] Rewriting path from \"%s\" to \"%s\"', path, result);\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}\r\nexports.createPathRewriter = createPathRewriter;\r\nfunction isValidRewriteConfig(rewriteConfig) {\r\n    if (typeof rewriteConfig === 'function') {\r\n        return true;\r\n    }\r\n    else if (isPlainObj(rewriteConfig)) {\r\n        return Object.keys(rewriteConfig).length !== 0;\r\n    }\r\n    else if (rewriteConfig === undefined || rewriteConfig === null) {\r\n        return false;\r\n    }\r\n    else {\r\n        throw new Error(errors_1.ERRORS.ERR_PATH_REWRITER_CONFIG);\r\n    }\r\n}\r\nfunction parsePathRewriteRules(rewriteConfig) {\r\n    const rules = [];\r\n    if (isPlainObj(rewriteConfig)) {\r\n        for (const [key] of Object.entries(rewriteConfig)) {\r\n            rules.push({\r\n                regex: new RegExp(key),\r\n                value: rewriteConfig[key],\r\n            });\r\n            logger.info('[HPM] Proxy rewrite rule created: \"%s\" ~> \"%s\"', key, rewriteConfig[key]);\r\n        }\r\n    }\r\n    return rules;\r\n}\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getTarget = void 0;\r\nconst isPlainObj = require(\"is-plain-obj\");\r\nconst logger_1 = require(\"./logger\");\r\nconst logger = (0, logger_1.getInstance)();\r\nasync function getTarget(req, config) {\r\n    let newTarget;\r\n    const router = config.router;\r\n    if (isPlainObj(router)) {\r\n        newTarget = getTargetFromProxyTable(req, router);\r\n    }\r\n    else if (typeof router === 'function') {\r\n        newTarget = await router(req);\r\n    }\r\n    return newTarget;\r\n}\r\nexports.getTarget = getTarget;\r\nfunction getTargetFromProxyTable(req, table) {\r\n    let result;\r\n    const host = req.headers.host;\r\n    const path = req.url;\r\n    const hostAndPath = host + path;\r\n    for (const [key] of Object.entries(table)) {\r\n        if (containsPath(key)) {\r\n            if (hostAndPath.indexOf(key) > -1) {\r\n                // match 'localhost:3000/api'\r\n                result = table[key];\r\n                logger.debug('[HPM] Router table match: \"%s\"', key);\r\n                break;\r\n            }\r\n        }\r\n        else {\r\n            if (key === host) {\r\n                // match 'localhost:3000'\r\n                result = table[key];\r\n                logger.debug('[HPM] Router table match: \"%s\"', host);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction containsPath(v) {\r\n    return v.indexOf('/') > -1;\r\n}\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.HttpProxyMiddleware = void 0;\r\nconst httpProxy = require(\"http-proxy\");\r\nconst config_factory_1 = require(\"./config-factory\");\r\nconst contextMatcher = require(\"./context-matcher\");\r\nconst handlers = require(\"./_handlers\");\r\nconst logger_1 = require(\"./logger\");\r\nconst PathRewriter = require(\"./path-rewriter\");\r\nconst Router = require(\"./router\");\r\nclass HttpProxyMiddleware {\r\n    constructor(context, opts) {\r\n        this.logger = (0, logger_1.getInstance)();\r\n        this.wsInternalSubscribed = false;\r\n        this.serverOnCloseSubscribed = false;\r\n        // https://github.com/Microsoft/TypeScript/wiki/'this'-in-TypeScript#red-flags-for-this\r\n        this.middleware = async (req, res, next) => {\r\n            var _a, _b;\r\n            if (this.shouldProxy(this.config.context, req)) {\r\n                try {\r\n                    const activeProxyOptions = await this.prepareProxyRequest(req);\r\n                    this.proxy.web(req, res, activeProxyOptions);\r\n                }\r\n                catch (err) {\r\n                    next(err);\r\n                }\r\n            }\r\n            else {\r\n                next();\r\n            }\r\n            /**\r\n             * Get the server object to subscribe to server events;\r\n             * 'upgrade' for websocket and 'close' for graceful shutdown\r\n             *\r\n             * NOTE:\r\n             * req.socket: node >= 13\r\n             * req.connection: node < 13 (Remove this when node 12/13 support is dropped)\r\n             */\r\n            const server = (_b = ((_a = req.socket) !== null && _a !== void 0 ? _a : req.connection)) === null || _b === void 0 ? void 0 : _b.server;\r\n            if (server && !this.serverOnCloseSubscribed) {\r\n                server.on('close', () => {\r\n                    this.logger.info('[HPM] server close signal received: closing proxy server');\r\n                    this.proxy.close();\r\n                });\r\n                this.serverOnCloseSubscribed = true;\r\n            }\r\n            if (this.proxyOptions.ws === true) {\r\n                // use initial request to access the server object to subscribe to http upgrade event\r\n                this.catchUpgradeRequest(server);\r\n            }\r\n        };\r\n        this.catchUpgradeRequest = (server) => {\r\n            if (!this.wsInternalSubscribed) {\r\n                server.on('upgrade', this.handleUpgrade);\r\n                // prevent duplicate upgrade handling;\r\n                // in case external upgrade is also configured\r\n                this.wsInternalSubscribed = true;\r\n            }\r\n        };\r\n        this.handleUpgrade = async (req, socket, head) => {\r\n            if (this.shouldProxy(this.config.context, req)) {\r\n                const activeProxyOptions = await this.prepareProxyRequest(req);\r\n                this.proxy.ws(req, socket, head, activeProxyOptions);\r\n                this.logger.info('[HPM] Upgrading to WebSocket');\r\n            }\r\n        };\r\n        /**\r\n         * Determine whether request should be proxied.\r\n         *\r\n         * @private\r\n         * @param  {String} context [description]\r\n         * @param  {Object} req     [description]\r\n         * @return {Boolean}\r\n         */\r\n        this.shouldProxy = (context, req) => {\r\n            try {\r\n                const path = req.originalUrl || req.url;\r\n                return contextMatcher.match(context, path, req);\r\n            }\r\n            catch (error) {\r\n                this.logger.error(error);\r\n                return false;\r\n            }\r\n        };\r\n        /**\r\n         * Apply option.router and option.pathRewrite\r\n         * Order matters:\r\n         *    Router uses original path for routing;\r\n         *    NOT the modified path, after it has been rewritten by pathRewrite\r\n         * @param {Object} req\r\n         * @return {Object} proxy options\r\n         */\r\n        this.prepareProxyRequest = async (req) => {\r\n            // https://github.com/chimurai/http-proxy-middleware/issues/17\r\n            // https://github.com/chimurai/http-proxy-middleware/issues/94\r\n            req.url = req.originalUrl || req.url;\r\n            // store uri before it gets rewritten for logging\r\n            const originalPath = req.url;\r\n            const newProxyOptions = Object.assign({}, this.proxyOptions);\r\n            // Apply in order:\r\n            // 1. option.router\r\n            // 2. option.pathRewrite\r\n            await this.applyRouter(req, newProxyOptions);\r\n            await this.applyPathRewrite(req, this.pathRewriter);\r\n            // debug logging for both http(s) and websockets\r\n            if (this.proxyOptions.logLevel === 'debug') {\r\n                const arrow = (0, logger_1.getArrow)(originalPath, req.url, this.proxyOptions.target, newProxyOptions.target);\r\n                this.logger.debug('[HPM] %s %s %s %s', req.method, originalPath, arrow, newProxyOptions.target);\r\n            }\r\n            return newProxyOptions;\r\n        };\r\n        // Modify option.target when router present.\r\n        this.applyRouter = async (req, options) => {\r\n            let newTarget;\r\n            if (options.router) {\r\n                newTarget = await Router.getTarget(req, options);\r\n                if (newTarget) {\r\n                    this.logger.debug('[HPM] Router new target: %s -> \"%s\"', options.target, newTarget);\r\n                    options.target = newTarget;\r\n                }\r\n            }\r\n        };\r\n        // rewrite path\r\n        this.applyPathRewrite = async (req, pathRewriter) => {\r\n            if (pathRewriter) {\r\n                const path = await pathRewriter(req.url, req);\r\n                if (typeof path === 'string') {\r\n                    req.url = path;\r\n                }\r\n                else {\r\n                    this.logger.info('[HPM] pathRewrite: No rewritten path found. (%s)', req.url);\r\n                }\r\n            }\r\n        };\r\n        this.logError = (err, req, res, target) => {\r\n            var _a;\r\n            const hostname = ((_a = req.headers) === null || _a === void 0 ? void 0 : _a.host) || req.hostname || req.host; // (websocket) || (node0.10 || node 4/5)\r\n            const requestHref = `${hostname}${req.url}`;\r\n            const targetHref = `${target === null || target === void 0 ? void 0 : target.href}`; // target is undefined when websocket errors\r\n            const errorMessage = '[HPM] Error occurred while proxying request %s to %s [%s] (%s)';\r\n            const errReference = 'https://nodejs.org/api/errors.html#errors_common_system_errors'; // link to Node Common Systems Errors page\r\n            this.logger.error(errorMessage, requestHref, targetHref, err.code || err, errReference);\r\n        };\r\n        this.config = (0, config_factory_1.createConfig)(context, opts);\r\n        this.proxyOptions = this.config.options;\r\n        // create proxy\r\n        this.proxy = httpProxy.createProxyServer({});\r\n        this.logger.info(`[HPM] Proxy created: ${this.config.context}  -> ${this.proxyOptions.target}`);\r\n        this.pathRewriter = PathRewriter.createPathRewriter(this.proxyOptions.pathRewrite); // returns undefined when \"pathRewrite\" is not provided\r\n        // attach handler to http-proxy events\r\n        handlers.init(this.proxy, this.proxyOptions);\r\n        // log errors for debug purpose\r\n        this.proxy.on('error', this.logError);\r\n        // https://github.com/chimurai/http-proxy-middleware/issues/19\r\n        // expose function to upgrade externally\r\n        this.middleware.upgrade = (req, socket, head) => {\r\n            if (!this.wsInternalSubscribed) {\r\n                this.handleUpgrade(req, socket, head);\r\n            }\r\n        };\r\n    }\r\n}\r\nexports.HttpProxyMiddleware = HttpProxyMiddleware;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.responseInterceptor = void 0;\r\nconst zlib = require(\"zlib\");\r\n/**\r\n * Intercept responses from upstream.\r\n * Automatically decompress (deflate, gzip, brotli).\r\n * Give developer the opportunity to modify intercepted Buffer and http.ServerResponse\r\n *\r\n * NOTE: must set options.selfHandleResponse=true (prevent automatic call of res.end())\r\n */\r\nfunction responseInterceptor(interceptor) {\r\n    return async function proxyRes(proxyRes, req, res) {\r\n        const originalProxyRes = proxyRes;\r\n        let buffer = Buffer.from('', 'utf8');\r\n        // decompress proxy response\r\n        const _proxyRes = decompress(proxyRes, proxyRes.headers['content-encoding']);\r\n        // concat data stream\r\n        _proxyRes.on('data', (chunk) => (buffer = Buffer.concat([buffer, chunk])));\r\n        _proxyRes.on('end', async () => {\r\n            // copy original headers\r\n            copyHeaders(proxyRes, res);\r\n            // call interceptor with intercepted response (buffer)\r\n            const interceptedBuffer = Buffer.from(await interceptor(buffer, originalProxyRes, req, res));\r\n            // set correct content-length (with double byte character support)\r\n            res.setHeader('content-length', Buffer.byteLength(interceptedBuffer, 'utf8'));\r\n            res.write(interceptedBuffer);\r\n            res.end();\r\n        });\r\n        _proxyRes.on('error', (error) => {\r\n            res.end(`Error fetching proxied request: ${error.message}`);\r\n        });\r\n    };\r\n}\r\nexports.responseInterceptor = responseInterceptor;\r\n/**\r\n * Streaming decompression of proxy response\r\n * source: https://github.com/apache/superset/blob/9773aba522e957ed9423045ca153219638a85d2f/superset-frontend/webpack.proxy-config.js#L116\r\n */\r\nfunction decompress(proxyRes, contentEncoding) {\r\n    let _proxyRes = proxyRes;\r\n    let decompress;\r\n    switch (contentEncoding) {\r\n        case 'gzip':\r\n            decompress = zlib.createGunzip();\r\n            break;\r\n        case 'br':\r\n            decompress = zlib.createBrotliDecompress();\r\n            break;\r\n        case 'deflate':\r\n            decompress = zlib.createInflate();\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    if (decompress) {\r\n        _proxyRes.pipe(decompress);\r\n        _proxyRes = decompress;\r\n    }\r\n    return _proxyRes;\r\n}\r\n/**\r\n * Copy original headers\r\n * https://github.com/apache/superset/blob/9773aba522e957ed9423045ca153219638a85d2f/superset-frontend/webpack.proxy-config.js#L78\r\n */\r\nfunction copyHeaders(originalResponse, response) {\r\n    response.statusCode = originalResponse.statusCode;\r\n    response.statusMessage = originalResponse.statusMessage;\r\n    if (response.setHeader) {\r\n        let keys = Object.keys(originalResponse.headers);\r\n        // ignore chunked, brotli, gzip, deflate headers\r\n        keys = keys.filter((key) => !['content-encoding', 'transfer-encoding'].includes(key));\r\n        keys.forEach((key) => {\r\n            let value = originalResponse.headers[key];\r\n            if (key === 'set-cookie') {\r\n                // remove cookie domain\r\n                value = Array.isArray(value) ? value : [value];\r\n                value = value.map((x) => x.replace(/Domain=[^;]+?/i, ''));\r\n            }\r\n            response.setHeader(key, value);\r\n        });\r\n    }\r\n    else {\r\n        response.headers = originalResponse.headers;\r\n    }\r\n}\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.fixRequestBody = void 0;\r\nconst querystring = require(\"querystring\");\r\n/**\r\n * Fix proxied body if bodyParser is involved.\r\n */\r\nfunction fixRequestBody(proxyReq, req) {\r\n    // skip fixRequestBody() when req.readableLength not 0 (bodyParser failure)\r\n    if (req.readableLength !== 0) {\r\n        return;\r\n    }\r\n    const requestBody = req.body;\r\n    if (!requestBody) {\r\n        return;\r\n    }\r\n    const contentType = proxyReq.getHeader('Content-Type');\r\n    if (!contentType) {\r\n        return;\r\n    }\r\n    const writeBody = (bodyData) => {\r\n        // deepcode ignore ContentLengthInCode: bodyParser fix\r\n        proxyReq.setHeader('Content-Length', Buffer.byteLength(bodyData));\r\n        proxyReq.write(bodyData);\r\n    };\r\n    if (contentType.includes('application/json')) {\r\n        writeBody(JSON.stringify(requestBody));\r\n    }\r\n    else if (contentType.includes('application/x-www-form-urlencoded')) {\r\n        writeBody(querystring.stringify(requestBody));\r\n    }\r\n}\r\nexports.fixRequestBody = fixRequestBody;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.fixRequestBody = exports.responseInterceptor = void 0;\r\nvar response_interceptor_1 = require(\"./response-interceptor\");\r\nObject.defineProperty(exports, \"responseInterceptor\", { enumerable: true, get: function () { return response_interceptor_1.responseInterceptor; } });\r\nvar fix_request_body_1 = require(\"./fix-request-body\");\r\nObject.defineProperty(exports, \"fixRequestBody\", { enumerable: true, get: function () { return fix_request_body_1.fixRequestBody; } });\r\n", "\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__exportStar(require(\"./public\"), exports);\r\n", "\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.createProxyMiddleware = void 0;\r\nconst http_proxy_middleware_1 = require(\"./http-proxy-middleware\");\r\nfunction createProxyMiddleware(context, options) {\r\n    const { middleware } = new http_proxy_middleware_1.HttpProxyMiddleware(context, options);\r\n    return middleware;\r\n}\r\nexports.createProxyMiddleware = createProxyMiddleware;\r\n__exportStar(require(\"./handlers\"), exports);\r\n"],
  "mappings": "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",
  "names": ["key", "exports", "proxyReq", "proxyError", "head", "require_http_proxy", "require_http_proxy", "ERRORS", "LEVELS", "node", "max", "index", "require_constants", "require_utils", "require_parse", "opts", "value", "rest", "source", "state", "require_picomatch", "context", "decompress", "require_handlers", "exports", "exports"]
}
