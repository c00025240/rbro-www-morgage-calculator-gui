@use '../../_tokens.scss';

:host {
  display: block;
  width: 100%;
  font-family: var(--font-family-primary, "Amalia");
}

.ms-property-value {
  width: 100%;
  display: flex;
  flex-direction: column;
  
  // Label and helper now handled by ms-card-outside-title component

  &__content {
    // Layout only - ms-card component now provides background, border, radius, and padding
    display: flex;
    flex-direction: column;
    gap: var(--space-2, 8px);
    width: 100%; // Ensure card fills the available width
  }

  &__field-section {
    width: 100%;
  }

  &__slider-section {
    width: 100%;
    // Add vertical padding only
    padding: var(--space-2, 8px) 0; // Remove horizontal padding to fix alignment
  }

  &__slider {
    position: relative;
    width: 100%;
    height: 28px;
    display: flex;
    align-items: center;
    margin: 0; // Remove margin that was causing right shift
    
    // Prevent horizontal page scrolling during slider interaction
    touch-action: pan-y pinch-zoom; // Allow vertical scrolling and zoom, prevent horizontal
    overflow: visible; // Allow handle overflow to be visible
  }

  &__slider-track {
    position: absolute;
    top: 50%;
    left: 0;
    right: 0;
    height: 4px;
    background: var(--slider-track-bg-default);
    border-radius: 2px;
    transform: translateY(-50%);
    z-index: 1;
  }

  &__slider-progress {
    position: absolute;
    top: 50%;
    left: 0;
    height: 4px;
    background: var(--slider-progress-bg-default);
    border-radius: 2px;
    transform: translateY(-50%);
    transition: width 0.05s ease-out;
    z-index: 2;
    will-change: width; // Optimize for animation
  }

  &__slider-handle {
    position: absolute;
    top: 50%;
    width: 28px;
    height: 28px;
    background: var(--slider-thumb-bg-default);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    box-shadow: var(--slider-thumb-shadow-default);
    cursor: pointer;
    transition: left 0.05s ease-out, transform 0.15s ease-in-out;
    z-index: 3;
    pointer-events: none; // Let the input handle the interaction
    will-change: left, transform; // Optimize for animation
    
    &:hover {
      transform: translate(-50%, -50%) scale(1.1);
      background: var(--slider-thumb-bg-hover-default);
    }
  }

  &__slider-input {
    -webkit-appearance: none;
    appearance: none;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: transparent;
    outline: none;
    cursor: pointer;
    z-index: 4;
    margin: 0;
    
    // Prevent horizontal page scrolling during slider interaction
    touch-action: pan-y pinch-zoom; // Allow vertical scrolling and zoom, prevent horizontal
    overscroll-behavior-x: none; // Prevent horizontal overscroll

    // Hide all default styling
    &::-webkit-slider-thumb {
      -webkit-appearance: none;
      appearance: none;
      width: 28px;
      height: 28px;
      background: transparent;
      cursor: pointer;
      border: none;
    }

    &::-moz-range-thumb {
      width: 28px;
      height: 28px;
      background: transparent;
      cursor: pointer;
      border: none;
      border-radius: 0;
    }

    &::-webkit-slider-runnable-track {
      width: 100%;
      height: 28px;
      cursor: pointer;
      background: transparent;
      border: none;
    }

    &::-moz-range-track {
      width: 100%;
      height: 28px;
      cursor: pointer;
      background: transparent;
      border: none;
    }

    // Focus states
    &:focus {
      outline: none;
    }

    &:focus + .ms-property-value__slider-handle {
      box-shadow: var(--slider-thumb-shadow-default), 0 0 0 2px var(--slider-focus-ring-color-default);
    }

    // Disabled state
    &:disabled {
      cursor: default;
    }
  }

  // Update handle styling when input is focused
  &__slider:focus-within &__slider-handle {
    box-shadow: var(--slider-thumb-shadow-default), 0 0 0 2px var(--slider-focus-ring-color-default);
  }

  // Hover effect for the handle when hovering the slider area
  &__slider:hover &__slider-handle {
    transform: translate(-50%, -50%) scale(1.1);
  }
}

// Surface variants
:host(.ms-property-value-input--surface-light) {
  // Light surface styles handled by ms-card component
  
  // Custom slider styling for light surface
  .ms-property-value {
    &__slider-track {
      background: var(--slider-track-bg-light);
    }

    &__slider-progress {
      background: var(--slider-progress-bg-light);
    }

    &__slider-handle {
      background: var(--slider-thumb-bg-light);
      box-shadow: var(--slider-thumb-shadow-light);
      
      &:hover {
        background: var(--slider-thumb-bg-hover-light);
      }
    }

    // Update focus states for light surface
    &__slider:focus-within &__slider-handle {
      box-shadow: var(--slider-thumb-shadow-light), 0 0 0 2px var(--slider-focus-ring-color-light);
    }

    &__slider-input:focus + &__slider-handle {
      box-shadow: var(--slider-thumb-shadow-light), 0 0 0 2px var(--slider-focus-ring-color-light);
    }
  }
}

:host(.ms-property-value-input--surface-dark) {
  // Dark surface styles now handled by ms-card-outside-title component
  
  // Custom slider styling for dark mode
  .ms-property-value {
    &__slider-track {
      background: var(--slider-track-bg-dark);
    }

    &__slider-progress {
      background: var(--slider-progress-bg-dark);
    }

    &__slider-handle {
      background: var(--slider-thumb-bg-dark);
      box-shadow: var(--slider-thumb-shadow-dark);
      
      &:hover {
        background: var(--slider-thumb-bg-hover-dark);
      }
    }

    // Update focus states for dark mode
    &__slider:focus-within &__slider-handle {
      box-shadow: var(--slider-thumb-shadow-dark), 0 0 0 2px var(--slider-focus-ring-color-dark);
    }

    &__slider-input:focus + &__slider-handle {
      box-shadow: var(--slider-thumb-shadow-dark), 0 0 0 2px var(--slider-focus-ring-color-dark);
    }
  }
}

// Error state
:host(.ms-property-value-input--error) {
  // Error border styles could be handled by adding error state to ms-card in the future
  .ms-property-value {
    &__content {
      border-color: var(--color-error-primary);
    }
  }
}

// Disabled state
:host(.ms-property-value-input--disabled) {
  // Disabled styles now handled by ms-card-outside-title component
  .ms-property-value {
    // Background and border styles for disabled state could be handled by ms-card in the future
    &__content {
      background-color: transparent;
      border-color: var(--color-disabled);
    }
    
    &__slider-track {
      background: var(--slider-track-bg-disabled);
    }

    &__slider-progress {
      background: var(--slider-progress-bg-disabled);
    }

    &__slider-handle {
      background: var(--slider-thumb-bg-disabled);
      box-shadow: none;
      cursor: default;
      
      &:hover {
        background: var(--slider-thumb-bg-disabled);
        transform: translate(-50%, -50%); // Remove scale effect
      }
    }

    &__slider:hover &__slider-handle {
      transform: translate(-50%, -50%); // Remove scale effect for disabled state
    }

    &__slider-input {
      cursor: default;
    }
  }
} 